{
	"name": "pp_pbi_partitions_inventory",
	"properties": {
		"activities": [
			{
				"name": "get_pbi_distinct_details",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "@concat('SELECT distinct\npsi.PBI_GROUP_ID,\npsi.PBI_DATASET_ID\nFROM ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb, '.CONTROL.PBI_SNOWFLAKE_BRIDGE psi\nLEFT JOIN ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb, '.CONTROL.PBI_SNOWFLAKE_PARTITION_DETAILS pspd\nON psi.SNOWFLAKE_TABLE_NAME = concat(''V_'' ,pspd.SNOWFLAKE_TABLE_NAME)\nWHERE psi.PBI_DB_NAME = ''',pipeline().parameters.p_dataset_nm,\n''' and pspd.SNOWFLAKE_TABLE_NAME in (' , pipeline().parameters.p_table_nm, ') \nand replace(pspd.PARTITION,''Q'')::number < (year(current_date()) ||  quarter(current_date()) || to_char(current_date(),''MM''))::number\n' )\n",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "ds_snowflake",
						"type": "DatasetReference",
						"parameters": {
							"p_tgt_table_name": {
								"value": "@pipeline().parameters.p_tgt_audit_table_nm",
								"type": "Expression"
							},
							"p_tgt_schema_name": {
								"value": "@pipeline().parameters.p_tgt_audit_schema_nm",
								"type": "Expression"
							},
							"p_ls_DbName": {
								"value": "@pipeline().globalParameters.snow_auditDb",
								"type": "Expression"
							},
							"p_ls_Env": {
								"value": "@pipeline().globalParameters.environment",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "set_pbi_group_id",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get_pbi_distinct_details",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "v_pbi_group_id",
					"value": {
						"value": "@activity('get_pbi_distinct_details').output.firstRow.PBI_GROUP_ID",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_pbi_dataset_id",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "set_pbi_group_id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "v_dataset_id",
					"value": {
						"value": "@activity('get_pbi_distinct_details').output.firstRow.PBI_DATASET_ID",
						"type": "Expression"
					}
				}
			},
			{
				"name": "get_pbi_partition_details",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "set_pbi_dataset_id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "@concat('SELECT \npsi.PBI_DB_NAME, \npsi.PBI_TABLE_NAME,\npsi.PBI_GROUP_ID,\npsi.PBI_DATASET_ID,\npspd.PARTITION,\npspd.PARTITION_REFRESH_FLAG,\npspd.SNOWFLAKE_TABLE_NAME\nFROM ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb, '.CONTROL.PBI_SNOWFLAKE_BRIDGE psi\nLEFT JOIN ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb, '.CONTROL.PBI_SNOWFLAKE_PARTITION_DETAILS pspd\nON psi.SNOWFLAKE_TABLE_NAME = concat(''V_'' ,pspd.SNOWFLAKE_TABLE_NAME)\nWHERE psi.PBI_DB_NAME = ''',pipeline().parameters.p_dataset_nm,''' and pspd.PBI_DB_NAME = ''',pipeline().parameters.p_dataset_nm,\n''' and pspd.SNOWFLAKE_TABLE_NAME in (',pipeline().parameters.p_table_nm,') \nand replace(pspd.PARTITION,''Q'')::number < (year(current_date()) ||  quarter(current_date()) || to_char(current_date(),''MM''))::number\nand pspd.PARTITION_REFRESH_FLAG = TRUE')",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "ds_snowflake",
						"type": "DatasetReference",
						"parameters": {
							"p_tgt_table_name": {
								"value": "@pipeline().parameters.p_tgt_audit_table_nm",
								"type": "Expression"
							},
							"p_tgt_schema_name": {
								"value": "@pipeline().parameters.p_tgt_audit_schema_nm",
								"type": "Expression"
							},
							"p_ls_DbName": {
								"value": "@pipeline().globalParameters.snow_auditDb",
								"type": "Expression"
							},
							"p_ls_Env": {
								"value": "@pipeline().globalParameters.environment",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "create_refresh_objects",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "refresh_1950_partitions",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get_pbi_partition_details').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "construct_json",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "v_objects",
								"value": {
									"value": "@json(concat('', \n    concat(\n        '{ \"database\": \"', item().PBI_DB_NAME, \n        '\", \"table\": \"', item().PBI_TABLE_NAME, \n        '\", \"partition\": \"', item().PARTITION, '\" }'\n    ),\n''))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "construct_partition_false_update",
							"type": "AppendVariable",
							"dependsOn": [
								{
									"activity": "construct_json",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "v_objects_false_update",
								"value": {
									"value": "@concat('''',item().SNOWFLAKE_TABLE_NAME,item().PARTITION,'''')",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "append_1950_json",
				"type": "AppendVariable",
				"dependsOn": [
					{
						"activity": "create_refresh_objects",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "v_objects",
					"value": {
						"value": "@json(concat(\n    '{',\n        '\"database\": \"Inventory Gold Dataset\",',\n        '\"table\": \"Inventory Transactions\",',\n        '\"partition\": \"1950Q101\"',\n    '}'\n))\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "pbi_full_refresh",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "false_update_script",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.p_web_body_fullrefresh",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "loop_exit_condition_onFailure",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(variables('foreach_exit'),bool(0))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "refresh_full_dataset",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"policy": {
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "pp_pbi_refresh_api",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"p_group_id": {
													"value": "@variables('v_pbi_group_id')",
													"type": "Expression"
												},
												"p_dataset_id": {
													"value": "@variables('v_dataset_id')",
													"type": "Expression"
												},
												"p_web_body": {
													"value": "@item()",
													"type": "Expression"
												},
												"p_dataset_nm": {
													"value": "@pipeline().parameters.p_dataset_nm",
													"type": "Expression"
												},
												"p_webhook_url": {
													"value": "@pipeline().parameters.p_webhook_url",
													"type": "Expression"
												},
												"p_refreshType": "Full"
											}
										}
									},
									{
										"name": "foreach_exit",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "refresh_full_dataset",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "foreach_exit",
											"value": {
												"value": "@bool(1)",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Fail1",
										"type": "Fail",
										"dependsOn": [
											{
												"activity": "foreach_exit",
												"dependencyConditions": [
													"Completed"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"message": "Full Refresh - Pipeline failed as one of the API failed",
											"errorCode": "1111"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "refresh_pbi_succeeded",
				"description": "",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "pbi_full_refresh",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pp_pbi_notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"runId": {
							"value": "@coalesce(pipeline().RunId, -1)",
							"type": "Expression"
						},
						"name": {
							"value": "@pipeline().parameters.p_dataset_nm",
							"type": "Expression"
						},
						"triggerTime": {
							"value": "@pipeline().TriggerTime",
							"type": "Expression"
						},
						"status": {
							"value": "@concat('Succeeded')",
							"type": "Expression"
						},
						"message": {
							"value": "@concat('Dataset refresh is completed and can be used by the users for analysis')",
							"type": "Expression"
						},
						"executionEndTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"teamWebhookUrl": {
							"value": "@pipeline().parameters.p_webhook_url",
							"type": "Expression"
						},
						"notificationTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"extendedStatus": {
							"value": "@concat('Dataset is updated')",
							"type": "Expression"
						},
						"color": "008000",
						"refreshType": {
							"value": "@concat('Complete')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "refresh_1950_partitions",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "set_secret_key",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"Content-Type": "text/plain"
					},
					"url": {
						"value": "@concat(pipeline().parameters.p_fn_app_url)",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "IR-Snowflake-NALA",
						"type": "IntegrationRuntimeReference"
					},
					"body": {
						"value": "@concat('{    \n    \"serverName\": \"',pipeline().parameters.p_server_nm,'\",  \n    \"databaseName\": \"Inventory Gold Dataset\",   \n    \"tenantId\": \"',pipeline().globalParameters.pbi_tenant_id, '\",    \n    \"clientId\": \"', pipeline().globalParameters.pbi_service_principal_id,'\",   \n    \"clientSecret\": \"',variables('v_secret_key'), '\"\n}')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "refresh_partitions_dataset",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "append_1950_json",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pp_pbi_refresh_api",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"p_group_id": {
							"value": "@variables('v_pbi_group_id')",
							"type": "Expression"
						},
						"p_dataset_id": {
							"value": "@variables('v_dataset_id')",
							"type": "Expression"
						},
						"p_web_body": {
							"value": "@concat('{\n  \"type\": \"full\",\n  \"commitMode\": \"transactional\",\n  \"objects\": ', variables('v_objects'), ',\n  \"applyRefreshPolicy\": \"false\",\n  \"maxParallelism\" : \"30\",\n   \"retryCount\" : \"3\"\n}')",
							"type": "Expression"
						},
						"p_dataset_nm": {
							"value": "@pipeline().parameters.p_dataset_nm",
							"type": "Expression"
						},
						"p_webhook_url": {
							"value": "@pipeline().parameters.p_webhook_url",
							"type": "Expression"
						},
						"p_refreshType": "Partition"
					}
				}
			},
			{
				"name": "get_secret_key",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "refresh_inventory_transactions_current_month",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"url": {
						"value": "@concat(pipeline().globalParameters.key_vault_url, '/secrets/',pipeline().globalParameters.pbi_service_principal_key, '?api-version=7.0')",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "IR-Snowflake-NALA",
						"type": "IntegrationRuntimeReference"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "set_secret_key",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get_secret_key",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "v_secret_key",
					"value": {
						"value": "@activity('get_secret_key').output.value",
						"type": "Expression"
					}
				}
			},
			{
				"name": "false_update_script",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "refresh_partitions_dataset",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_snowflake",
					"type": "LinkedServiceReference",
					"parameters": {
						"ls_DbName": {
							"value": "@pipeline().globalParameters.snow_auditDb",
							"type": "Expression"
						},
						"ls_Env": {
							"value": "@pipeline().globalParameters.environment",
							"type": "Expression"
						}
					}
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat(\n'Update ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb,' .CONTROL.pbi_snowflake_partition_details set partition_refresh_flag = false\n where pbi_db_name = ''',pipeline().parameters.p_dataset_nm,\n''' and concat(SNOWFLAKE_TABLE_NAME,PARTITION) in (',\njoin(variables('v_objects_false_update'),','),\n')')",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "refresh_inventory_transactions_current_month",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "get_pbi_partition_details",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pp_pbi_refresh_api",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"p_group_id": {
							"value": "@variables('v_pbi_group_id')",
							"type": "Expression"
						},
						"p_dataset_id": {
							"value": "@variables('v_dataset_id')",
							"type": "Expression"
						},
						"p_web_body": {
							"value": "@concat('{\n  \"type\": \"full\",\n    \"objects\": [\n                {\n            \"database\": \"Inventory Gold Dataset\",\n            \"table\": \"Inventory Transactions\"\n        },\n    ],\n    \"applyRefreshPolicy\": \"true\"\n}')",
							"type": "Expression"
						},
						"p_dataset_nm": {
							"value": "@pipeline().parameters.p_dataset_nm",
							"type": "Expression"
						},
						"p_webhook_url": {
							"value": "@pipeline().parameters.p_webhook_url",
							"type": "Expression"
						},
						"p_refreshType": "Partition"
					}
				}
			}
		],
		"parameters": {
			"p_table_nm": {
				"type": "string",
				"defaultValue": "'FACT_INVENTORY_JOURNAL', 'FACT_INVENTORY_TRANSACTIONS','DIM_INVENTORY','DIM_LEDGER_DIMENSION'"
			},
			"p_tgt_audit_table_nm": {
				"type": "string",
				"defaultValue": "PBI_SNOWFLAKE_BRIDGE"
			},
			"p_tgt_audit_schema_nm": {
				"type": "string",
				"defaultValue": "CONTROL"
			},
			"p_dataset_nm": {
				"type": "string",
				"defaultValue": "Inventory Gold Dataset"
			},
			"p_webhook_url": {
				"type": "string",
				"defaultValue": "https://tempursealyinc.webhook.office.com/webhookb2/7aa89678-96e1-4bbf-a53a-a4ed05939336@7c6c07f6-1ef4-4368-8d5d-4686d15efd79/IncomingWebhook/35c330edb7cc4683bfaac3e236a6420e/4c6968dc-2ec8-4f99-b936-1206cdf30aeb/V2KnMhhdKI4Mq2eiqPuqxDOqrWneohuIGlozyB6D2X0dY1"
			},
			"p_web_body_fullrefresh": {
				"type": "array"
			},
			"p_fn_app_url": {
				"type": "string"
			},
			"p_server_nm": {
				"type": "string"
			}
		},
		"variables": {
			"v_objects": {
				"type": "Array"
			},
			"v_pbi_group_id": {
				"type": "String"
			},
			"v_dataset_id": {
				"type": "String"
			},
			"foreach_exit": {
				"type": "Boolean",
				"defaultValue": false
			},
			"v_objects_false_update": {
				"type": "Array"
			},
			"v_secret_key": {
				"type": "String"
			}
		},
		"folder": {
			"name": "pbi_incremental_refresh"
		},
		"annotations": []
	}
}