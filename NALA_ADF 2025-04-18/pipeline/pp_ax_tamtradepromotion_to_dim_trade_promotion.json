{
	"name": "pp_ax_tamtradepromotion_to_dim_trade_promotion",
	"properties": {
		"activities": [
			{
				"name": "raw_to_curate_sp_call",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "load_dim_trade_promotion",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_snowflake",
					"type": "LinkedServiceReference",
					"parameters": {
						"ls_DbName": {
							"value": "@pipeline().globalParameters.snow_auditDb",
							"type": "Expression"
						},
						"ls_Env": {
							"value": "@pipeline().globalParameters.environment",
							"type": "Expression"
						}
					}
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('CALL ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb,'.CONTROL.SP_TASK_INITIALIZE(','''',pipeline().RunId,'''',',','''',pipeline().globalParameters.environment,'''',',','''',pipeline().parameters.p_tgt_curate_table_nm,'''',',',pipeline().parameters.p_src_code,')')",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "stored_procedure_failure_notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "raw_to_curate_sp_call",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pp_adf_pipeline_notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"subscription": {
							"value": "@pipeline().globalParameters.subscriptionId",
							"type": "Expression"
						},
						"resourceGroup": {
							"value": "@pipeline().globalParameters.resourceGroup",
							"type": "Expression"
						},
						"runId": {
							"value": "@coalesce(pipeline().RunId, -1)",
							"type": "Expression"
						},
						"name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"triggerTime": {
							"value": "@pipeline().TriggerTime",
							"type": "Expression"
						},
						"status": {
							"value": "@activity('raw_to_curate_sp_call').Status",
							"type": "Expression"
						},
						"message": {
							"value": "@activity('raw_to_curate_sp_call').Error['message']",
							"type": "Expression"
						},
						"executionEndTime": {
							"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
							"type": "Expression"
						},
						"runDuration": {
							"value": "@activity('raw_to_curate_sp_call').Duration",
							"type": "Expression"
						},
						"teamWebhookUrl": {
							"value": "@pipeline().globalParameters.teamsWebhookUrl",
							"type": "Expression"
						},
						"notificationTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"taskName": {
							"value": "@pipeline().parameters.p_tgt_curate_table_nm",
							"type": "Expression"
						},
						"taskStepNumber": {
							"value": "@pipeline().parameters.p_src_code",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "lkp_raw_last_modified_date",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "@concat('select max(to_varchar(LATEST_MODIFIEDDATETIME::timestamp, ''','yyyy-mm-dd hh24:mi:ss',''')) as max_date from ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_rawDb,'.',pipeline().parameters.p_tgt_raw_schema_nm, '.', pipeline().parameters.p_tgt_raw_table_nm)",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "ds_snowflake",
						"type": "DatasetReference",
						"parameters": {
							"p_tgt_table_name": {
								"value": "@pipeline().parameters.p_tgt_raw_table_nm",
								"type": "Expression"
							},
							"p_tgt_schema_name": {
								"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
								"type": "Expression"
							},
							"p_ls_DbName": {
								"value": "@pipeline().globalParameters.snow_rawDb",
								"type": "Expression"
							},
							"p_ls_Env": {
								"value": "@pipeline().globalParameters.environment",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "set_last_modified_date",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "lkp_raw_last_modified_date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "v_prev_max_timestamp",
					"value": {
						"value": "@coalesce(activity('lkp_raw_last_modified_date').output.firstRow.max_date, '1950-01-01 00:00:00')\n\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "switch_nala_d365",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "set_last_modified_date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@pipeline().parameters.p_src_code",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "1",
							"activities": [
								{
									"name": "tamtradepromotion_to_adls_nala",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "HK_JOB_RUN_ID",
													"value": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													}
												},
												{
													"name": "HK_SOURCE_NAME",
													"value": {
														"value": "@pipeline().parameters.p_src_nm",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "SELECT\nttp1.dataareaid as DATAAREAID\n,ttp1.promotionid as PROMOTIONID\n,ttp1.promotiondescription as PROMOTIONDESCRIPTION\n,ttp1.activity as ACTIVITY\n,ttp1.currency as CURRENCY\n,ttp1.hcmworkerid as HCMWORKERID\n,ttp1.ordersenddate as ORDERSENDDATE\n,ttp1.ordersstartdate as ORDERSSTARTDATE\n,ttp1.promotionstatus as PROMOTIONSTATUS\n,ttp1.tpxdealtype as TPXDEALTYPE\n,ttp1.unitid as UNITID\n,ttp1.tpxdealid as TPXDEALID\n,ttp1.mcstamdealstatus as MCSTAMDEALSTATUS\n,ttp1.modifieddatetime as MODIFIEDDATETIME\n,c1.txt as CURRENCY_TXT\n,c1.modifieddatetime as CURRENCY_MODIFIEDDATETIME\n,hw1.person as HCMWORKER_PERSON\n,hw1.modifieddatetime as HCMWORKER_MODIFIEDDATETIME\n,dpt1.name as DIRPARTYTABLE_NAME\n,dpt1.modifieddatetime as DIRPARTYTABLE_MODIFIEDDATETIME\n,uom1.symbol as UNITOFMEASURE_SYMBOL\n,uom1.modifieddatetime as UNITOFMEASURE_MODIFIEDDATETIME\n,uomt1.description as UNITOFMEASURETRANSLATION_DESCRIPTION\n,uomt1.modifieddatetime as UNITOFMEASURETRANSLATION_MODIFIEDDATETIME\n,tet1.enumvaluelabel as TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_PROMOTIONSTATUS\n,tet2.enumvaluelabel as TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_TPXDEALTYPE\n,tet3.enumvaluelabel as TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_TPXDEALTYPE\n,(SELECT MAX(LastUpdateDate)\nFROM ( \t\t\t\tVALUES\n        (ttp1.modifieddatetime),\n        ( isnull( c1.modifieddatetime, '1950-01-01' )),\n        ( isnull( hw1.modifieddatetime, '1950-01-01' )),\n        ( isnull( dpt1.modifieddatetime, '1950-01-01' )),\n\t\t( isnull( uom1.modifieddatetime, '1950-01-01' )),\n        ( isnull( uomt1.modifieddatetime, '1950-01-01' ))) AS UpdateDate(LastUpdateDate)\n) AS LATEST_MODIFIEDDATETIME \nFROM\ndbo.TAMTRADEPROMOTION ttp1\nleft join dbo.CURRENCY c1 on\n\tttp1.CURRENCY = c1.CURRENCYCODE\nleft join dbo.HCMWORKER hw1 on\n\tttp1.HCMWORKERID = hw1.RECID\nleft join dbo.DIRPARTYTABLE dpt1 on\n\thw1.PERSON = dpt1.RECID\nleft join dbo.UNITOFMEASURE uom1 on\n\tttp1.UNITID = uom1.SYMBOL\nleft join dbo.UNITOFMEASURETRANSLATION uomt1 on\n\tuomt1.LANGUAGEID = 'en-us' and\n\tuom1.RECID = uomt1.UNITOFMEASURE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'TAMStatus'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet1 on\n\tttp1.PROMOTIONSTATUS = tet1.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'TpxCmSubsidiesDiscountType'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet2 on\n\tttp1.TPXDEALTYPE = tet2.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'TpxCmSubsidyHeaderDealType'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet3 on\n\tttp1.TPXDEALTYPE = tet3.ENUMVALUE",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "ls_blob_storage",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@pipeline().globalParameters.rootDir",
												"type": "Expression"
											},
											"enableCompression": true
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DATAAREAID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DATAAREAID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PROMOTIONID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "PROMOTIONID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PROMOTIONDESCRIPTION",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "PROMOTIONDESCRIPTION",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ACTIVITY",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "ACTIVITY",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "CURRENCY",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CURRENCY",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "HCMWORKERID",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "HCMWORKERID",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "ORDERSENDDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "ORDERSENDDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "ORDERSSTARTDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "ORDERSSTARTDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "PROMOTIONSTATUS",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "PROMOTIONSTATUS",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "TPXDEALTYPE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TPXDEALTYPE",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "UNITID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "UNITID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TPXDEALID",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TPXDEALID",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "MCSTAMDEALSTATUS",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "MCSTAMDEALSTATUS",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "CURRENCY_TXT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CURRENCY_TXT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CURRENCY_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CURRENCY_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "HCMWORKER_PERSON",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "HCMWORKER_PERSON",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "HCMWORKER_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "HCMWORKER_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "DIRPARTYTABLE_NAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DIRPARTYTABLE_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DIRPARTYTABLE_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DIRPARTYTABLE_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "UNITOFMEASURE_SYMBOL",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "UNITOFMEASURE_SYMBOL",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "UNITOFMEASURE_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "UNITOFMEASURE_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "UNITOFMEASURETRANSLATION_DESCRIPTION",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "UNITOFMEASURETRANSLATION_DESCRIPTION",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "UNITOFMEASURETRANSLATION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "UNITOFMEASURETRANSLATION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_PROMOTIONSTATUS",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_PROMOTIONSTATUS",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_TPXDEALTYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_TPXDEALTYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_TPXDEALTYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_TPXDEALTYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													},
													"sink": {
														"name": "HK_JOB_RUN_ID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "HK_SOURCE_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sql_server",
											"type": "DatasetReference",
											"parameters": {
												"p_src_table_name": {
													"value": "@pipeline().parameters.p_src_table_nm",
													"type": "Expression"
												},
												"p_src_schema_name": {
													"value": "@pipeline().parameters.p_src_schema_nm",
													"type": "Expression"
												},
												"p_ls_serverName": {
													"value": "@pipeline().globalParameters.nala_sql_serverName",
													"type": "Expression"
												},
												"p_ls_dbName": {
													"value": "@pipeline().globalParameters.nala_sql_dbName",
													"type": "Expression"
												},
												"p_ls_sqlUsername": {
													"value": "@pipeline().globalParameters.sql_userName",
													"type": "Expression"
												},
												"p_ls_sqlPassword": {
													"value": "@pipeline().globalParameters.sql_password",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"p_directory": {
													"value": "@pipeline().parameters.p_temp_directory",
													"type": "Expression"
												},
												"p_root_system": {
													"value": "@pipeline().globalParameters.rootDir",
													"type": "Expression"
												},
												"p_file_name": {
													"value": "@pipeline().parameters.p_temp_file_1",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "nala_raw_load_failure_notification_1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "tamtradepromotion_to_adls_nala",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('tamtradepromotion_to_adls_nala').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@replace(replace(replace(activity('tamtradepromotion_to_adls_nala').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('tamtradepromotion_to_adls_nala').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('tamtradepromotion_to_adls_nala').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "sql_nala_load_to_raw_fail_1",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "nala_raw_load_failure_notification_1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('tamtradepromotion_to_adls_nala').Error['message']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								},
								{
									"name": "deal_to_adls_nala",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "SELECT\nd1.dealid as DEALID\n,d1.dealdesc as DEALDESC\n,d1.lasteditdate as LASTEDITDATE\nFROM sls.Deal d1\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "ls_blob_storage",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@pipeline().globalParameters.rootDir",
												"type": "Expression"
											},
											"enableCompression": true
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DEALID",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "DEALID",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "DEALDESC",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DEALDESC",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LASTEDITDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "LASTEDITDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sql_server",
											"type": "DatasetReference",
											"parameters": {
												"p_src_table_name": {
													"value": "@pipeline().parameters.p_src_table_nm",
													"type": "Expression"
												},
												"p_src_schema_name": {
													"value": "@pipeline().parameters.p_src_schema_nm",
													"type": "Expression"
												},
												"p_ls_serverName": {
													"value": "@pipeline().globalParameters.athena_sql_serverName",
													"type": "Expression"
												},
												"p_ls_dbName": {
													"value": "@pipeline().globalParameters.athena_sql_dbName",
													"type": "Expression"
												},
												"p_ls_sqlUsername": {
													"value": "@pipeline().globalParameters.sql_userName",
													"type": "Expression"
												},
												"p_ls_sqlPassword": {
													"value": "@pipeline().globalParameters.sql_password",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"p_directory": {
													"value": "@pipeline().parameters.p_temp_directory",
													"type": "Expression"
												},
												"p_root_system": {
													"value": "@pipeline().globalParameters.rootDir",
													"type": "Expression"
												},
												"p_file_name": {
													"value": "@pipeline().parameters.p_temp_file_2",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "nala_raw_load_failure_notification_2",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "deal_to_adls_nala",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('deal_to_adls_nala').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@replace(replace(replace(activity('deal_to_adls_nala').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('deal_to_adls_nala').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('deal_to_adls_nala').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "sql_nala_load_to_raw_fail_2",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "nala_raw_load_failure_notification_2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('deal_to_adls_nala').Error['message']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								}
							]
						},
						{
							"value": "3",
							"activities": [
								{
									"name": "tamtradepromotion_to_adls_d365",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "WarehouseSource",
											"additionalColumns": [
												{
													"name": "HK_JOB_RUN_ID",
													"value": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													}
												},
												{
													"name": "HK_SOURCE_NAME",
													"value": {
														"value": "@pipeline().parameters.p_src_nm",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "SELECT\nttp1.dataareaid as dataareaid\n,ttp1.promotionid as promotionid\n,ttp1.promotiondescription as promotiondescription\n,ttp1.activity as activity\n,ttp1.currency as currency\n,ttp1.hcmworkerid as hcmworkerid\n,ttp1.ordersenddate as ordersenddate\n,ttp1.ordersstartdate as ordersstartdate\n,ttp1.promotionstatus as promotionstatus\n,ttp1.tpxdealtype as tpxdealtype\n,ttp1.unitid as unitid\n,ttp1.tpxdealid as tpxdealid\n,ttp1.mcstamdealstatus as mcstamdealstatus\n,ttp1.modifieddatetime as modifieddatetime\n,c1.txt as currency_txt\n,c1.modifieddatetime as currency_modifieddatetime\n,hw1.person as hcmworker_person\n,hw1.modifieddatetime as hcmworker_modifieddatetime\n,dpt1.name as dirpartytable_name\n,dpt1.modifieddatetime as dirpartytable_modifieddatetime\n,uom1.symbol as unitofmeasure_symbol\n,uom1.modifieddatetime as unitofmeasure_modifieddatetime\n,uomt1.description as unitofmeasuretranslation_description\n,uomt1.modifieddatetime as unitofmeasuretranslation_modifieddatetime\n,tet1.enumvaluelabel as timextenderenumtable1_enumvaluelabel_promotionstatus\n,tet2.enumvaluelabel as timextenderenumtable2_enumvaluelabel_tpxdealtype\n,tet3.enumvaluelabel as timextenderenumtable3_enumvaluelabel_tpxdealtype\n,(select max(lastupdatedate)\nfrom ( \t\t\t\tvalues\n        (ttp1.modifieddatetime),\n        ( isnull( c1.modifieddatetime, '1950-01-01' )),\n        ( isnull( hw1.modifieddatetime, '1950-01-01' )),\n        ( isnull( dpt1.modifieddatetime, '1950-01-01' )),\n\t\t( isnull( uom1.modifieddatetime, '1950-01-01' )),\n        ( isnull( uomt1.modifieddatetime, '1950-01-01' ))) as updatedate(lastupdatedate)\n) as latest_modifieddatetime \nfrom\ndataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.tamtradepromotion ttp1\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.currency c1 on\n\tttp1.currency = c1.currencycode\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.hcmworker hw1 on\n\tttp1.hcmworkerid = hw1.recid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dirpartytable dpt1 on\n\thw1.person = dpt1.recid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.unitofmeasure uom1 on\n\tttp1.unitid = uom1.symbol\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.unitofmeasuretranslation uomt1 on\n\tuomt1.languageid = 'en-us' and\n\tuom1.recid = uomt1.unitofmeasure\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as enumvaluelabel\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'tamstatus'\n\t\tgroup by enumname, enumvalue) tet1 on\n\tttp1.promotionstatus = tet1.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as enumvaluelabel\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'tpxcmsubsidiesdiscounttype'\n\t\tgroup by enumname, enumvalue) tet2 on\n\tttp1.tpxdealtype = tet2.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as enumvaluelabel\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'tpxcmsubsidyheaderdealtype'\n\t\tgroup by enumname, enumvalue) tet3 on\n\tttp1.tpxdealtype = tet3.enumvalue\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "ls_blob_storage",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@pipeline().globalParameters.rootDir",
												"type": "Expression"
											},
											"enableCompression": true
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "dataareaid",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "dataareaid",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "promotionid",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "promotionid",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "promotiondescription",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "promotiondescription",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "activity",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "activity",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "currency",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "currency",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "hcmworkerid",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "hcmworkerid",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "ordersenddate",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "ordersenddate",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "ordersstartdate",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "ordersstartdate",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "promotionstatus",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "promotionstatus",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "tpxdealtype",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "tpxdealtype",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "unitid",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "unitid",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "tpxdealid",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "tpxdealid",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "mcstamdealstatus",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "mcstamdealstatus",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "modifieddatetime",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "modifieddatetime",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "currency_txt",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "currency_txt",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "currency_modifieddatetime",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "currency_modifieddatetime",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "hcmworker_person",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "hcmworker_person",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "hcmworker_modifieddatetime",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "hcmworker_modifieddatetime",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "dirpartytable_name",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "dirpartytable_name",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "dirpartytable_modifieddatetime",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "dirpartytable_modifieddatetime",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "unitofmeasure_symbol",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "unitofmeasure_symbol",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "unitofmeasure_modifieddatetime",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "unitofmeasure_modifieddatetime",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "unitofmeasuretranslation_description",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "unitofmeasuretranslation_description",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "unitofmeasuretranslation_modifieddatetime",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "unitofmeasuretranslation_modifieddatetime",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "timextenderenumtable1_enumvaluelabel_promotionstatus",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "timextenderenumtable1_enumvaluelabel_promotionstatus",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "timextenderenumtable2_enumvaluelabel_tpxdealtype",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "timextenderenumtable2_enumvaluelabel_tpxdealtype",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "timextenderenumtable3_enumvaluelabel_tpxdealtype",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "timextenderenumtable3_enumvaluelabel_tpxdealtype",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "latest_modifieddatetime",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "latest_modifieddatetime",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													},
													"sink": {
														"name": "HK_JOB_RUN_ID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "HK_SOURCE_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_fabric_wh",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"p_directory": {
													"value": "@pipeline().parameters.p_temp_directory",
													"type": "Expression"
												},
												"p_root_system": {
													"value": "@pipeline().globalParameters.rootDir",
													"type": "Expression"
												},
												"p_file_name": {
													"value": "@pipeline().parameters.p_temp_file_1",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "d365_raw_load_failure_notification_1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "tamtradepromotion_to_adls_d365",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('tamtradepromotion_to_adls_d365').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@replace(replace(replace(activity('tamtradepromotion_to_adls_d365').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('tamtradepromotion_to_adls_d365').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('tamtradepromotion_to_adls_d365').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "sql_d365_load_to_raw_fail_1_copy1",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "d365_raw_load_failure_notification_1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('tamtradepromotion_to_adls_d365').Error['message']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								},
								{
									"name": "deal_to_adls_d365",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "SELECT\nd1.dealid as DEALID\n,d1.dealdesc as DEALDESC\n,d1.lasteditdate as LASTEDITDATE\nFROM sls.Deal d1\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "ls_blob_storage",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@pipeline().globalParameters.rootDir",
												"type": "Expression"
											},
											"enableCompression": true
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DEALID",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "DEALID",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "DEALDESC",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DEALDESC",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LASTEDITDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "LASTEDITDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sql_server",
											"type": "DatasetReference",
											"parameters": {
												"p_src_table_name": {
													"value": "@pipeline().parameters.p_src_table_nm",
													"type": "Expression"
												},
												"p_src_schema_name": {
													"value": "@pipeline().parameters.p_src_schema_nm",
													"type": "Expression"
												},
												"p_ls_serverName": {
													"value": "@pipeline().globalParameters.athena_sql_serverName",
													"type": "Expression"
												},
												"p_ls_dbName": {
													"value": "@pipeline().globalParameters.athena_sql_dbName",
													"type": "Expression"
												},
												"p_ls_sqlUsername": {
													"value": "@pipeline().globalParameters.sql_userName",
													"type": "Expression"
												},
												"p_ls_sqlPassword": {
													"value": "@pipeline().globalParameters.sql_password",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"p_directory": {
													"value": "@pipeline().parameters.p_temp_directory",
													"type": "Expression"
												},
												"p_root_system": {
													"value": "@pipeline().globalParameters.rootDir",
													"type": "Expression"
												},
												"p_file_name": {
													"value": "@pipeline().parameters.p_temp_file_2",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "d365_raw_load_failure_notification_2",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "deal_to_adls_d365",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('deal_to_adls_d365').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@replace(replace(replace(activity('deal_to_adls_d365').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('deal_to_adls_d365').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('deal_to_adls_d365').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "sql_d365_load_to_raw_fail_2",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "d365_raw_load_failure_notification_2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('deal_to_adls_d365').Error['message']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "pipeline_execution_notification",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "raw_to_curate_sp_call",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@if(equals(activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE'],'TRUE'),bool('TRUE'), bool('FALSE'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "pp_stored_procedure_failure_notification",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pp_adf_pipeline_notification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"subscription": {
										"value": "@pipeline().globalParameters.subscriptionId",
										"type": "Expression"
									},
									"resourceGroup": {
										"value": "@pipeline().globalParameters.resourceGroup",
										"type": "Expression"
									},
									"runId": {
										"value": "@coalesce(pipeline().RunId, -1)",
										"type": "Expression"
									},
									"name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"triggerTime": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"status": {
										"value": "@toUpper('failed')",
										"type": "Expression"
									},
									"message": {
										"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
										"type": "Expression"
									},
									"executionEndTime": {
										"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
										"type": "Expression"
									},
									"runDuration": {
										"value": "@activity('raw_to_curate_sp_call').Duration",
										"type": "Expression"
									},
									"teamWebhookUrl": {
										"value": "@pipeline().globalParameters.teamsWebhookUrl",
										"type": "Expression"
									},
									"notificationTime": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"taskName": "@pipeline().parameters.p_tgt_curate_table_nm",
									"taskStepNumber": {
										"value": "@pipeline().parameters.p_src_code",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "curate_load_failure",
							"type": "Fail",
							"dependsOn": [
								{
									"activity": "pp_stored_procedure_failure_notification",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"message": {
									"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
									"type": "Expression"
								},
								"errorCode": "500"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "stored_procedure_success_notification",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pp_adf_pipeline_notification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"subscription": {
										"value": "@pipeline().globalParameters.subscriptionId",
										"type": "Expression"
									},
									"resourceGroup": {
										"value": "@pipeline().globalParameters.resourceGroup",
										"type": "Expression"
									},
									"runId": {
										"value": "@coalesce(pipeline().RunId, -1)",
										"type": "Expression"
									},
									"name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"triggerTime": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"status": {
										"value": "@activity('raw_to_curate_sp_call').Status",
										"type": "Expression"
									},
									"message": {
										"value": "@concat(pipeline().parameters.p_tgt_curate_table_nm, ' is successfully loaded')",
										"type": "Expression"
									},
									"executionEndTime": {
										"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
										"type": "Expression"
									},
									"runDuration": {
										"value": "@activity('raw_to_curate_sp_call').Duration",
										"type": "Expression"
									},
									"teamWebhookUrl": {
										"value": "@pipeline().globalParameters.teamsWebhookUrl",
										"type": "Expression"
									},
									"notificationTime": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"taskName": {
										"value": "@pipeline().parameters.p_tgt_curate_table_nm",
										"type": "Expression"
									},
									"taskStepNumber": {
										"value": "@pipeline().parameters.p_src_code",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "dataflow_failure_notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "load_dim_trade_promotion",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pp_adf_pipeline_notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"subscription": {
							"value": "@pipeline().globalParameters.subscriptionId",
							"type": "Expression"
						},
						"resourceGroup": {
							"value": "@pipeline().globalParameters.resourceGroup",
							"type": "Expression"
						},
						"runId": {
							"value": "@coalesce(pipeline().RunId, -1)",
							"type": "Expression"
						},
						"name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"triggerTime": {
							"value": "@pipeline().TriggerTime",
							"type": "Expression"
						},
						"status": {
							"value": "@activity('load_dim_trade_promotion').Status",
							"type": "Expression"
						},
						"message": {
							"value": "@activity('load_dim_trade_promotion').Error['message']",
							"type": "Expression"
						},
						"executionEndTime": {
							"value": "@activity('load_dim_trade_promotion').ExecutionEndTime",
							"type": "Expression"
						},
						"runDuration": {
							"value": "@activity('load_dim_trade_promotion').Duration",
							"type": "Expression"
						},
						"teamWebhookUrl": {
							"value": "@pipeline().globalParameters.teamsWebhookUrl",
							"type": "Expression"
						},
						"notificationTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"taskName": "@pipeline().parameters.p_tgt_curate_table_nm",
						"taskStepNumber": {
							"value": "@pipeline().parameters.p_src_code",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "load_dim_trade_promotion",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "switch_nala_d365",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "df_load_dim_trade_promotion",
						"type": "DataFlowReference",
						"parameters": {
							"df_prev_max_timestamp": {
								"value": "'@{variables('v_prev_max_timestamp')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"SrcTamTradePromotion": {
								"p_directory": {
									"value": "@pipeline().parameters.p_temp_directory",
									"type": "Expression"
								},
								"p_root_system": {
									"value": "@pipeline().globalParameters.rootDir",
									"type": "Expression"
								},
								"p_file_name": {
									"value": "@pipeline().parameters.p_temp_file_1",
									"type": "Expression"
								}
							},
							"SrcDeal": {
								"p_directory": {
									"value": "@pipeline().parameters.p_temp_directory",
									"type": "Expression"
								},
								"p_root_system": {
									"value": "@pipeline().globalParameters.rootDir",
									"type": "Expression"
								},
								"p_file_name": {
									"value": "@pipeline().parameters.p_temp_file_2",
									"type": "Expression"
								}
							},
							"TamTradePromotion": {
								"p_tgt_table_name": {
									"value": "@pipeline().parameters.p_tgt_raw_table_nm",
									"type": "Expression"
								},
								"p_tgt_schema_name": {
									"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
									"type": "Expression"
								},
								"p_ls_DbName": {
									"value": "@pipeline().globalParameters.snow_rawDb",
									"type": "Expression"
								},
								"p_ls_Env": {
									"value": "@pipeline().globalParameters.environment",
									"type": "Expression"
								}
							}
						}
					},
					"integrationRuntime": {
						"referenceName": "IR-Snowflake-NALA",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"parameters": {
			"p_src_nm": {
				"type": "string",
				"defaultValue": "AXNALA"
			},
			"p_tgt_curate_table_nm": {
				"type": "string",
				"defaultValue": "DIM_TRADE_PROMOTION"
			},
			"p_tgt_raw_table_nm": {
				"type": "string",
				"defaultValue": "TAMTRADEPROMOTION"
			},
			"p_tgt_raw_schema_nm": {
				"type": "string",
				"defaultValue": "AX_NALA"
			},
			"p_tgt_curate_schema_nm": {
				"type": "string",
				"defaultValue": "GLOBAL"
			},
			"p_src_table_nm": {
				"type": "string",
				"defaultValue": "TAMTRADEPROMOTION"
			},
			"p_src_schema_nm": {
				"type": "string",
				"defaultValue": "dbo"
			},
			"p_temp_file_1": {
				"type": "string",
				"defaultValue": "tamtradepromotion_nala.parquet"
			},
			"p_temp_file_2": {
				"type": "string",
				"defaultValue": "deal_tbl_nala.parquet"
			},
			"p_temp_directory": {
				"type": "string",
				"defaultValue": "temp_files"
			},
			"p_src_code": {
				"type": "string",
				"defaultValue": "1"
			}
		},
		"variables": {
			"v_prev_max_timestamp": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-06-04T13:47:58Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}