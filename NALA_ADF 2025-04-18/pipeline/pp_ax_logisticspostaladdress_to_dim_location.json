{
	"name": "pp_ax_logisticspostaladdress_to_dim_location",
	"properties": {
		"activities": [
			{
				"name": "get_last_modifieddatetime_FipsZipsXref",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_fipszipxref_excel",
						"type": "DatasetReference"
					},
					"fieldList": [
						"itemName",
						"lastModified"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "get_last_modifieddatetime_GeoXref",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_geoxref_excel",
						"type": "DatasetReference"
					},
					"fieldList": [
						"itemName",
						"lastModified"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "get_last_modifieddatetime_ISPA Region",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_isparegion_excel",
						"type": "DatasetReference"
					},
					"fieldList": [
						"itemName",
						"lastModified"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "lkp_raw_last_modified_date",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "switch_nala_retail_d365",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "@concat('select max(to_varchar(LATEST_MODIFIEDDATETIME::timestamp, ''','yyyy-mm-dd hh24:mi:ss',''')) as max_date from ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_rawDb,'.',pipeline().parameters.p_tgt_raw_schema_nm, '.', pipeline().parameters.p_tgt_raw_table_nm)",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "ds_snowflake",
						"type": "DatasetReference",
						"parameters": {
							"p_tgt_table_name": {
								"value": "@pipeline().parameters.p_tgt_raw_table_nm",
								"type": "Expression"
							},
							"p_tgt_schema_name": {
								"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
								"type": "Expression"
							},
							"p_ls_DbName": {
								"value": "@pipeline().globalParameters.snow_rawDb",
								"type": "Expression"
							},
							"p_ls_Env": {
								"value": "@pipeline().globalParameters.environment",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "set_last_modified_date",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "lkp_raw_last_modified_date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "v_prev_max_timestamp",
					"value": {
						"value": "@coalesce(activity('lkp_raw_last_modified_date').output.firstRow.max_date, '1950-01-01 00:00:00')\n\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_ts_fipsZipsXref",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get_last_modifieddatetime_FipsZipsXref",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "v_lst_mod_tmstmp_fipsXref",
					"value": {
						"value": "@coalesce(activity('get_last_modifieddatetime_FipsZipsXref').output.lastModified, '1950-01-01 00:00:00')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_ts_geoXref",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get_last_modifieddatetime_GeoXref",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "v_lst_mod_tmstmp_geoXref",
					"value": {
						"value": "@coalesce(activity('get_last_modifieddatetime_GeoXref').output.lastModified, '1950-01-01 00:00:00')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_ts_ISPARegion",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get_last_modifieddatetime_ISPA Region",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "v_lst_mod_tmstmp_ispaRegion",
					"value": {
						"value": "@coalesce(activity('get_last_modifieddatetime_ISPA Region').output.lastModified,'1950-01-01 00:00:00')\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "raw_to_curate_sp_call",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "load_dim_location",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_snowflake",
					"type": "LinkedServiceReference",
					"parameters": {
						"ls_DbName": {
							"value": "@pipeline().globalParameters.snow_rawDb",
							"type": "Expression"
						},
						"ls_Env": {
							"value": "@pipeline().globalParameters.environment",
							"type": "Expression"
						}
					}
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('CALL ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb,'.CONTROL.SP_TASK_INITIALIZE(','''',pipeline().RunId,'''',',','''',pipeline().globalParameters.environment,'''',',','''',pipeline().parameters.p_tgt_curate_table_nm,'''',',',pipeline().parameters.p_src_code,')')",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "raw_to_curate_storedprocedure_failure_notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "raw_to_curate_sp_call",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pp_adf_pipeline_notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"subscription": {
							"value": "@pipeline().globalParameters.subscriptionId",
							"type": "Expression"
						},
						"resourceGroup": {
							"value": "@pipeline().globalParameters.resourceGroup",
							"type": "Expression"
						},
						"runId": {
							"value": "@coalesce(pipeline().RunId, -1)",
							"type": "Expression"
						},
						"name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"triggerTime": {
							"value": "@pipeline().TriggerTime",
							"type": "Expression"
						},
						"status": {
							"value": "@activity('raw_to_curate_sp_call').Status",
							"type": "Expression"
						},
						"message": {
							"value": "@activity('raw_to_curate_sp_call').Error['message']",
							"type": "Expression"
						},
						"executionEndTime": {
							"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
							"type": "Expression"
						},
						"runDuration": {
							"value": "@activity('raw_to_curate_sp_call').Duration",
							"type": "Expression"
						},
						"teamWebhookUrl": {
							"value": "@pipeline().globalParameters.teamsWebhookUrl",
							"type": "Expression"
						},
						"notificationTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"taskName": {
							"value": "@pipeline().parameters.p_tgt_curate_table_nm",
							"type": "Expression"
						},
						"taskStepNumber": {
							"value": "@pipeline().parameters.p_src_code",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "load_dim_location_failure_notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "load_dim_location",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pp_adf_pipeline_notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"subscription": {
							"value": "@pipeline().globalParameters.subscriptionId",
							"type": "Expression"
						},
						"resourceGroup": {
							"value": "@pipeline().globalParameters.resourceGroup",
							"type": "Expression"
						},
						"runId": {
							"value": "@coalesce(pipeline().RunId, -1)",
							"type": "Expression"
						},
						"name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"triggerTime": {
							"value": "@pipeline().TriggerTime",
							"type": "Expression"
						},
						"status": {
							"value": "@activity('load_dim_location').Status",
							"type": "Expression"
						},
						"message": {
							"value": "@activity('load_dim_location').Error['message']",
							"type": "Expression"
						},
						"executionEndTime": {
							"value": "@activity('load_dim_location').ExecutionEndTime",
							"type": "Expression"
						},
						"runDuration": {
							"value": "@activity('load_dim_location').Duration",
							"type": "Expression"
						},
						"teamWebhookUrl": {
							"value": "@pipeline().globalParameters.teamsWebhookUrl",
							"type": "Expression"
						},
						"notificationTime": {
							"value": "@utcNow()",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "load_dim_location",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "set_last_modified_date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "df_load_dim_location",
						"type": "DataFlowReference",
						"parameters": {
							"df_prev_max_ts_FipsZipsXref": {
								"value": "'@{variables('v_lst_mod_tmstmp_fipsXref')}'",
								"type": "Expression"
							},
							"df_prev_max_ts_GeoXref": {
								"value": "'@{variables('v_lst_mod_tmstmp_geoXref')}'",
								"type": "Expression"
							},
							"df_prev_max_ts_ISPARegion": {
								"value": "'@{variables('v_lst_mod_tmstmp_ispaRegion')}'",
								"type": "Expression"
							},
							"df_prev_max_raw_postalAddr": {
								"value": "'@{variables('v_prev_max_timestamp')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"srcLocationParquet": {
								"p_directory": {
									"value": "@pipeline().parameters.p_temp_directory",
									"type": "Expression"
								},
								"p_root_system": {
									"value": "@pipeline().globalParameters.rootDir",
									"type": "Expression"
								},
								"p_file_name": {
									"value": "@pipeline().parameters.p_temp_file_nm",
									"type": "Expression"
								}
							},
							"logisticsPostalAddress": {
								"p_tgt_table_name": {
									"value": "@pipeline().parameters.p_tgt_raw_table_nm",
									"type": "Expression"
								},
								"p_tgt_schema_name": {
									"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
									"type": "Expression"
								},
								"p_ls_DbName": {
									"value": "@pipeline().globalParameters.snow_rawDb",
									"type": "Expression"
								},
								"p_ls_Env": {
									"value": "@pipeline().globalParameters.environment",
									"type": "Expression"
								}
							}
						}
					},
					"integrationRuntime": {
						"referenceName": "IR-Snowflake-NALA",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "switch_nala_retail_d365",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "set_ts_fipsZipsXref",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set_ts_geoXref",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set_ts_ISPARegion",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@pipeline().parameters.p_src_code",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "1",
							"activities": [
								{
									"name": "sql_nala_to_adls",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "HK_JOB_RUN_ID",
													"value": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													}
												},
												{
													"name": "HK_SOURCE_NAME",
													"value": {
														"value": "@pipeline().parameters.p_src_nm",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select \nlpa1.RECID,\nlpa1.CITY,\nlpa1.COUNTY,\nlpa1.COUNTRYREGIONID,\nlpa1.LATITUDE,\nlpa1.LONGITUDE,\nlpa1.ZIPCODE,\nlpa1.STATE,\nlpa1.STREET,\nlpa1.ISPRIVATE,\nlpa1.MODIFIEDDATETIME,\nll1.LOCATIONID,\nll1.DESCRIPTION,\nll1.MODIFIEDDATETIME as LOGISTICSLOCATION_MODIFIEDDATETIME,\ntzl1.TIMEZONEKEYNAME\nfrom\ndbo.LOGISTICSPOSTALADDRESS lpa1\nleft join dbo.LOGISTICSLOCATION ll1 on lpa1.LOCATION = ll1.RECID\nleft join dbo.TIMEZONESLIST tzl1 on lpa1.TIMEZONE = tzl1.TZENUM",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "RECID",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "RECID",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "CITY",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CITY",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "COUNTY",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "COUNTY",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "COUNTRYREGIONID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "COUNTRYREGIONID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LATITUDE",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "LATITUDE",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "LONGITUDE",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "LONGITUDE",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "ZIPCODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "ZIPCODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "STATE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "STATE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "STREET",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "STREET",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ISPRIVATE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "ISPRIVATE",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "LOCATIONID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOCATIONID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DESCRIPTION",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DESCRIPTION",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSLOCATION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "LOGISTICSLOCATION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "TIMEZONEKEYNAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEZONEKEYNAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													},
													"sink": {
														"name": "HK_JOB_RUN_ID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "HK_SOURCE_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sql_server",
											"type": "DatasetReference",
											"parameters": {
												"p_src_table_name": {
													"value": "@pipeline().parameters.p_src_table_nm",
													"type": "Expression"
												},
												"p_src_schema_name": {
													"value": "@pipeline().parameters.p_src_schema_nm",
													"type": "Expression"
												},
												"p_ls_serverName": {
													"value": "@pipeline().globalParameters.nala_sql_serverName",
													"type": "Expression"
												},
												"p_ls_dbName": {
													"value": "@pipeline().globalParameters.nala_sql_dbName",
													"type": "Expression"
												},
												"p_ls_sqlUsername": {
													"value": "@pipeline().globalParameters.sql_userName",
													"type": "Expression"
												},
												"p_ls_sqlPassword": {
													"value": "@pipeline().globalParameters.sql_password",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"p_directory": {
													"value": "@pipeline().parameters.p_temp_directory",
													"type": "Expression"
												},
												"p_root_system": {
													"value": "@pipeline().globalParameters.rootDir",
													"type": "Expression"
												},
												"p_file_name": {
													"value": "@pipeline().parameters.p_temp_file_nm",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "nala_raw_load_failure_notification",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "sql_nala_to_adls",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "nala_load_excel_to_raw",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('sql_nala_to_adls').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@replace(replace(replace(activity('sql_nala_to_adls').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('sql_nala_to_adls').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('sql_nala_to_adls').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "sql_nala_load_to_raw_fail",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "nala_raw_load_failure_notification",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('sql_nala_to_adls').Error['message']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								},
								{
									"name": "nala_load_excel_to_raw",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"additionalColumns": [
												{
													"name": "HK_JOB_RUN_ID",
													"value": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													}
												},
												{
													"name": "HK_SOURCE_NAME",
													"value": {
														"value": "@pipeline().parameters.p_src_nm",
														"type": "Expression"
													}
												},
												{
													"name": "GEO_MODIFIEDDATETIME",
													"value": {
														"value": "@variables('v_lst_mod_tmstmp_geoXref')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "SnowflakeSink",
											"preCopyScript": {
												"value": "@concat('TRUNCATE TABLE ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_rawDb,'.',pipeline().parameters.p_tgt_raw_schema_nm, '.', pipeline().parameters.p_tgt_raw_table_nm_2)",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "ls_blob_storage",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@pipeline().globalParameters.rootDir",
												"type": "Expression"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													},
													"sink": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "FIPSCode",
														"type": "String"
													},
													"sink": {
														"name": "FIPSCODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RegionCode",
														"type": "String"
													},
													"sink": {
														"name": "REGIONCODE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RegionLongName",
														"type": "String"
													},
													"sink": {
														"name": "REGIONLONGNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DistrictCode",
														"type": "String"
													},
													"sink": {
														"name": "DISTRICTCODE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DistrictLongName",
														"type": "String"
													},
													"sink": {
														"name": "DISTRICTLONGNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SMACode",
														"type": "String"
													},
													"sink": {
														"name": "SMACODE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SMALongName",
														"type": "String"
													},
													"sink": {
														"name": "SMALONGNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BTACode",
														"type": "String"
													},
													"sink": {
														"name": "BTACODE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BTALongName",
														"type": "String"
													},
													"sink": {
														"name": "BTALONGNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MsCntyLongName",
														"type": "String"
													},
													"sink": {
														"name": "MSCNTYLONGNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "GEO_MODIFIEDDATETIME",
														"type": "String"
													},
													"sink": {
														"name": "GEO_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ds_geoxref_excel",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "ds_snowflake",
											"type": "DatasetReference",
											"parameters": {
												"p_tgt_table_name": {
													"value": "@pipeline().parameters.p_tgt_raw_table_nm_2",
													"type": "Expression"
												},
												"p_tgt_schema_name": {
													"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
													"type": "Expression"
												},
												"p_ls_DbName": {
													"value": "@pipeline().globalParameters.snow_rawDb",
													"type": "Expression"
												},
												"p_ls_Env": {
													"value": "@pipeline().globalParameters.environment",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						},
						{
							"value": "2",
							"activities": [
								{
									"name": "sql_retail_to_adls",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "HK_JOB_RUN_ID",
													"value": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													}
												},
												{
													"name": "HK_SOURCE_NAME",
													"value": {
														"value": "@pipeline().parameters.p_src_nm",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select \nlpa1.RECID,\nlpa1.CITY,\nlpa1.COUNTY,\nlpa1.COUNTRYREGIONID,\nlpa1.LATITUDE,\nlpa1.LONGITUDE,\nlpa1.ZIPCODE,\nlpa1.STATE,\nlpa1.STREET,\nlpa1.ISPRIVATE,\nlpa1.MODIFIEDDATETIME,\nll1.LOCATIONID,\nll1.DESCRIPTION,\nll1.MODIFIEDDATETIME as LOGISTICSLOCATION_MODIFIEDDATETIME,\ntzl1.TIMEZONEKEYNAME\nfrom\ndbo.LOGISTICSPOSTALADDRESS lpa1\nleft join dbo.LOGISTICSLOCATION ll1 on lpa1.LOCATION = ll1.RECID\nleft join dbo.TIMEZONESLIST tzl1 on lpa1.TIMEZONE = tzl1.TZENUM",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "RECID",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "RECID",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "CITY",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CITY",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "COUNTY",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "COUNTY",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "COUNTRYREGIONID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "COUNTRYREGIONID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LATITUDE",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "LATITUDE",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "LONGITUDE",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "LONGITUDE",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "ZIPCODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "ZIPCODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "STATE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "STATE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "STREET",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "STREET",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ISPRIVATE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "ISPRIVATE",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "LOCATIONID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOCATIONID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DESCRIPTION",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DESCRIPTION",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSLOCATION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "LOGISTICSLOCATION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "TIMEZONEKEYNAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEZONEKEYNAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													},
													"sink": {
														"name": "HK_JOB_RUN_ID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "HK_SOURCE_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sql_server",
											"type": "DatasetReference",
											"parameters": {
												"p_src_table_name": {
													"value": "@pipeline().parameters.p_src_table_nm",
													"type": "Expression"
												},
												"p_src_schema_name": {
													"value": "@pipeline().parameters.p_src_schema_nm",
													"type": "Expression"
												},
												"p_ls_serverName": {
													"value": "@pipeline().globalParameters.retail_sql_serverName",
													"type": "Expression"
												},
												"p_ls_dbName": {
													"value": "@pipeline().globalParameters.retail_sql_dbName",
													"type": "Expression"
												},
												"p_ls_sqlUsername": {
													"value": "@pipeline().globalParameters.sql_userName",
													"type": "Expression"
												},
												"p_ls_sqlPassword": {
													"value": "@pipeline().globalParameters.sql_password",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"p_directory": {
													"value": "@pipeline().parameters.p_temp_directory",
													"type": "Expression"
												},
												"p_root_system": {
													"value": "@pipeline().globalParameters.rootDir",
													"type": "Expression"
												},
												"p_file_name": {
													"value": "@pipeline().parameters.p_temp_file_nm",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "sql_retail_raw_load_failure_notification",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "sql_retail_to_adls",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "retail_load_excel_to_raw",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('sql_retail_to_adls').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@replace(replace(replace(activity('sql_retail_to_adls').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('sql_retail_to_adls').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('sql_retail_to_adls').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "sql_retail_load_to_raw_fail",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "sql_retail_raw_load_failure_notification",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('sql_retail_to_adls').Error['message']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								},
								{
									"name": "retail_load_excel_to_raw",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"additionalColumns": [
												{
													"name": "HK_JOB_RUN_ID",
													"value": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													}
												},
												{
													"name": "HK_SOURCE_NAME",
													"value": {
														"value": "@pipeline().parameters.p_src_nm",
														"type": "Expression"
													}
												},
												{
													"name": "GEO_MODIFIEDDATETIME",
													"value": {
														"value": "@variables('v_lst_mod_tmstmp_geoXref')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "SnowflakeSink",
											"preCopyScript": {
												"value": "@concat('TRUNCATE TABLE ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_rawDb,'.',pipeline().parameters.p_tgt_raw_schema_nm, '.', pipeline().parameters.p_tgt_raw_table_nm_2)",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "ls_blob_storage",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@pipeline().globalParameters.rootDir",
												"type": "Expression"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													},
													"sink": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "FIPSCode",
														"type": "String"
													},
													"sink": {
														"name": "FIPSCODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RegionCode",
														"type": "String"
													},
													"sink": {
														"name": "REGIONCODE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "RegionLongName",
														"type": "String"
													},
													"sink": {
														"name": "REGIONLONGNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DistrictCode",
														"type": "String"
													},
													"sink": {
														"name": "DISTRICTCODE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DistrictLongName",
														"type": "String"
													},
													"sink": {
														"name": "DISTRICTLONGNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SMACode",
														"type": "String"
													},
													"sink": {
														"name": "SMACODE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SMALongName",
														"type": "String"
													},
													"sink": {
														"name": "SMALONGNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BTACode",
														"type": "String"
													},
													"sink": {
														"name": "BTACODE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BTALongName",
														"type": "String"
													},
													"sink": {
														"name": "BTALONGNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MsCntyLongName",
														"type": "String"
													},
													"sink": {
														"name": "MSCNTYLONGNAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "GEO_MODIFIEDDATETIME",
														"type": "String"
													},
													"sink": {
														"name": "GEO_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ds_geoxref_excel",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "ds_snowflake",
											"type": "DatasetReference",
											"parameters": {
												"p_tgt_table_name": {
													"value": "@pipeline().parameters.p_tgt_raw_table_nm_2",
													"type": "Expression"
												},
												"p_tgt_schema_name": {
													"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
													"type": "Expression"
												},
												"p_ls_DbName": {
													"value": "@pipeline().globalParameters.snow_rawDb",
													"type": "Expression"
												},
												"p_ls_Env": {
													"value": "@pipeline().globalParameters.environment",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					],
					"defaultActivities": [
						{
							"name": "d365_to_adls",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "WarehouseSource",
									"additionalColumns": [
										{
											"name": "HK_JOB_RUN_ID",
											"value": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											}
										},
										{
											"name": "HK_SOURCE_NAME",
											"value": {
												"value": "@pipeline().parameters.p_src_nm",
												"type": "Expression"
											}
										}
									],
									"sqlReaderQuery": {
										"value": "@concat('select \nlpa1.recid as RECID,\nlpa1.city as CITY,\nlpa1.county as COUNTY,\nlpa1.countryregionid as COUNTRYREGIONID,\nlpa1.latitude as LATITUDE,\nlpa1.longitude as LONGITUDE,\nlpa1.zipcode as ZIPCODE,\nlpa1.state as STATE,\nlpa1.street as STREET,\nlpa1.isprivate as ISPRIVATE,\nlpa1.modifieddatetime as MODIFIEDDATETIME,\nll1.locationid as LOCATIONID,\nll1.description as DESCRIPTION,\nll1.modifieddatetime  as LOGISTICSLOCATION_MODIFIEDDATETIME,\ntzl1.timezonekeyname as TIMEZONEKEYNAME\nfrom ',pipeline().globalParameters.d365_dbName,'.','logisticspostaladdress lpa1\nleft join ',pipeline().globalParameters.d365_dbName,'.','logisticslocation ll1 on lpa1.location = ll1.recid\nleft join ',pipeline().globalParameters.d365_dbName,'.','timezoneslist tzl1 on lpa1.timezone = tzl1.tzenum where lpa1.recid is not null')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "RECID",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "RECID",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "CITY",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "CITY",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "COUNTY",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "COUNTY",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "COUNTRYREGIONID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "COUNTRYREGIONID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "LATITUDE",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "LATITUDE",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "LONGITUDE",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "LONGITUDE",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "ZIPCODE",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "ZIPCODE",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "STATE",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "STATE",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "STREET",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "STREET",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "ISPRIVATE",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "ISPRIVATE",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "LOCATIONID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "LOCATIONID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "DESCRIPTION",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "DESCRIPTION",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "LOGISTICSLOCATION_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "LOGISTICSLOCATION_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "TIMEZONEKEYNAME",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "TIMEZONEKEYNAME",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "HK_JOB_RUN_ID",
												"type": "String"
											},
											"sink": {
												"name": "HK_JOB_RUN_ID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "HK_SOURCE_NAME",
												"type": "String"
											},
											"sink": {
												"name": "HK_SOURCE_NAME",
												"type": "String",
												"physicalType": "UTF8"
											}
										}
									],
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_fabric_wh",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_parquet",
									"type": "DatasetReference",
									"parameters": {
										"p_directory": {
											"value": "@pipeline().parameters.p_temp_directory",
											"type": "Expression"
										},
										"p_root_system": {
											"value": "@pipeline().globalParameters.rootDir",
											"type": "Expression"
										},
										"p_file_name": {
											"value": "@pipeline().parameters.p_temp_file_nm",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "d365_raw_load_failure_notification",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "d365_to_adls",
									"dependencyConditions": [
										"Failed"
									]
								},
								{
									"activity": "d365_load_excel_to_raw",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pp_adf_pipeline_notification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"subscription": {
										"value": "@pipeline().globalParameters.subscriptionId",
										"type": "Expression"
									},
									"resourceGroup": {
										"value": "@pipeline().globalParameters.resourceGroup",
										"type": "Expression"
									},
									"runId": {
										"value": "@coalesce(pipeline().RunId, -1)",
										"type": "Expression"
									},
									"name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"triggerTime": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"status": {
										"value": "@activity('d365_to_adls').Status",
										"type": "Expression"
									},
									"message": {
										"value": "@activity('d365_to_adls').Error['message']",
										"type": "Expression"
									},
									"executionEndTime": {
										"value": "@activity('d365_to_adls').ExecutionEndTime",
										"type": "Expression"
									},
									"runDuration": {
										"value": "@activity('d365_to_adls').Duration",
										"type": "Expression"
									},
									"teamWebhookUrl": {
										"value": "@pipeline().globalParameters.teamsWebhookUrl",
										"type": "Expression"
									},
									"notificationTime": {
										"value": "@utcNow()",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "d365_load_to_raw_fail",
							"type": "Fail",
							"dependsOn": [
								{
									"activity": "d365_raw_load_failure_notification",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"message": {
									"value": "@activity('d365_to_adls').Error['message']",
									"type": "Expression"
								},
								"errorCode": "500"
							}
						},
						{
							"name": "d365_load_excel_to_raw",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ExcelSource",
									"additionalColumns": [
										{
											"name": "HK_JOB_RUN_ID",
											"value": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											}
										},
										{
											"name": "HK_SOURCE_NAME",
											"value": {
												"value": "@pipeline().parameters.p_src_nm",
												"type": "Expression"
											}
										},
										{
											"name": "GEO_MODIFIEDDATETIME",
											"value": {
												"value": "@variables('v_lst_mod_tmstmp_geoXref')",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									}
								},
								"sink": {
									"type": "SnowflakeSink",
									"preCopyScript": {
										"value": "@concat('TRUNCATE TABLE ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_rawDb,'.',pipeline().parameters.p_tgt_raw_schema_nm, '.', pipeline().parameters.p_tgt_raw_table_nm_2)",
										"type": "Expression"
									},
									"importSettings": {
										"type": "SnowflakeImportCopyCommand"
									}
								},
								"enableStaging": true,
								"stagingSettings": {
									"linkedServiceName": {
										"referenceName": "ls_blob_storage",
										"type": "LinkedServiceReference"
									},
									"path": {
										"value": "@pipeline().globalParameters.rootDir",
										"type": "Expression"
									}
								},
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "HK_SOURCE_NAME",
												"type": "String"
											},
											"sink": {
												"name": "HK_SOURCE_NAME",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "HK_JOB_RUN_ID",
												"type": "String"
											},
											"sink": {
												"name": "HK_JOB_RUN_ID",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "FIPSCode",
												"type": "String"
											},
											"sink": {
												"name": "FIPSCODE",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "RegionCode",
												"type": "String"
											},
											"sink": {
												"name": "REGIONCODE",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "RegionLongName",
												"type": "String"
											},
											"sink": {
												"name": "REGIONLONGNAME",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "DistrictCode",
												"type": "String"
											},
											"sink": {
												"name": "DISTRICTCODE",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "DistrictLongName",
												"type": "String"
											},
											"sink": {
												"name": "DISTRICTLONGNAME",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "SMACode",
												"type": "String"
											},
											"sink": {
												"name": "SMACODE",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "SMALongName",
												"type": "String"
											},
											"sink": {
												"name": "SMALONGNAME",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "BTACode",
												"type": "String"
											},
											"sink": {
												"name": "BTACODE",
												"type": "Int64"
											}
										},
										{
											"source": {
												"name": "BTALongName",
												"type": "String"
											},
											"sink": {
												"name": "BTALONGNAME",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "MsCntyLongName",
												"type": "String"
											},
											"sink": {
												"name": "MSCNTYLONGNAME",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "GEO_MODIFIEDDATETIME",
												"type": "String"
											},
											"sink": {
												"name": "GEO_MODIFIEDDATETIME",
												"type": "DateTime"
											}
										}
									]
								}
							},
							"inputs": [
								{
									"referenceName": "ds_geoxref_excel",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_snowflake",
									"type": "DatasetReference",
									"parameters": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_tgt_raw_table_nm_2",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_rawDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "pipeline_execution_notification",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "raw_to_curate_sp_call",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@if(equals(activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE'],'TRUE'),bool('TRUE'), bool('FALSE'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "pp_stored_procedure_failure_notification",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pp_adf_pipeline_notification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"subscription": {
										"value": "@pipeline().globalParameters.subscriptionId",
										"type": "Expression"
									},
									"resourceGroup": {
										"value": "@pipeline().globalParameters.resourceGroup",
										"type": "Expression"
									},
									"runId": {
										"value": "@coalesce(pipeline().RunId, -1)",
										"type": "Expression"
									},
									"name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"triggerTime": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"status": {
										"value": "@toUpper('failed')",
										"type": "Expression"
									},
									"message": {
										"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
										"type": "Expression"
									},
									"executionEndTime": {
										"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
										"type": "Expression"
									},
									"runDuration": {
										"value": "@activity('raw_to_curate_sp_call').Duration",
										"type": "Expression"
									},
									"teamWebhookUrl": {
										"value": "@pipeline().globalParameters.teamsWebhookUrl",
										"type": "Expression"
									},
									"notificationTime": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"taskName": "@pipeline().parameters.p_tgt_curate_table_nm",
									"taskStepNumber": {
										"value": "@pipeline().parameters.p_src_code",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "curate_load_failure",
							"type": "Fail",
							"dependsOn": [
								{
									"activity": "pp_stored_procedure_failure_notification",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"message": {
									"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
									"type": "Expression"
								},
								"errorCode": "500"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "stored_procedure_success_notification",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pp_adf_pipeline_notification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"subscription": {
										"value": "@pipeline().globalParameters.subscriptionId",
										"type": "Expression"
									},
									"resourceGroup": {
										"value": "@pipeline().globalParameters.resourceGroup",
										"type": "Expression"
									},
									"runId": {
										"value": "@coalesce(pipeline().RunId, -1)",
										"type": "Expression"
									},
									"name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"triggerTime": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"status": {
										"value": "@activity('raw_to_curate_sp_call').Status",
										"type": "Expression"
									},
									"message": {
										"value": "@concat(pipeline().parameters.p_tgt_curate_table_nm, ' is successfully loaded')",
										"type": "Expression"
									},
									"executionEndTime": {
										"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
										"type": "Expression"
									},
									"runDuration": {
										"value": "@activity('raw_to_curate_sp_call').Duration",
										"type": "Expression"
									},
									"teamWebhookUrl": {
										"value": "@pipeline().globalParameters.teamsWebhookUrl",
										"type": "Expression"
									},
									"notificationTime": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"taskName": {
										"value": "@pipeline().parameters.p_tgt_curate_table_nm",
										"type": "Expression"
									},
									"taskStepNumber": {
										"value": "@pipeline().parameters.p_src_code",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"p_src_table_nm": {
				"type": "string",
				"defaultValue": "LOGISTICSPOSTALADDRESS"
			},
			"p_src_schema_nm": {
				"type": "string",
				"defaultValue": "dbo"
			},
			"p_tgt_raw_schema_nm": {
				"type": "string",
				"defaultValue": "AX_NALA"
			},
			"p_tgt_raw_table_nm": {
				"type": "string",
				"defaultValue": "LOGISTICSPOSTALADDRESS"
			},
			"p_src_directory": {
				"type": "string",
				"defaultValue": "business_files"
			},
			"p_temp_file_nm": {
				"type": "string",
				"defaultValue": "logisticsPostalAddress_nala.parquet"
			},
			"p_temp_directory": {
				"type": "string",
				"defaultValue": "temp_files"
			},
			"p_src_nm": {
				"type": "string",
				"defaultValue": "AXNALA"
			},
			"p_tgt_curate_table_nm": {
				"type": "string",
				"defaultValue": "DIM_LOCATION"
			},
			"p_tgt_curate_schema_nm": {
				"type": "string",
				"defaultValue": "GLOBAL"
			},
			"p_src_code": {
				"type": "string",
				"defaultValue": "1"
			},
			"p_tgt_raw_table_nm_2": {
				"type": "string",
				"defaultValue": "LOGISTICSPOSTALADDRESS_GEOXREF"
			}
		},
		"variables": {
			"v_lst_mod_tmstmp_geoXref": {
				"type": "String"
			},
			"v_lst_mod_tmstmp_ispaRegion": {
				"type": "String"
			},
			"v_lst_mod_tmstmp_fipsXref": {
				"type": "String"
			},
			"v_prev_max_timestamp": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-06-03T11:09:42Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}