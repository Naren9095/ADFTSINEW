{
	"name": "pp_ax_custinvoicetrans_to_fact_sales_invoices",
	"properties": {
		"activities": [
			{
				"name": "get_last_modifieddatetime_cogs_itemcosts",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_excel",
						"type": "DatasetReference",
						"parameters": {
							"p_src_directory": {
								"value": "@pipeline().parameters.p_src_directory",
								"type": "Expression"
							},
							"p_src_file_name": {
								"value": "@pipeline().parameters.p_src_file_nm",
								"type": "Expression"
							},
							"p_src_root_system": {
								"value": "@pipeline().globalParameters.rootDir",
								"type": "Expression"
							},
							"p_sheet_name": {
								"value": "@pipeline().parameters.p_src_file_sheet",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"itemName",
						"lastModified"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "set_last_mod_tmstmp_cogs_itemcosts",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get_last_modifieddatetime_cogs_itemcosts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "v_last_mod_tmstmp_cogsitemcosts",
					"value": {
						"value": "@coalesce(activity('get_last_modifieddatetime_cogs_itemcosts').output.lastModified,'1950-01-01 00:00:00')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "switch_nala_retail_d365",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "set_last_mod_tmstmp_cogs_itemcosts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@pipeline().parameters.p_src_code",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "1",
							"activities": [
								{
									"name": "custinvoicetrans_to_adls_nala",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "HK_JOB_RUN_ID",
													"value": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													}
												},
												{
													"name": "HK_SOURCE_NAME",
													"value": {
														"value": "@pipeline().parameters.p_src_nm",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "SELECT cit1.RECID \n,cit1.DATAAREAID \n,cit1.ITEMID \n,cit1.CURRENCYCODE \n,cit1.DEFAULTDIMENSION \n,cit1.TRANSACTIONCODE \n,cit1.INVENTDIMID \n,cit1.DELIVERYPOSTALADDRESS \n,cit1.MCRDLVMODE \n,cit1.SALESCATEGORY \n,cit1.RETURNDISPOSITIONCODEID \n,cit1.SALESGROUP \n,cit1.ORIGSALESID \n,cit1.TAXGROUP \n,cit1.TAXITEMGROUP \n,cit1.SALESUNIT \n,cit1.DLVDATE \n,cit1.INVOICEDATE \n,cit1.RETURNARRIVALDATE \n,cit1.RETURNCLOSEDDATE \n,cit1.INVENTTRANSID \n,cit1.INVOICEID \n,cit1.LINENUM \n,cit1.INVENTQTY \n,cit1.QTY \n,cit1.QTYPHYSICAL \n,cit1.PRICEUNIT \n,cit1.SALESPRICE \n,cit1.COMMISSAMOUNTCUR \n,cit1.COMMISSAMOUNTMST \n,cit1.LINEAMOUNT \n,cit1.LINEAMOUNTMST \n,cit1.TAXAMOUNT \n,cit1.TAXAMOUNTMST \n,cit1.DISCPERCENT \n,cit1.DISCAMOUNT \n,cit1.LINEDISC \n,cit1.LINEPERCENT \n,cit1.SUMLINEDISC \n,cit1.SUMLINEDISCMST \n,cit1.MODIFIEDDATETIME \n,def1.BUSINESS_UNIT as DEFAULTDIMENSION_BUSINESS_UNIT \n,def1.DEFAULTDIMENSION_MODIFIEDDATETIME \n,st1.SMMCAMPAIGNID as SALESTABLE_SMMCAMPAIGNID \n,st1.COMMISSIONGROUP as SALESTABLE_COMMISSIONGROUP \n,st1.INVOICEACCOUNT as SALESTABLE_INVOICEACCOUNT \n,st1.MARKUPGROUP as SALESTABLE_MARKUPGROUP \n,st1.RETURNREASONCODEID as SALESTABLE_RETURNREASONCODEID \n,st1.LINEDISC as SALESTABLE_LINEDISC \n,st1.SALESPOOLID as SALESTABLE_SALESPOOLID \n,st1.PRICEGROUPID as SALESTABLE_PRICEGROUPID \n,st1.WORKERSALESRESPONSIBLE as SALESTABLE_WORKERSALESRESPONSIBLE \n,st1.ATAGENT as SALESTABLE_ATAGENT \n,st1.SHIPCARRIERBLINDSHIPMENT as SALESTABLE_SHIPCARRIERBLINDSHIPMENT \n,st1.SHIPCARRIEREXPEDITEDSHIPMENT as SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT \n,st1.ORDERBLOCKED as SALESTABLE_ORDERBLOCKED \n,st1.MCRORDERSTOPPED as SALESTABLE_MCRORDERSTOPPED \n,st1.SHIPCARRIERFUELSURCHARGE as SALESTABLE_SHIPCARRIERFUELSURCHARGE \n,st1.INVENTSITEID as SALESTABLE_INVENTSITEID \n,st1.MODIFIEDDATETIME as SALESTABLE_MODIFIEDDATETIME \n,cij1.ORDERACCOUNT as CUSTINVOICEJOUR_ORDERACCOUNT \n,cij1.CUSTGROUP as CUSTINVOICEJOUR_CUSTGROUP \n,cij1.INVOICEPOSTALADDRESS as CUSTINVOICEJOUR_INVOICEPOSTALADDRESS \n,cij1.DLVTERM as CUSTINVOICEJOUR_DLVTERM \n,cij1.PAYMENT as CUSTINVOICEJOUR_PAYMENT \n,cij1.RETURNREASONCODEID as CUSTINVOICEJOUR_RETURNREASONCODEID \n,cij1.SALESORIGINID as CUSTINVOICEJOUR_SALESORIGINID \n,cij1.INVENTLOCATIONID as CUSTINVOICEJOUR_INVENTLOCATIONID \n,cij1.WORKERSALESTAKER as CUSTINVOICEJOUR_WORKERSALESTAKER \n,cij1.DOCUMENTDATE as CUSTINVOICEJOUR_DOCUMENTDATE \n,cij1.DUEDATE as CUSTINVOICEJOUR_DUEDATE \n,cij1.LEDGERVOUCHER as CUSTINVOICEJOUR_LEDGERVOUCHER \n,cij1.PURCHASEORDER as CUSTINVOICEJOUR_PURCHASEORDER\n,cij1.SALESTYPE as CUSTINVOICEJOUR_SALESTYPE\n,cij1.JOURNALNUM as CUSTINVOICEJOUR_JOURNALNUM\n,cij1.JOURNALNAME as CUSTINVOICEJOUR_JOURNALNAME\n,cij1.MODIFIEDDATETIME as CUSTINVOICEJOUR_MODIFIEDDATETIME \n,id1.CONFIGID as INVENTDIM1_CONFIGID \n,id1.INVENTSITEID as INVENTDIM1_INVENTSITEID\n,id1.MODIFIEDDATETIME as INVENTDIM1_MODIFIEDDATETIME \n,CAST(idc1.PDMSTATUS AS varchar) as INVENTDIMCOMBINATION_PDMSTATUS \n,idc1.MODIFIEDDATETIME as INVENTDIMCOMBINATION_MODIFIEDDATETIME \n,sl1.TPX_RETURNREASONCODEID as SALESLINE1_TPX_RETURNREASONCODEID \n,sl1.LINEDISC as SALESLINE1_LINEDISC \n,sl1.LINEPERCENT as SALESLINE1_LINEPERCENT \n,sl1.COMPLETE as SALESLINE1_COMPLETE \n,sl1.ORDERBLOCKED as SALESLINE1_ORDERBLOCKED \n,sl1.SCRAP as SALESLINE1_SCRAP \n,sl1.STOCKEDPRODUCT as SALESLINE1_STOCKEDPRODUCT \n,sl1.TPX_MANUFACTUREDATE as SALESLINE1_TPX_MANUFACTUREDATE \n,sl1.TPX_RELATEDORDERDATE as SALESLINE1_TPX_RELATEDORDERDATE \n,sl1.CREATEDDATETIME as SALESLINE1_CREATEDDATETIME \n,sl1.TPX_PRODUCTIONTIME as SALESLINE1_TPX_PRODUCTIONTIME \n,sl1.TPX_REGISTRYNUMBER as SALESLINE1_TPX_REGISTRYNUMBER \n,sl1.MODIFIEDDATETIME as SALESLINE1_MODIFIEDDATETIME \n,tet1.ENUMVALUELABEL as TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS \n,tet2.ENUMVALUELABEL as TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER \n,tet3.ENUMVALUELABEL as TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER \n,tet4.ENUMVALUELABEL as TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE \n,tet5.ENUMVALUELABEL as TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE \n,tet6.ENUMVALUELABEL as TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE \n,tet7.ENUMVALUELABEL as TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE \n,tet8.ENUMVALUELABEL as TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE\n,tet9.ENUMVALUELABEL as TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE  \n,mslds1.DROPSHIPMENT as MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT \n,sl2.CREATEDDATETIME as SALESLINE2_CREATEDDATETIME \n,sl2.INVENTDIMID as SALESLINE2_INVENTDIMID \n,sl2.SALESID as SALESLINE2_SALESID \n,sl2.MODIFIEDDATETIME as SALESLINE2_MODIFIEDDATETIME \n,da1.TIMEZONE as DATAAREA1_TIMEZONE \n,tzi1.TIMEBIAS as TIMEZONEINFO1_TIMEBIAS \n,da3.TIMEZONE as DATAAREA3_TIMEZONE \n,tzi3.TIMEBIAS as TIMEZONEINFO3_TIMEBIAS \n,null as INVENTITEMPRICE1_STANDARDCOST \n,null as INVENTITEMPRICE1_MODIFIEDDATETIME \n,null as INVENTITEMPRICE2_STANDARDCOST \n,null as INVENTITEMPRICE2_MODIFIEDDATETIME \n,null as INVENTITEMPRICE3_STANDARDCOST \n,null as INVENTITEMPRICE3_MODIFIEDDATETIME \n,null as INVENTITEMPRICE4_STANDARDCOST \n,null as INVENTITEMPRICE4_MODIFIEDDATETIME \n,null as INVENTITEMPRICE6_STANDARDCOST \n,null as INVENTITEMPRICE6_MODIFIEDDATETIME \n,null as INVENTITEMPRICE7_STANDARDCOST \n,null as INVENTITEMPRICE7_MODIFIEDDATETIME \n,null as INVENTITEMPRICE8_STANDARDCOST \n,null as INVENTITEMPRICE8_MODIFIEDDATETIME \n,null as INVENTITEMPRICE9_STANDARDCOST \n,null as INVENTITEMPRICE9_MODIFIEDDATETIME\n ,mslpo1.RECID as MCRSALESLINEPRICEOVERRIDE1_RECID \n ,mslpo1.REASONCODE as MCRSALESLINEPRICEOVERRIDE2_REASONCODE \n ,tport1.DESCRIPTION as TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION \n ,ps1.NAME as PDMSTATUS_NAME\n ,(SELECT MAX(LastUpdateDate) \n FROM (VALUES (sl1.MODIFIEDDATETIME),\n  (isnull(def1.DEFAULTDIMENSION_MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(st1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(cij1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(id1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(idc1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(sl1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(sl2.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(id2.INVENTDIM_MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(id2.INVENTSITE_MODIFIEDDATETIME, '1950-01-01'))\n ) AS UpdateDate(LastUpdateDate)) AS LATEST_MODIFIEDDATETIME \nFROM dbo.CUSTINVOICETRANS cit1\nleft join (select distinct sl10.DEFAULTDIMENSION\n                                                                , max(\n                                                                                case when da1.NAME = 'BusinessUnit' then davsi1.DISPLAYVALUE\n                                                                                                else null\n                                                                                                end\n                                                                                ) over (partition by sl10.DEFAULTDIMENSION) as BUSINESS_UNIT\n                                                                , max(\n                                                                                (select max(i) from (values (davsi1.MODIFIEDDATETIME), (dav1.MODIFIEDDATETIME), (da1.MODIFIEDDATETIME), (desc1.DESC_MODIFIEDDATETIME)) AS T(i))\n                                                                                ) over (partition by sl10.DEFAULTDIMENSION) as DEFAULTDIMENSION_MODIFIEDDATETIME\n                                                from (select distinct DEFAULTDIMENSION from dbo.SALESLINE) sl10\n                                                left join dbo.DIMENSIONATTRIBUTEVALUESETITEM davsi1 on\n                                                                sl10.DEFAULTDIMENSION = davsi1.DIMENSIONATTRIBUTEVALUESET\n                                                left join dbo.DIMENSIONATTRIBUTEVALUE dav1 on\n                                                                davsi1.DIMENSIONATTRIBUTEVALUE = dav1.RECID\n                                                left join dbo.DIMENSIONATTRIBUTE da1 on\n                                                                dav1.DIMENSIONATTRIBUTE = da1.RECID\n                                                left join (select dft1.VALUE, da2.NAME, dft1.DESCRIPTION\n                                                                                                                , (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME\n                                                                                                from dbo.DIMENSIONFINANCIALTAG dft1\n                                                                                                left join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on\n                                                                                                                dft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n                                                                                                left join dbo.DIMENSIONATTRIBUTE da2 on\n                                                                                                                dadc1.DIMENSIONATTRIBUTE = da2.RECID) desc1 on\n                                                                davsi1.DISPLAYVALUE = desc1.VALUE and\n                                                                da1.NAME = desc1.NAME\n                                                ) def1 on\n                cit1.DEFAULTDIMENSION = def1.DEFAULTDIMENSION\nleft join dbo.SALESTABLE st1 on\n                cit1.DATAAREAID = st1.DATAAREAID and\n                cit1.ORIGSALESID = st1.SALESID\nleft join (select distinct cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, '') as NUMBERSEQUENCEGROUP, cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID\n\t\t\t, max(cij10.ORDERACCOUNT) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as ORDERACCOUNT\n\t\t\t, max(cij10.CUSTGROUP) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as CUSTGROUP\n\t\t\t, max(cij10.INVOICEPOSTALADDRESS) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as INVOICEPOSTALADDRESS\n\t\t\t, max(cij10.DLVTERM) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as DLVTERM\n\t\t\t, max(cij10.PAYMENT) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as PAYMENT\n\t\t\t, max(cij10.RETURNREASONCODEID) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as RETURNREASONCODEID\n\t\t\t, max(cij10.SALESORIGINID) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as SALESORIGINID\n\t\t\t, max(cij10.INVENTLOCATIONID) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as INVENTLOCATIONID\n\t\t\t, max(cij10.WORKERSALESTAKER) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as WORKERSALESTAKER\n\t\t\t, max(cij10.DOCUMENTDATE) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as DOCUMENTDATE\n\t\t\t, max(cij10.DUEDATE) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as DUEDATE\n\t\t\t, max(cij10.LEDGERVOUCHER) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as LEDGERVOUCHER\n\t\t\t, max(cij10.PURCHASEORDER) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as PURCHASEORDER\n\t\t\t, max(cij10.SALESTYPE) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as SALESTYPE\n\t\t\t\n\t\t\t, max(cij10.JOURNALNUM) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as JOURNALNUM\n\t\t\t, max(ljta10.JOURNALNAME) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as JOURNALNAME\n\t\t\t\n\t\t\t, max(cij10.IsManbase) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as IsManbase\n\t\t\t\n\t\t\t, max((select max(i) from (values (cij10.MODIFIEDDATETIME), (ljta10.MODIFIEDDATETIME)) AS T(i))) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as MODIFIEDDATETIME\n\t\tfrom (select cij100.RECID, cij100.DATAAREAID, cij100.NUMBERSEQUENCEGROUP, cij100.SALESID, cij100.INVOICEDATE, cij100.INVOICEID\n\t\t\t\t\t, cij100.ORDERACCOUNT, cij100.CUSTGROUP, cij100.INVOICEPOSTALADDRESS, cij100.DLVTERM, cij100.PAYMENT, cij100.RETURNREASONCODEID, cij100.SALESORIGINID, cij100.INVENTLOCATIONID, cij100.WORKERSALESTAKER, cij100.DOCUMENTDATE, cij100.DUEDATE, cij100.LEDGERVOUCHER, cij100.PURCHASEORDER, cij100.SALESTYPE\n\t\t\t\t\t, cij100.IsManbase\n\t\t\t\t\t, case when max(cij100.IsManbase) over (partition by cij100.DATAAREAID, isnull(cij100.NUMBERSEQUENCEGROUP, ''), cij100.SALESID, cij100.INVOICEDATE, cij100.INVOICEID) = 1 and cij100.IsManbase = 0 then ''\n\t\t\t\t\t\telse cij100.JOURNALNUM\n\t\t\t\t\t\tend as JOURNALNUM\n\t\t\t\t\t, cij100.MODIFIEDDATETIME\n\t\t\t\tfrom (select cij1000.RECID, cij1000.DATAAREAID, cij1000.NUMBERSEQUENCEGROUP, cij1000.SALESID, cij1000.INVOICEDATE, cij1000.INVOICEID\n\t\t\t\t\t, cij1000.ORDERACCOUNT, cij1000.CUSTGROUP, cij1000.INVOICEPOSTALADDRESS, cij1000.DLVTERM, cij1000.PAYMENT, cij1000.RETURNREASONCODEID, cij1000.SALESORIGINID, cij1000.INVENTLOCATIONID, cij1000.WORKERSALESTAKER, cij1000.DOCUMENTDATE, cij1000.DUEDATE, cij1000.LEDGERVOUCHER, cij1000.PURCHASEORDER, cij1000.SALESTYPE\n\t\t\t\t\t, case --Sealy --Manbase journals moved from Manbase into AX (not AX originated)\n\t\t\t\t\t\t\twhen cij1000.DATAAREAID = '415' and isnull(ljta1000.JOURNALNAME, '') like 'MB%' then 1\n\t\t\t\t\t\t\t--From Manbase, but eluded journal name filter   --From Manbase, but eluded journal name filter\n\t\t\t\t\t\t\twhen left(cij1000.INVOICEID, 4) = '415F' or left(cij1000.INVOICEID, 5) = 'TC415' then 1\n\t\t\t\t\t\t\t--And, at last, specific cutover date for old Manbase into AX history\n\t\t\t\t\t\t\twhen convert(date, cij1000.INVOICEDATE) = '2020-03-29' then 1\n\t\t\t\t\t\telse 0\n\t\t\t\t\t\tend as IsManbase\n\t\t\t\t\t, ljt1000.JOURNALNUM\n\t\t\t\t\t, (select max(i) from (values (cij1000.MODIFIEDDATETIME), (ljt1000.MODIFIEDDATETIME), (ljta1000.MODIFIEDDATETIME)) AS T(i)) as MODIFIEDDATETIME\n\t\t\t\tfrom dbo.CUSTINVOICEJOUR cij1000\n\t\t\t\tleft join (select DATAAREAID, INVOICE, JOURNALNUM, MODIFIEDDATETIME\n\t\t\t\t\t\t\tfrom dbo.LEDGERJOURNALTRANS) ljt1000 on\n\t\t\t\t\tcij1000.DATAAREAID = ljt1000.DATAAREAID and\n\t\t\t\t\tcij1000.INVOICEID = ljt1000.INVOICE\n\t\t\t\tleft join (select DATAAREAID, JOURNALNUM, JOURNALNAME, MODIFIEDDATETIME\n\t\t\t\t\t\t\tfrom dbo.LEDGERJOURNALTABLE) ljta1000 on\n\t\t\t\t\tljt1000.DATAAREAID = ljta1000.DATAAREAID and\n\t\t\t\t\tljt1000.JOURNALNUM = ljta1000.JOURNALNUM) cij100\n\t\t\t) cij10\n\tleft join (select DATAAREAID, JOURNALNUM\n\t\t\t\t\t, max(JOURNALNAME) as JOURNALNAME\n\t\t\t\t\t, max(MODIFIEDDATETIME) as MODIFIEDDATETIME\n\t\t\t\tfrom dbo.LEDGERJOURNALTABLE\n\t\t\t\tgroup by DATAAREAID, JOURNALNUM) ljta10 on\n\t\tcij10.DATAAREAID = ljta10.DATAAREAID and\n\t\tcij10.JOURNALNUM = ljta10.JOURNALNUM) cij1 on\n\tcit1.DATAAREAID = cij1.DATAAREAID and\n\tisnull(cit1.NUMBERSEQUENCEGROUP, '') = isnull(cij1.NUMBERSEQUENCEGROUP, '') and\n\tcit1.SALESID = cij1.SALESID and\n\tcit1.INVOICEDATE = cij1.INVOICEDATE and\n\tcit1.INVOICEID = cij1.INVOICEID\nleft join dbo.INVENTDIM id1 on\n                cit1.DATAAREAID = id1.DATAAREAID and\n                cit1.INVENTDIMID = id1.INVENTDIMID\nleft join (select idc10.DATAAREAID, idc10.ITEMID, id10.CONFIGID, idc10.PDMSTATUS\n                                                , max(id10.MODIFIEDDATETIME) as MODIFIEDDATETIME\n                                from dbo.INVENTDIMCOMBINATION idc10\n                                left join dbo.INVENTDIM id10 on\n                                                idc10.DATAAREAID = id10.DATAAREAID and\n                                                idc10.INVENTDIMID = id10.INVENTDIMID\n                                group by idc10.DATAAREAID, idc10.ITEMID, id10.CONFIGID, idc10.PDMSTATUS) idc1 on\n                cit1.DATAAREAID = idc1.DATAAREAID and\n                id1.CONFIGID = idc1.CONFIGID and\n                cit1.ITEMID = idc1.ITEMID\nleft join dbo.SALESLINE sl1 on\n                cit1.DATAAREAID = sl1.DATAAREAID and\n                cit1.INVENTTRANSID = sl1.INVENTTRANSID\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'DocumentStatus'\n                                group by ENUMNAME, ENUMVALUE) tet1 on\n                st1.DOCUMENTSTATUS = tet1.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'ReturnStatusHeader'\n                                group by ENUMNAME, ENUMVALUE) tet2 on\n                st1.RETURNSTATUS = tet2.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'SalesStatus'\n                                group by ENUMNAME, ENUMVALUE) tet3 on\n                '3' = tet3.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'ReturnStatusLine'\n                                group by ENUMNAME, ENUMVALUE) tet4 on\n                sl1.RETURNSTATUS = tet4.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'SalesStatus'\n                                group by ENUMNAME, ENUMVALUE) tet5 on\n                '3' = tet5.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'SalesType'\n                                group by ENUMNAME, ENUMVALUE) tet6 on\n                cij1.SALESTYPE = tet6.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'ShipCarrierDlvType'\n                                group by ENUMNAME, ENUMVALUE) tet7 on\n                sl1.SHIPCARRIERDLVTYPE = tet7.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'TradeLineDlvType'\n                                group by ENUMNAME, ENUMVALUE) tet8 on\n                sl1.DELIVERYTYPE = tet8.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'CostingVersionPriceType'\n                                group by ENUMNAME, ENUMVALUE) tet9 on\n                0 = tet9.ENUMVALUE\nleft join dbo.MCRSALESLINEDROPSHIPMENT mslds1 on\n                sl1.DATAAREAID = mslds1.DATAAREAID and\n                sl1.RECID = mslds1.SALESLINE\nleft join (select distinct DATAAREAID, INVENTTRANSID\n                                                , max(CREATEDDATETIME) over (partition by DATAAREAID, INVENTTRANSID) as CREATEDDATETIME\n                                                , max(INVENTDIMID) over (partition by DATAAREAID, INVENTTRANSID) as INVENTDIMID\n                                                , max(SALESID) over (partition by DATAAREAID, INVENTTRANSID) as SALESID\n                                                , max(MODIFIEDDATETIME) over (partition by DATAAREAID, INVENTTRANSID) as MODIFIEDDATETIME\n                                from dbo.SALESLINE) sl2 on\n                sl1.DATAAREAID = sl2.DATAAREAID and\n                sl1.INVENTTRANSIDRETURN = sl2.INVENTTRANSID\nleft join (select id20.DATAAREAID, id20.INVENTDIMID\n                                                , max(is20.TIMEZONE) over (partition by id20.DATAAREAID, id20.INVENTDIMID) as TIMEZONE\n                                                , max(id20.MODIFIEDDATETIME) over (partition by id20.DATAAREAID, id20.INVENTDIMID) as INVENTDIM_MODIFIEDDATETIME\n                                                , max(is20.MODIFIEDDATETIME) over (partition by id20.DATAAREAID, id20.INVENTDIMID) as INVENTSITE_MODIFIEDDATETIME\n                                from dbo.INVENTDIM id20\n                                left join dbo.INVENTSITE is20 on\n                                                id20.DATAAREAID = is20.DATAAREAID and\n                                                id20.INVENTSITEID = is20.SITEID) id2 on\n                sl2.DATAAREAID = id2.DATAAREAID and\n                sl2.INVENTDIMID = id2.INVENTDIMID\nleft join dbo.DATAAREA da1 on\n                sl2.DATAAREAID = da1.ID\nleft join dbo.TIMEZONEINFO tzi1 on\n                sl2.CREATEDDATETIME >= tzi1.STARTDATE and\n                sl2.CREATEDDATETIME < tzi1.ENDDATE and\n                isnull(id2.TIMEZONE, da1.TIMEZONE) = tzi1.TIMEZONEID\nleft join dbo.DATAAREA da3 on\n                sl1.DATAAREAID = da3.ID\nleft join dbo.TIMEZONEINFO tzi3 on\n                sl1.CREATEDDATETIME >= tzi3.STARTDATE and\n                sl1.CREATEDDATETIME < tzi3.ENDDATE and\n                da3.TIMEZONE = tzi3.TIMEZONEID\nleft join dbo.MCRSALESLINEPRICEOVERRIDE mslpo1 on\n                sl1.RECID = mslpo1.SALESLINE\nleft join dbo.MCRSALESLINEPRICEOVERRIDE mslpo2 on\n                mslpo1.RECID = mslpo2.RECID\nleft join dbo.TPXPRICEOVERRIDEREASONTABLE tport1 on\n                mslpo1.DATAAREAID = tport1.DATAAREAID and\n                mslpo1.REASONCODE = tport1.SUBCODEID and\n                mslpo1.PARTITION = tport1.PARTITION\nleft join dbo.PDMSTATUS ps1 on\n                idc1.PDMSTATUS = ps1.RECID\nwhere cit1.RECID is not null\nand cit1.DATAAREAID is not null\nand cit1.ITEMID is not null\nand isnull(cij1.IsManbase, 0) = 0\noption(recompile, maxdop 16)",
												"type": "Expression"
											},
											"queryTimeout": "20:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "ls_blob_storage",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@pipeline().globalParameters.rootDir",
												"type": "Expression"
											}
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "RECID",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "RECID",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "DATAAREAID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DATAAREAID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ITEMID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "ITEMID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CURRENCYCODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CURRENCYCODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DEFAULTDIMENSION",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "DEFAULTDIMENSION",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "TRANSACTIONCODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TRANSACTIONCODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "INVENTDIMID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVENTDIMID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DELIVERYPOSTALADDRESS",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "DELIVERYPOSTALADDRESS",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "MCRDLVMODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "MCRDLVMODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESCATEGORY",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SALESCATEGORY",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "RETURNDISPOSITIONCODEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "RETURNDISPOSITIONCODEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ORIGSALESID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "ORIGSALESID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TAXGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TAXGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TAXITEMGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TAXITEMGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESUNIT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESUNIT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DLVDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DLVDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVOICEDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVOICEDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "RETURNARRIVALDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "RETURNARRIVALDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "RETURNCLOSEDDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "RETURNCLOSEDDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTTRANSID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVENTTRANSID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "INVOICEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVOICEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LINENUM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "LINENUM",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTQTY",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "INVENTQTY",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "QTY",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "QTY",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "QTYPHYSICAL",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "QTYPHYSICAL",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "PRICEUNIT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "PRICEUNIT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "SALESPRICE",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "SALESPRICE",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "COMMISSAMOUNTCUR",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "COMMISSAMOUNTCUR",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "COMMISSAMOUNTMST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "COMMISSAMOUNTMST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "LINEAMOUNT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "LINEAMOUNT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "LINEAMOUNTMST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "LINEAMOUNTMST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "TAXAMOUNT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "TAXAMOUNT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "TAXAMOUNTMST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "TAXAMOUNTMST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "DISCPERCENT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "DISCPERCENT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "DISCAMOUNT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "DISCAMOUNT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "LINEDISC",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "LINEDISC",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "LINEPERCENT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "LINEPERCENT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "SUMLINEDISC",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "SUMLINEDISC",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "SUMLINEDISCMST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "SUMLINEDISCMST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "DEFAULTDIMENSION_BUSINESS_UNIT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DEFAULTDIMENSION_BUSINESS_UNIT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_SMMCAMPAIGNID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_SMMCAMPAIGNID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_COMMISSIONGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_COMMISSIONGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_INVOICEACCOUNT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_INVOICEACCOUNT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_MARKUPGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_MARKUPGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_RETURNREASONCODEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_RETURNREASONCODEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_LINEDISC",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_LINEDISC",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_SALESPOOLID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_SALESPOOLID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_PRICEGROUPID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_PRICEGROUPID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_WORKERSALESRESPONSIBLE",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SALESTABLE_WORKERSALESRESPONSIBLE",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_ATAGENT",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESTABLE_ATAGENT",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_SHIPCARRIERBLINDSHIPMENT",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESTABLE_SHIPCARRIERBLINDSHIPMENT",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_ORDERBLOCKED",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESTABLE_ORDERBLOCKED",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_MCRORDERSTOPPED",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESTABLE_MCRORDERSTOPPED",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_SHIPCARRIERFUELSURCHARGE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESTABLE_SHIPCARRIERFUELSURCHARGE",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_INVENTSITEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_INVENTSITEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "SALESTABLE_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_ORDERACCOUNT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_ORDERACCOUNT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_CUSTGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_CUSTGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_INVOICEPOSTALADDRESS",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_INVOICEPOSTALADDRESS",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_DLVTERM",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_DLVTERM",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_PAYMENT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_PAYMENT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_RETURNREASONCODEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_RETURNREASONCODEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_SALESORIGINID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_SALESORIGINID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_INVENTLOCATIONID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_INVENTLOCATIONID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_WORKERSALESTAKER",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_WORKERSALESTAKER",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_DOCUMENTDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_DOCUMENTDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_DUEDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_DUEDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_LEDGERVOUCHER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_LEDGERVOUCHER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_PURCHASEORDER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_PURCHASEORDER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_SALESTYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_SALESTYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_JOURNALNUM",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_JOURNALNUM",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_JOURNALNAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_JOURNALNAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTDIM1_CONFIGID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVENTDIM1_CONFIGID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "INVENTDIM1_INVENTSITEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVENTDIM1_INVENTSITEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "INVENTDIM1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTDIM1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTDIMCOMBINATION_PDMSTATUS",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "INVENTDIMCOMBINATION_PDMSTATUS",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "INVENTDIMCOMBINATION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTDIMCOMBINATION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_TPX_RETURNREASONCODEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESLINE1_TPX_RETURNREASONCODEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_LINEDISC",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "SALESLINE1_LINEDISC",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_LINEPERCENT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "SALESLINE1_LINEPERCENT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_COMPLETE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESLINE1_COMPLETE",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_ORDERBLOCKED",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESLINE1_ORDERBLOCKED",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_SCRAP",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESLINE1_SCRAP",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_STOCKEDPRODUCT",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESLINE1_STOCKEDPRODUCT",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_TPX_MANUFACTUREDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "SALESLINE1_TPX_MANUFACTUREDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_TPX_RELATEDORDERDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "SALESLINE1_TPX_RELATEDORDERDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_CREATEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "SALESLINE1_CREATEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_TPX_PRODUCTIONTIME",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESLINE1_TPX_PRODUCTIONTIME",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_TPX_REGISTRYNUMBER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESLINE1_TPX_REGISTRYNUMBER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "SALESLINE1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESLINE2_CREATEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "SALESLINE2_CREATEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "SALESLINE2_INVENTDIMID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESLINE2_INVENTDIMID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESLINE2_SALESID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESLINE2_SALESID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESLINE2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "SALESLINE2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "DATAAREA1_TIMEZONE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "DATAAREA1_TIMEZONE",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "TIMEZONEINFO1_TIMEBIAS",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TIMEZONEINFO1_TIMEBIAS",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "DATAAREA3_TIMEZONE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "DATAAREA3_TIMEZONE",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "TIMEZONEINFO3_TIMEBIAS",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TIMEZONEINFO3_TIMEBIAS",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE1_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE1_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTITEMPRICE1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE2_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE2_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTITEMPRICE2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE3_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE3_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE3_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTITEMPRICE3_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE4_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE4_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE4_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTITEMPRICE4_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE6_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE6_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE6_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTITEMPRICE6_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE7_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE7_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE7_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTITEMPRICE7_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE8_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE8_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE8_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTITEMPRICE8_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE9_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE9_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE9_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTITEMPRICE9_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "MCRSALESLINEPRICEOVERRIDE1_RECID",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "MCRSALESLINEPRICEOVERRIDE1_RECID",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "MCRSALESLINEPRICEOVERRIDE2_REASONCODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "MCRSALESLINEPRICEOVERRIDE2_REASONCODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PDMSTATUS_NAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "PDMSTATUS_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													},
													"sink": {
														"name": "HK_JOB_RUN_ID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "HK_SOURCE_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": true
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sql_server",
											"type": "DatasetReference",
											"parameters": {
												"p_src_table_name": {
													"value": "@pipeline().parameters.p_src_table_nm",
													"type": "Expression"
												},
												"p_src_schema_name": {
													"value": "@pipeline().parameters.p_src_schema_nm",
													"type": "Expression"
												},
												"p_ls_serverName": {
													"value": "@pipeline().globalParameters.nala_sql_serverName",
													"type": "Expression"
												},
												"p_ls_dbName": {
													"value": "@pipeline().globalParameters.nala_sql_dbName",
													"type": "Expression"
												},
												"p_ls_sqlUsername": {
													"value": "@pipeline().globalParameters.sql_userName",
													"type": "Expression"
												},
												"p_ls_sqlPassword": {
													"value": "@pipeline().globalParameters.sql_password",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"p_directory": {
													"value": "@pipeline().parameters.p_temp_directory",
													"type": "Expression"
												},
												"p_root_system": {
													"value": "@pipeline().globalParameters.rootDir",
													"type": "Expression"
												},
												"p_file_name": {
													"value": "@pipeline().parameters.p_temp_file_nm",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "nala_raw_load_failure_notification_1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "custinvoicetrans_to_adls_nala",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('custinvoicetrans_to_adls_nala').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@replace(replace(replace(activity('custinvoicetrans_to_adls_nala').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('custinvoicetrans_to_adls_nala').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('custinvoicetrans_to_adls_nala').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": "@pipeline().parameters.p_tgt_curate_table_nm",
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "sql_nala_load_to_raw_fail_1",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "nala_raw_load_failure_notification_1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('custinvoicetrans_to_adls_nala').Error['message']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								},
								{
									"name": "custinvoicetrans_standardcost_nala_to_raw",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "HK_JOB_RUN_ID",
													"value": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													}
												},
												{
													"name": "HK_SOURCE_NAME",
													"value": {
														"value": "@pipeline().parameters.p_src_nm",
														"type": "Expression"
													}
												},
												{
													"name": "LAST_MODIFIEDDATE",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select cit1.STANDARDCOST_SOURCE\n, cit1.RECID\n, cit1.DATAAREAID\n, cit1.ITEMID\n, cit1.CONFIGID as INVENTDIM_CONFIGID\n, cit1.INVENTSITEID as INVENTDIM_INVENTSITEID\n, cit1.MODIFIEDDATETIME as INVENTITEMPRICE_MODIFIEDDATETIME\n, cit1.ACTIVATIONDATE as INVENTITEMPRICE_ACTIVATIONDATE\n, cit1.CREATEDDATETIME as INVENTITEMPRICE_CREATEDDATETIME\n, cit1.STANDARDCOST as INVENTITEMPRICE_STANDARDCOST\nfrom (select iip1.STANDARDCOST_SOURCE, iip1.RECID, iip1.DATAAREAID, iip1.ITEMID, iip1.CONFIGID, iip1.INVENTSITEID, iip1.MODIFIEDDATETIME, iip1.ACTIVATIONDATE, iip1.CREATEDDATETIME, iip1.STANDARDCOST\n\tfrom (select 'iip1' as STANDARDCOST_SOURCE, cit11.RECID, cit11.DATAAREAID, cit11.ITEMID, id11.CONFIGID, id11.INVENTSITEID, iip11.MODIFIEDDATETIME, iip11.ACTIVATIONDATE, iip11.CREATEDDATETIME\n\t\t\t, ((iip11.PRICE / isnull(nullif(iip11.PRICEUNIT, 0), 1)) + (iip11.MARKUP / isnull(nullif(iip11.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by cit11.RECID, cit11.DATAAREAID, cit11.ITEMID, id11.CONFIGID, id11.INVENTSITEID order by iip11.ACTIVATIONDATE desc, iip11.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.CUSTINVOICETRANS cit11\n\t\tinner join dbo.INVENTDIM id11 on\n\t\t\tcit11.DATAAREAID = id11.DATAAREAID and\n\t\t\tcit11.INVENTDIMID = id11.INVENTDIMID\n\t\tinner join (select iip111.DATAAREAID, iip111.ITEMID, id111.CONFIGID, id111.INVENTSITEID, iip111.MODIFIEDDATETIME, iip111.ACTIVATIONDATE, iip111.CREATEDDATETIME\n\t\t\t\t\t\t, iip111.PRICE, iip111.PRICEUNIT, iip111.MARKUP, iip111.PRICEQTY\n\t\t\t\t\tfrom dbo.INVENTITEMPRICE iip111\n\t\t\t\t\tinner join dbo.INVENTDIM id111 on\n\t\t\t\t\t\tiip111.DATAAREAID = id111.DATAAREAID and\n\t\t\t\t\t\tiip111.INVENTDIMID = id111.INVENTDIMID\n\t\t\t\t\twhere iip111.PRICETYPE = 0) iip11 on\n\t\t\tcit11.DATAAREAID = iip11.DATAAREAID and\n\t\t\tcit11.ITEMID = iip11.ITEMID and\n\t\t\tid11.CONFIGID = iip11.CONFIGID and\n\t\t\tid11.INVENTSITEID = iip11.INVENTSITEID and\n\t\t\tcit11.INVOICEDATE >= iip11.ACTIVATIONDATE) iip1\n\twhere iip1.ROW_NUM = 1\n\tunion all\n\tselect iip2.STANDARDCOST_SOURCE, iip2.RECID, iip2.DATAAREAID, iip2.ITEMID, null as CONFIGID, iip2.INVENTSITEID, iip2.MODIFIEDDATETIME, iip2.ACTIVATIONDATE, iip2.CREATEDDATETIME, iip2.STANDARDCOST\n\tfrom (select 'iip2' as STANDARDCOST_SOURCE, cit21.RECID, cit21.DATAAREAID, cit21.ITEMID, id21.INVENTSITEID, iip21.MODIFIEDDATETIME, iip21.ACTIVATIONDATE, iip21.CREATEDDATETIME\n\t\t\t, ((iip21.PRICE / isnull(nullif(iip21.PRICEUNIT, 0), 1)) + (iip21.MARKUP / isnull(nullif(iip21.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by cit21.RECID, cit21.DATAAREAID, cit21.ITEMID, id21.INVENTSITEID order by iip21.ACTIVATIONDATE desc, iip21.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.CUSTINVOICETRANS cit21\n\t\tinner join dbo.INVENTDIM id21 on\n\t\t\tcit21.DATAAREAID = id21.DATAAREAID and\n\t\t\tcit21.INVENTDIMID = id21.INVENTDIMID\n\t\tinner join (select iip211.DATAAREAID, iip211.ITEMID, id211.INVENTSITEID, iip211.MODIFIEDDATETIME, iip211.ACTIVATIONDATE, iip211.CREATEDDATETIME\n\t\t\t\t\t\t, iip211.PRICE, iip211.PRICEUNIT, iip211.MARKUP, iip211.PRICEQTY\n\t\t\t\t\tfrom dbo.INVENTITEMPRICE iip211\n\t\t\t\t\tinner join dbo.INVENTDIM id211 on\n\t\t\t\t\t\tiip211.DATAAREAID = id211.DATAAREAID and\n\t\t\t\t\t\tiip211.INVENTDIMID = id211.INVENTDIMID\n\t\t\t\t\twhere iip211.PRICETYPE = 0) iip21 on\n\t\t\tcit21.DATAAREAID = iip21.DATAAREAID and\n\t\t\tcit21.ITEMID = iip21.ITEMID and\n\t\t\tid21.INVENTSITEID = iip21.INVENTSITEID and\n\t\t\tcit21.INVOICEDATE >= iip21.ACTIVATIONDATE) iip2\n\twhere iip2.ROW_NUM = 1\n\tunion all\n\tselect iip3.STANDARDCOST_SOURCE, iip3.RECID, iip3.DATAAREAID, iip3.ITEMID, iip3.CONFIGID, null as INVENTSITEID, iip3.MODIFIEDDATETIME, iip3.ACTIVATIONDATE, iip3.CREATEDDATETIME, iip3.STANDARDCOST\n\tfrom (select 'iip3' as STANDARDCOST_SOURCE, cit31.RECID, cit31.DATAAREAID, cit31.ITEMID, id31.CONFIGID, iip31.MODIFIEDDATETIME, iip31.ACTIVATIONDATE, iip31.CREATEDDATETIME\n\t\t\t, ((iip31.PRICE / isnull(nullif(iip31.PRICEUNIT, 0), 1)) + (iip31.MARKUP / isnull(nullif(iip31.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by cit31.RECID, cit31.DATAAREAID, cit31.ITEMID, id31.CONFIGID order by iip31.ACTIVATIONDATE desc, iip31.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.CUSTINVOICETRANS cit31\n\t\tinner join dbo.INVENTDIM id31 on\n\t\t\tcit31.DATAAREAID = id31.DATAAREAID and\n\t\t\tcit31.INVENTDIMID = id31.INVENTDIMID\n\t\tinner join (select iip311.DATAAREAID, iip311.ITEMID, id311.CONFIGID, iip311.MODIFIEDDATETIME, iip311.ACTIVATIONDATE, iip311.CREATEDDATETIME\n\t\t\t\t\t\t, iip311.PRICE, iip311.PRICEUNIT, iip311.MARKUP, iip311.PRICEQTY\n\t\t\t\t\tfrom dbo.INVENTITEMPRICE iip311\n\t\t\t\t\tinner join dbo.INVENTDIM id311 on\n\t\t\t\t\t\tiip311.DATAAREAID = id311.DATAAREAID and\n\t\t\t\t\t\tiip311.INVENTDIMID = id311.INVENTDIMID\n\t\t\t\t\twhere iip311.PRICETYPE = 0) iip31 on\n\t\t\tcit31.DATAAREAID = iip31.DATAAREAID and\n\t\t\tcit31.ITEMID = iip31.ITEMID and\n\t\t\tid31.CONFIGID = iip31.CONFIGID and\n\t\t\tcit31.INVOICEDATE >= iip31.ACTIVATIONDATE) iip3\n\twhere iip3.ROW_NUM = 1\n\tunion all\n\tselect iip4.STANDARDCOST_SOURCE, iip4.RECID, iip4.DATAAREAID, iip4.ITEMID, null as CONFIGID, null as INVENTSITEID, iip4.MODIFIEDDATETIME, iip4.ACTIVATIONDATE, iip4.CREATEDDATETIME, iip4.STANDARDCOST\n\tfrom (select 'iip4' as STANDARDCOST_SOURCE, cit41.RECID, cit41.DATAAREAID, cit41.ITEMID, iip41.MODIFIEDDATETIME, iip41.ACTIVATIONDATE, iip41.CREATEDDATETIME\n\t\t\t, ((iip41.PRICE / isnull(nullif(iip41.PRICEUNIT, 0), 1)) + (iip41.MARKUP / isnull(nullif(iip41.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by cit41.RECID, cit41.DATAAREAID, cit41.ITEMID order by iip41.ACTIVATIONDATE desc, iip41.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.CUSTINVOICETRANS cit41\n\t\tinner join dbo.INVENTDIM id41 on\n\t\t\tcit41.DATAAREAID = id41.DATAAREAID and\n\t\t\tcit41.INVENTDIMID = id41.INVENTDIMID\n\t\tinner join (select iip411.DATAAREAID, iip411.ITEMID, iip411.MODIFIEDDATETIME, iip411.ACTIVATIONDATE, iip411.CREATEDDATETIME\n\t\t\t\t\t\t, iip411.PRICE, iip411.PRICEUNIT, iip411.MARKUP, iip411.PRICEQTY\n\t\t\t\t\tfrom dbo.INVENTITEMPRICE iip411\n\t\t\t\t\tinner join dbo.INVENTDIM id411 on\n\t\t\t\t\t\tiip411.DATAAREAID = id411.DATAAREAID and\n\t\t\t\t\t\tiip411.INVENTDIMID = id411.INVENTDIMID\n\t\t\t\t\twhere iip411.PRICETYPE = 0) iip41 on\n\t\t\tcit41.DATAAREAID = iip41.DATAAREAID and\n\t\t\tcit41.ITEMID = iip41.ITEMID and\n\t\t\tcit41.INVOICEDATE >= iip41.ACTIVATIONDATE) iip4\n\twhere iip4.ROW_NUM = 1\n\tunion all\n\tselect iip6.STANDARDCOST_SOURCE, null as RECID, iip6.DATAAREAID, iip6.ITEMID, iip6.CONFIGID, iip6.INVENTSITEID, iip6.MODIFIEDDATETIME, iip6.ACTIVATIONDATE, iip6.CREATEDDATETIME, iip6.STANDARDCOST\n\tfrom (select 'iip6' as STANDARDCOST_SOURCE, iip21.DATAAREAID, iip21.ITEMID, id21.CONFIGID, id21.INVENTSITEID, iip21.MODIFIEDDATETIME, iip21.ACTIVATIONDATE, iip21.CREATEDDATETIME\n\t\t\t, ((iip21.PRICE / isnull(nullif(iip21.PRICEUNIT, 0), 1)) + (iip21.MARKUP / isnull(nullif(iip21.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by iip21.DATAAREAID, iip21.ITEMID, id21.CONFIGID, id21.INVENTSITEID order by iip21.ACTIVATIONDATE desc, iip21.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.INVENTITEMPRICE iip21\n\t\tinner join dbo.INVENTDIM id21 on\n\t\t\tiip21.DATAAREAID = id21.DATAAREAID and\n\t\t\tiip21.INVENTDIMID = id21.INVENTDIMID\n\t\twhere iip21.PRICETYPE = 0) iip6\n\twhere iip6.ROW_NUM = 1\n\tunion all\n\tselect iip7.STANDARDCOST_SOURCE, null as RECID, iip7.DATAAREAID, iip7.ITEMID, null as CONFIGID, iip7.INVENTSITEID, iip7.MODIFIEDDATETIME, iip7.ACTIVATIONDATE, iip7.CREATEDDATETIME, iip7.STANDARDCOST\n\tfrom (select 'iip7' as STANDARDCOST_SOURCE, iip22.DATAAREAID, iip22.ITEMID, id22.INVENTSITEID, iip22.MODIFIEDDATETIME, iip22.ACTIVATIONDATE, iip22.CREATEDDATETIME\n\t\t\t, ((iip22.PRICE / isnull(nullif(iip22.PRICEUNIT, 0), 1)) + (iip22.MARKUP / isnull(nullif(iip22.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by iip22.DATAAREAID, iip22.ITEMID, id22.INVENTSITEID order by iip22.ACTIVATIONDATE desc, iip22.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.INVENTITEMPRICE iip22\n\t\tinner join dbo.INVENTDIM id22 on\n\t\t\tiip22.DATAAREAID = id22.DATAAREAID and\n\t\t\tiip22.INVENTDIMID = id22.INVENTDIMID\n\t\twhere iip22.PRICETYPE = 0) iip7\n\twhere iip7.ROW_NUM = 1\n\tunion all\n\tselect iip8.STANDARDCOST_SOURCE, null as RECID, iip8.DATAAREAID, iip8.ITEMID, iip8.CONFIGID, null as INVENTSITEID, iip8.MODIFIEDDATETIME, iip8.ACTIVATIONDATE, iip8.CREATEDDATETIME, iip8.STANDARDCOST\n\tfrom (select 'iip8' as STANDARDCOST_SOURCE, iip23.DATAAREAID, iip23.ITEMID, id23.CONFIGID, iip23.MODIFIEDDATETIME, iip23.ACTIVATIONDATE, iip23.CREATEDDATETIME\n\t\t\t, ((iip23.PRICE / isnull(nullif(iip23.PRICEUNIT, 0), 1)) + (iip23.MARKUP / isnull(nullif(iip23.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by iip23.DATAAREAID, iip23.ITEMID, id23.CONFIGID order by iip23.ACTIVATIONDATE desc, iip23.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.INVENTITEMPRICE iip23\n\t\tinner join dbo.INVENTDIM id23 on\n\t\t\tiip23.DATAAREAID = id23.DATAAREAID and\n\t\t\tiip23.INVENTDIMID = id23.INVENTDIMID\n\t\twhere iip23.PRICETYPE = 0) iip8\n\twhere iip8.ROW_NUM = 1\n\tunion all\n\tselect iip9.STANDARDCOST_SOURCE, null as RECID, iip9.DATAAREAID, iip9.ITEMID, null as CONFIGID, null as INVENTSITEID, iip9.MODIFIEDDATETIME, iip9.ACTIVATIONDATE, iip9.CREATEDDATETIME, iip9.STANDARDCOST\n\tfrom (select 'iip9' as STANDARDCOST_SOURCE, iip24.DATAAREAID, iip24.ITEMID, iip24.MODIFIEDDATETIME, iip24.ACTIVATIONDATE, iip24.CREATEDDATETIME\n\t\t\t, ((iip24.PRICE / isnull(nullif(iip24.PRICEUNIT, 0), 1)) + (iip24.MARKUP / isnull(nullif(iip24.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by iip24.DATAAREAID, iip24.ITEMID order by iip24.ACTIVATIONDATE desc, iip24.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.INVENTITEMPRICE iip24\n\t\twhere iip24.PRICETYPE = 0) iip9\n\twhere iip9.ROW_NUM = 1\n\t) cit1\noption(recompile, maxdop 16)",
												"type": "Expression"
											},
											"queryTimeout": "20:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeSink",
											"preCopyScript": {
												"value": "@concat('TRUNCATE TABLE ',pipeline().parameters.p_tgt_raw_schema_nm,'.',pipeline().parameters.p_tgt_raw_table_nm_2)",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "ls_blob_storage",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@pipeline().globalParameters.rootDir",
												"type": "Expression"
											}
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													},
													"sink": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "STANDARDCOST_SOURCE",
														"type": "String"
													},
													"sink": {
														"name": "STANDARDCOST_SOURCE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RECID",
														"type": "Int64"
													},
													"sink": {
														"name": "RECID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DATAAREAID",
														"type": "String"
													},
													"sink": {
														"name": "DATAAREAID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ITEMID",
														"type": "String"
													},
													"sink": {
														"name": "ITEMID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "INVENTDIM_CONFIGID",
														"type": "String"
													},
													"sink": {
														"name": "INVENTDIM_CONFIGID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "INVENTDIM_INVENTSITEID",
														"type": "String"
													},
													"sink": {
														"name": "INVENTDIM_INVENTSITEID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE_MODIFIEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "INVENTITEMPRICE_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE_ACTIVATIONDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "INVENTITEMPRICE_ACTIVATIONDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE_CREATEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "INVENTITEMPRICE_CREATEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE_STANDARDCOST",
														"type": "Decimal"
													},
													"sink": {
														"name": "INVENTITEMPRICE_STANDARDCOST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LAST_MODIFIEDDATE",
														"type": "String"
													},
													"sink": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sql_server",
											"type": "DatasetReference",
											"parameters": {
												"p_src_table_name": {
													"value": "@pipeline().parameters.p_src_table_nm",
													"type": "Expression"
												},
												"p_src_schema_name": {
													"value": "@pipeline().parameters.p_src_schema_nm",
													"type": "Expression"
												},
												"p_ls_serverName": {
													"value": "@pipeline().globalParameters.nala_sql_serverName",
													"type": "Expression"
												},
												"p_ls_dbName": {
													"value": "@pipeline().globalParameters.nala_sql_dbName",
													"type": "Expression"
												},
												"p_ls_sqlUsername": {
													"value": "@pipeline().globalParameters.sql_userName",
													"type": "Expression"
												},
												"p_ls_sqlPassword": {
													"value": "@pipeline().globalParameters.sql_password",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_snowflake",
											"type": "DatasetReference",
											"parameters": {
												"p_tgt_table_name": {
													"value": "@pipeline().parameters.p_tgt_raw_table_nm_2",
													"type": "Expression"
												},
												"p_tgt_schema_name": {
													"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
													"type": "Expression"
												},
												"p_ls_DbName": {
													"value": "@pipeline().globalParameters.snow_rawDb",
													"type": "Expression"
												},
												"p_ls_Env": {
													"value": "@pipeline().globalParameters.environment",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "nala_raw_load_failure_notification_2",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "custinvoicetrans_standardcost_nala_to_raw",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('custinvoicetrans_standardcost_nala_to_raw').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@replace(replace(replace(activity('custinvoicetrans_standardcost_nala_to_raw').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('custinvoicetrans_standardcost_nala_to_raw').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('custinvoicetrans_standardcost_nala_to_raw').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": "@pipeline().parameters.p_tgt_curate_table_nm",
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "sql_nala_load_to_raw_fail_2",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "nala_raw_load_failure_notification_2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('custinvoicetrans_standardcost_nala_to_raw').Error['message']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								},
								{
									"name": "salesline_cogs_fifo_nala_to_raw",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "HK_JOB_RUN_ID",
													"value": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													}
												},
												{
													"name": "HK_SOURCE_NAME",
													"value": {
														"value": "@pipeline().parameters.p_src_nm",
														"type": "Expression"
													}
												},
												{
													"name": "LAST_MODIFIEDDATE",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "SELECT\nsl1.DATAAREAID AS SALESLINE1_DATAAREAID\n,sl1.INVENTTRANSID AS SALESLINE1_INVENTTRANSID\n,sl1.CURRENCYCODE AS SALESLINE1_CURRENCYCODE\n,sl1.SALESSTATUS AS SALESLINE1_SALESSTATUS\n,sl1.COSTPRICE AS SALESLINE1_COSTPRICE\n,sl1.SALESQTY AS SALESLINE1_SALESQTY\n,sl1.CREATEDDATETIME AS SALESLINE1_CREATEDDATETIME\n,isnull(sl1.MODIFIEDDATETIME, '1950-01-01') AS SALESLINE1_MODIFIEDDATETIME\n,dpt1.RECID AS DIRPARTYTABLE1_RECID\n,dpt1.DATAAREA AS DIRPARTYTABLE1_DATAAREA\n, isnull(dpt1.MODIFIEDDATETIME, '1950-01-01') AS DIRPARTY1_MODIFIEDDATETIME\n,l1.PRIMARYFORLEGALENTITY AS LEDGER1_PRIMARYFORLEGALENTITY\n,l1.ACCOUNTINGCURRENCY AS LEDGER1_ACCOUNTINGCURRENCY\n,l1.DEFAULTEXCHANGERATETYPE AS LEDGER1_DEFAULTEXCHANGERATETYPE\n, isnull(l1.MODIFIEDDATETIME, '1950-01-01') AS LEDGER1_MODIFIEDDATETIME\n,it1.DATAAREAID AS INVENTTRANS1_DATAAREAID\n,it1.INVENTTRANSID AS INVENTTRANS1_INVENTTRANSID\n,it1.KITPARENTINVENTTRANSID AS INVENTTRANS1_KITPARENTINVENTTRANSID\n,it1.KITBOMLEVEL AS INVENTTRANS1_KITBOMLEVEL\n,it1.COSTAMOUNTPOSTED AS INVENTTRANS1_COSTAMOUNTPOSTED\n,it1.COSTAMOUNTADJUSTMENT AS INVENTTRANS1_COSTAMOUNTADJUSTMENT\n,it1.KITIDENTIFIER AS INVENTTRANS1_KITIDENTIFIER\n, isnull(it1.MODIFIEDDATETIME, '1950-01-01') AS INVENTTRANS1_MODIFIEDDATETIME\n,er1.FROMCURRENCYCODE AS EXCHANGERATE1_FROMCURRENCYCODE\n,er1.TOCURRENCYCODE AS EXCHANGERATE1_TOCURRENCYCODE\n,er1.DATAAREA AS EXCHANGERATE1_DATAAREA\n,er1.NORM AS EXCHANGERATE1_NORM\n,er1.EXCHANGERATE AS EXCHANGERATE1_EXCHANGERATE\n,er1.EXCHRATE AS EXCHANGERATE1_EXCHRATE\n,er1.VALIDFROM AS EXCHANGERATE1_VALIDFROM\n,er1.VALIDTO AS EXCHANGERATE1_VALIDTO\n, isnull(er1.MODIFIEDDATETIME, '1950-01-01') AS EXCHANGERATE1_MODIFIEDDATETIME\n,(SELECT MAX(LastUpdateDate) \n FROM (VALUES (sl1.MODIFIEDDATETIME)\n\t, (ISNULL(l1.MODIFIEDDATETIME, '1950-01-01'))\n\t, (ISNULL(it1.MODIFIEDDATETIME, '1950-01-01'))\n\t, (ISNULL(er1.MODIFIEDDATETIME, '1950-01-01'))\n ) AS UpdateDate(LastUpdateDate)) AS LATEST_MODIFIEDDATETIME\nFROM dbo.SALESLINE sl1\ninner join dbo.DIRPARTYTABLE dpt1 on\n\tsl1.partition = dpt1.PARTITION\n\tAND sl1.DATAAREAID = dpt1.DATAAREA\ninner join dbo.[LEDGER] l1 ON\n\tl1.PARTITION = dpt1.PARTITION\n\tAND dpt1.RECID = l1.PRIMARYFORLEGALENTITY  --14,877,027\nLEFT join (SELECT it10.DATAAREAID, it10.INVENTTRANSID, it10.KITPARENTINVENTTRANSID, it10.KITBOMLEVEL, it10.KITIDENTIFIER, it10.PARTITION\n\t\t\t\t, sum(it10.COSTAMOUNTPOSTED) as COSTAMOUNTPOSTED\n\t\t\t\t, sum(it10.COSTAMOUNTADJUSTMENT) as COSTAMOUNTADJUSTMENT\n\t\t\t\t, max(it10.MODIFIEDDATETIME) as MODIFIEDDATETIME\n\t\t\tFROM (SELECT it100.DATAAREAID, ito100.INVENTTRANSID,it100.PARTITION --this inner select : 17,355,272 00:03:55, moddt>=2025.01.01\n\t\t\t\t\t, CASE WHEN kpit100.KITINVENTTRANSID IS NULL THEN NULL\n\t\t\t\t\t\tELSE ISNULL(kpit100.KITPARENTINVENTTRANSID, '')\n\t\t\t\t\t\tEND AS KITPARENTINVENTTRANSID\n\t\t\t\t\t, CASE WHEN kpit100.KITINVENTTRANSID IS NULL THEN NULL\n\t\t\t\t\t\tELSE ISNULL(kpit100.KITBOMLEVEL, 0)\n\t\t\t\t\t\tEND AS KITBOMLEVEL\n\t\t\t\t\t, CASE WHEN kpit100.KITINVENTTRANSID IS NOT NULL AND ISNULL(kpit100.KITBOMLEVEL, 0) = 0 THEN 'Kit'\n\t\t\t\t\t\t\tWHEN kpit100.KITINVENTTRANSID IS NOT NULL AND ISNULL(kpit100.KITBOMLEVEL, 0) != 0 THEN 'KitComponent'\n\t\t\t\t\t\tELSE NULL\n\t\t\t\t\t\tEND AS KITIDENTIFIER\n\t\t\t\t\t, it100.COSTAMOUNTPOSTED, it100.COSTAMOUNTADJUSTMENT\n\t\t\t\t\t, (SELECT MAX(i) FROM (VALUES (it100.MODIFIEDDATETIME), (ito100.MODIFIEDDATETIME)) AS T(i)) AS MODIFIEDDATETIME\n\t\t\t\tFROM dbo.INVENTTRANS it100\n\t\t\t\tINNER JOIN (SELECT DATAAREAID, RECID, PARTITION\n\t\t\t\t\t\t\t\t,INVENTTRANSID --,MAX(INVENTTRANSID) AS INVENTTRANSID  --\n\t\t\t\t\t\t\t\t,MODIFIEDDATETIME --, MAX(MODIFIEDDATETIME) AS MODIFIEDDATETIME  --\n\t\t\t\t\t\t\tFROM dbo.INVENTTRANSORIGIN\n\t\t\t\t\t\t\t--GROUP BY DATAAREAID, RECID\n\t\t\t\t\t\t\t) ito100 ON\n\t\t\t\t\t\t\tit100.PARTITION = ito100.PARTITION\n\t\t\t\t\t\t\t\tAND it100.DATAAREAID = ito100.DATAAREAID\n\t\t\t\t\t\t\t\tAND it100.INVENTTRANSORIGIN = ito100.RECID\n\t\t\t\tLEFT JOIN (SELECT DATAAREAID, KITINVENTTRANSID, PARTITION\n\t\t\t\t\t\t\t\t, MAX(KITPARRENTINVENTTRANSID) AS KITPARENTINVENTTRANSID\n\t\t\t\t\t\t\t\t, MAX(KITBOMLEVEL) AS KITBOMLEVEL\n\t\t\t\t\t\t\tFROM dbo.KITSALESLINE\n\t\t\t\t\t\t\tGROUP BY DATAAREAID, KITINVENTTRANSID,PARTITION\n\t\t\t\t\t\t\t) kpit100 ON\n\t\t\t\t\t\t\t\tito100.PARTITION = kpit100.PARTITION\n\t\t\t\t\t\t\t\tAND ito100.DATAAREAID = kpit100.DATAAREAID\n\t\t\t\t\t\t\t\tAND ito100.INVENTTRANSID = kpit100.KITINVENTTRANSID\n\nWHERE it100.modifieddatetime >= CAST(DATEPART(YEAR,DATEADD(YEAR,-5,GETDATE())) AS CHAR(4))+'-01-01'\n\n\t\t\t\t) it10\n\t\t\tgroup by it10.DATAAREAID, it10.INVENTTRANSID, it10.KITPARENTINVENTTRANSID, it10.KITBOMLEVEL, it10.KITIDENTIFIER, it10.PARTITION\n\n\t\t\tunion all\n\n\t\t\tselect it20.DATAAREAID, it20.INVENTTRANSID, it20.KITPARENTINVENTTRANSID, it20.KITBOMLEVEL, it20.KITIDENTIFIER, it20.partition\n\t\t\t\t, sum(it20.COSTAMOUNTPOSTED) as COSTAMOUNTPOSTED\n\t\t\t\t, sum(it20.COSTAMOUNTADJUSTMENT) as COSTAMOUNTADJUSTMENT\n\t\t\t\t, max(it20.MODIFIEDDATETIME) as MODIFIEDDATETIME\n\t\t\tfrom (select it200.DATAAREAID, kpit200.KITPARENTINVENTTRANSID as INVENTTRANSID, it200.PARTITION\n\t\t\t\t\t, case when isnull(kpit200.KITBOMLEVEL - 1, 0) = 0 then ''\n\t\t\t\t\t\telse isnull(kpit200.KITPARENTINVENTTRANSID, '')\n\t\t\t\t\t\tend as KITPARENTINVENTTRANSID\n\t\t\t\t\t, isnull(kpit200.KITBOMLEVEL - 1, 0) as KITBOMLEVEL\n\t\t\t\t\t, case when isnull(kpit200.KITBOMLEVEL - 1, 0) = 0 then 'Kit'\n\t\t\t\t\t\telse 'KitComponent'\n\t\t\t\t\t\tend as KITIDENTIFIER\n\t\t\t\t\t, it200.COSTAMOUNTPOSTED, it200.COSTAMOUNTADJUSTMENT\n\t\t\t\t\t, (select max(i) from (values (it200.MODIFIEDDATETIME), (ito200.MODIFIEDDATETIME)) AS T(i)) as MODIFIEDDATETIME\n\t\t\t\tfrom dbo.INVENTTRANS it200\n\t\t\t\tinner join (select DATAAREAID, RECID, partition\n\t\t\t\t\t\t\t\t,INVENTTRANSID --, max(INVENTTRANSID) as INVENTTRANSID\n\t\t\t\t\t\t\t\t,MODIFIEDDATETIME --, max(MODIFIEDDATETIME) as MODIFIEDDATETIME\n\t\t\t\t\t\t\tfrom dbo.INVENTTRANSORIGIN\n\t\t\t\t\t\t\t--group by DATAAREAID, RECID, partition\n\t\t\t\t\t\t\t) ito200 \n\t\t\t\t\t\t\t\tON it200.PARTITION = ito200.partition\n\t\t\t\t\t\t\t\t\tAND it200.DATAAREAID = ito200.DATAAREAID\n\t\t\t\t\t\t\t\t\tAND it200.INVENTTRANSORIGIN = ito200.RECID\n\t\t\t\tinner join (select DATAAREAID, KITINVENTTRANSID, partition\n\t\t\t\t\t\t\t\t, max(KITPARRENTINVENTTRANSID) as KITPARENTINVENTTRANSID\n\t\t\t\t\t\t\t\t, max(KITBOMLEVEL) as KITBOMLEVEL\n\t\t\t\t\t\t\tfrom dbo.KITSALESLINE\n\t\t\t\t\t\t\tgroup by DATAAREAID, KITINVENTTRANSID, partition) kpit200 on\n\t\t\t\t\tito200.partition = kpit200.partition\n\t\t\t\t\tAND ito200.DATAAREAID = kpit200.DATAAREAID\n\t\t\t\t\tAND ito200.INVENTTRANSID = kpit200.KITINVENTTRANSID\n\nWHERE it200.modifieddatetime >= CAST(DATEPART(YEAR,DATEADD(YEAR,-5,GETDATE())) AS CHAR(4))+'-01-01'\n\n\t\t\t\t) it20\n\t\t\tgroup by it20.DATAAREAID, it20.INVENTTRANSID, it20.KITPARENTINVENTTRANSID, it20.KITBOMLEVEL, it20.KITIDENTIFIER, it20.PARTITION\n\t\t\t) it1 ON\n            sl1.PARTITION = it1.PARTITION\n\t\t\t\tAND sl1.DATAAREAID = it1.DATAAREAID \n\t\t\t\tAND sl1.INVENTTRANSID = it1.INVENTTRANSID\n\n\nLEFT join (select ercp10.FROMCURRENCYCODE\n\t\t\t\t, ercp10.TOCURRENCYCODE\n\t\t\t\t, ercp10.DATAAREA\n\t\t\t\t, ercp10.NORM\n\t\t\t\t, er10.EXCHANGERATE\n\t\t\t\t, case when ercp10.NORM = 0 then er10.EXCHANGERATE / 100\n\t\t\t\t\t\twhen ercp10.NORM = 1 then 100 / er10.EXCHANGERATE\n\t\t\t\t\tend as EXCHRATE\n\t\t\t\t, er10.VALIDFROM\n\t\t\t\t, er10.VALIDTO\n\t\t\t\t, (select max(i) from (values (ercp10.MODIFIEDDATETIME), (er10.MODIFIEDDATETIME)) AS T(i)) as MODIFIEDDATETIME\n\t\t\tfrom (select ercp100.FROMCURRENCYCODE\n\t\t\t\t\t, ercp100.TOCURRENCYCODE\n\t\t\t\t\t, ercp100.RECID\n\t\t\t\t\t, ercp100.EXCHANGERATETYPE\n\t\t\t\t\t, ercp100.NORM\n\t\t\t\t\t, dpt100.DATAAREA\n\t\t\t\t\t, (select max(i) from (values (ercp100.MODIFIEDDATETIME), (l100.MODIFIEDDATETIME), (dpt100.MODIFIEDDATETIME)) AS T(i)) as MODIFIEDDATETIME\n\t\t\t\tfrom (select FROMCURRENCYCODE\n\t\t\t\t\t\t, TOCURRENCYCODE\n\t\t\t\t\t\t, RECID\n\t\t\t\t\t\t, EXCHANGERATETYPE\n\t\t\t\t\t\t, 0 as NORM\n\t\t\t\t\t\t, MODIFIEDDATETIME\n\t\t\t\t\tfrom dbo.EXCHANGERATECURRENCYPAIR\n\t\t\t\t\tunion\n\t\t\t\t\tselect TOCURRENCYCODE\n\t\t\t\t\t\t, FROMCURRENCYCODE\n\t\t\t\t\t\t, RECID\n\t\t\t\t\t\t, EXCHANGERATETYPE\n\t\t\t\t\t\t, 1 as NORM\n\t\t\t\t\t\t, MODIFIEDDATETIME\n\t\t\t\t\tfrom dbo.EXCHANGERATECURRENCYPAIR\n\t\t\t\t\t) ercp100\n\t\t\t\tinner join dbo.LEDGER l100 on\n\t\t\t\t\tercp100.EXCHANGERATETYPE = l100.DEFAULTEXCHANGERATETYPE and\n\t\t\t\t\tercp100.FROMCURRENCYCODE = l100.ACCOUNTINGCURRENCY\n\t\t\t\tinner join dbo.DIRPARTYTABLE dpt100 on\n\t\t\t\t\tl100.PRIMARYFORLEGALENTITY = dpt100.RECID\n\t\t\t\t) ercp10\n\t\t\tinner join dbo.EXCHANGERATE er10 on\n\t\t\t\tercp10.RECID = er10.EXCHANGERATECURRENCYPAIR\n\t\t\t) er1 on\n\tsl1.CURRENCYCODE = er1.TOCURRENCYCODE and\n\tsl1.CREATEDDATETIME between er1.VALIDFROM and er1.VALIDTO and\n\tsl1.DATAAREAID = er1.DATAAREA\nWHERE sl1.MODIFIEDDATETIME >= CAST(DATEPART(YEAR,DATEADD(YEAR,-5,GETDATE())) AS CHAR(4))+'-01-01'\n\tOR ISNULL(l1.MODIFIEDDATETIME, '1950-01-01') >= CAST(DATEPART(YEAR,DATEADD(YEAR,-5,GETDATE())) AS CHAR(4))+'-01-01'\n\tOR ISNULL(it1.MODIFIEDDATETIME, '1950-01-01') >= CAST(DATEPART(YEAR,DATEADD(YEAR,-5,GETDATE())) AS CHAR(4))+'-01-01'\n\t--OR ISNULL(er1.MODIFIEDDATETIME, '1950-01-01') >= CAST(DATEPART(YEAR,DATEADD(YEAR,-5,GETDATE())) AS CHAR(4))+'-01-01'\noption(recompile, maxdop 16)\n\n",
												"type": "Expression"
											},
											"queryTimeout": "20:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeSink",
											"preCopyScript": {
												"value": "@concat('TRUNCATE TABLE ',pipeline().parameters.p_tgt_raw_schema_nm,'.',pipeline().parameters.p_tgt_raw_table_nm_3)",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "ls_blob_storage",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@pipeline().globalParameters.rootDir",
												"type": "Expression"
											}
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													},
													"sink": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_DATAAREAID",
														"type": "String"
													},
													"sink": {
														"name": "SALESLINE1_DATAAREAID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_INVENTTRANSID",
														"type": "String"
													},
													"sink": {
														"name": "SALESLINE1_INVENTTRANSID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_CURRENCYCODE",
														"type": "String"
													},
													"sink": {
														"name": "SALESLINE1_CURRENCYCODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_SALESSTATUS",
														"type": "Int32"
													},
													"sink": {
														"name": "SALESLINE1_SALESSTATUS",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_COSTPRICE",
														"type": "Decimal"
													},
													"sink": {
														"name": "SALESLINE1_COSTPRICE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_SALESQTY",
														"type": "Decimal"
													},
													"sink": {
														"name": "SALESLINE1_SALESQTY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_CREATEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "SALESLINE1_CREATEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_MODIFIEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "SALESLINE1_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DIRPARTYTABLE1_RECID",
														"type": "Int64"
													},
													"sink": {
														"name": "DIRPARTYTABLE1_RECID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DIRPARTYTABLE1_DATAAREA",
														"type": "String"
													},
													"sink": {
														"name": "DIRPARTYTABLE1_DATAAREA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DIRPARTY1_MODIFIEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "DIRPARTYTABLE1_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LEDGER1_PRIMARYFORLEGALENTITY",
														"type": "Int64"
													},
													"sink": {
														"name": "LEDGER1_PRIMARYFORLEGALENTITY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LEDGER1_ACCOUNTINGCURRENCY",
														"type": "String"
													},
													"sink": {
														"name": "LEDGER1_ACCOUNTINGCURRENCY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LEDGER1_DEFAULTEXCHANGERATETYPE",
														"type": "Int64"
													},
													"sink": {
														"name": "LEDGER1_DEFAULTEXCHANGERATETYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LEDGER1_MODIFIEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "LEDGER1_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "INVENTTRANS1_DATAAREAID",
														"type": "String"
													},
													"sink": {
														"name": "INVENTTRANS1_DATAAREAID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "INVENTTRANS1_INVENTTRANSID",
														"type": "String"
													},
													"sink": {
														"name": "INVENTTRANS1_INVENTTRANSID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "INVENTTRANS1_KITPARENTINVENTTRANSID",
														"type": "String"
													},
													"sink": {
														"name": "INVENTTRANS1_KITPARENTINVENTTRANSID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "INVENTTRANS1_KITBOMLEVEL",
														"type": "Int32"
													},
													"sink": {
														"name": "INVENTTRANS1_KITBOMLEVEL",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "INVENTTRANS1_COSTAMOUNTPOSTED",
														"type": "Decimal"
													},
													"sink": {
														"name": "INVENTTRANS1_COSTAMOUNTPOSTED",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "INVENTTRANS1_COSTAMOUNTADJUSTMENT",
														"type": "Decimal"
													},
													"sink": {
														"name": "INVENTTRANS1_COSTAMOUNTADJUSTMENT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "INVENTTRANS1_KITIDENTIFIER",
														"type": "String"
													},
													"sink": {
														"name": "INVENTTRANS1_KITIDENTIFIER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "INVENTTRANS1_MODIFIEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "INVENTTRANS1_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "EXCHANGERATE1_FROMCURRENCYCODE",
														"type": "String"
													},
													"sink": {
														"name": "EXCHANGERATE1_FROMCURRENCYCODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "EXCHANGERATE1_TOCURRENCYCODE",
														"type": "String"
													},
													"sink": {
														"name": "EXCHANGERATE1_TOCURRENCYCODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "EXCHANGERATE1_DATAAREA",
														"type": "String"
													},
													"sink": {
														"name": "EXCHANGERATE1_DATAAREA",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "EXCHANGERATE1_NORM",
														"type": "Int32"
													},
													"sink": {
														"name": "EXCHANGERATE1_NORM",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "EXCHANGERATE1_EXCHANGERATE",
														"type": "Decimal"
													},
													"sink": {
														"name": "EXCHANGERATE1_EXCHANGERATE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "EXCHANGERATE1_EXCHRATE",
														"type": "Decimal"
													},
													"sink": {
														"name": "EXCHANGERATE1_EXCHRATE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "EXCHANGERATE1_VALIDFROM",
														"type": "DateTime"
													},
													"sink": {
														"name": "EXCHANGERATE1_VALIDFROM",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "EXCHANGERATE1_VALIDTO",
														"type": "DateTime"
													},
													"sink": {
														"name": "EXCHANGERATE1_VALIDTO",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "EXCHANGERATE1_MODIFIEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "EXCHANGERATE1_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sql_server",
											"type": "DatasetReference",
											"parameters": {
												"p_src_table_name": "n/a",
												"p_src_schema_name": "n/a",
												"p_ls_serverName": {
													"value": "@pipeline().globalParameters.nala_sql_serverName",
													"type": "Expression"
												},
												"p_ls_dbName": {
													"value": "@pipeline().globalParameters.nala_sql_dbName",
													"type": "Expression"
												},
												"p_ls_sqlUsername": {
													"value": "@pipeline().globalParameters.sql_userName",
													"type": "Expression"
												},
												"p_ls_sqlPassword": {
													"value": "@pipeline().globalParameters.sql_password",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_snowflake",
											"type": "DatasetReference",
											"parameters": {
												"p_tgt_table_name": {
													"value": "@pipeline().parameters.p_tgt_raw_table_nm_3",
													"type": "Expression"
												},
												"p_tgt_schema_name": {
													"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
													"type": "Expression"
												},
												"p_ls_DbName": {
													"value": "@pipeline().globalParameters.snow_rawDb",
													"type": "Expression"
												},
												"p_ls_Env": {
													"value": "@pipeline().globalParameters.environment",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "nala_raw_load_failure_notification_3",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "salesline_cogs_fifo_nala_to_raw",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('salesline_cogs_fifo_nala_to_raw').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@replace(replace(replace(activity('salesline_cogs_fifo_nala_to_raw').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('salesline_cogs_fifo_nala_to_raw').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('salesline_cogs_fifo_nala_to_raw').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": "@pipeline().parameters.p_tgt_curate_table_nm",
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "sql_nala_load_to_raw_fail_3",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "nala_raw_load_failure_notification_3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('salesline_cogs_fifo_nala_to_raw').Error['message']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								}
							]
						},
						{
							"value": "2",
							"activities": [
								{
									"name": "custinvoicetrans_to_adls_retail",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "HK_JOB_RUN_ID",
													"value": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													}
												},
												{
													"name": "HK_SOURCE_NAME",
													"value": {
														"value": "@pipeline().parameters.p_src_nm",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "SELECT cit1.RECID \n,cit1.DATAAREAID \n,cit1.ITEMID \n,cit1.CURRENCYCODE \n,cit1.DEFAULTDIMENSION \n,cit1.TRANSACTIONCODE \n,cit1.INVENTDIMID \n,cit1.DELIVERYPOSTALADDRESS \n,cit1.MCRDLVMODE \n,cit1.SALESCATEGORY \n,cit1.RETURNDISPOSITIONCODEID \n,cit1.SALESGROUP \n,cit1.ORIGSALESID \n,cit1.TAXGROUP \n,cit1.TAXITEMGROUP \n,cit1.SALESUNIT \n,cit1.DLVDATE \n,cit1.INVOICEDATE \n,cit1.RETURNARRIVALDATE \n,cit1.RETURNCLOSEDDATE \n,cit1.INVENTTRANSID \n,cit1.INVOICEID \n,cit1.LINENUM \n,cit1.INVENTQTY \n,cit1.QTY \n,cit1.QTYPHYSICAL \n,cit1.PRICEUNIT \n,cit1.SALESPRICE \n,cit1.COMMISSAMOUNTCUR \n,cit1.COMMISSAMOUNTMST \n,cit1.LINEAMOUNT \n,cit1.LINEAMOUNTMST \n,cit1.TAXAMOUNT \n,cit1.TAXAMOUNTMST \n,cit1.DISCPERCENT \n,cit1.DISCAMOUNT \n,cit1.LINEDISC \n,cit1.LINEPERCENT \n,cit1.SUMLINEDISC \n,cit1.SUMLINEDISCMST \n,cit1.MODIFIEDDATETIME \n,def1.BUSINESS_UNIT as DEFAULTDIMENSION_BUSINESS_UNIT \n,def1.DEFAULTDIMENSION_MODIFIEDDATETIME \n,st1.SMMCAMPAIGNID as SALESTABLE_SMMCAMPAIGNID \n,st1.COMMISSIONGROUP as SALESTABLE_COMMISSIONGROUP \n,st1.INVOICEACCOUNT as SALESTABLE_INVOICEACCOUNT \n,st1.MARKUPGROUP as SALESTABLE_MARKUPGROUP \n,st1.RETURNREASONCODEID as SALESTABLE_RETURNREASONCODEID \n,st1.LINEDISC as SALESTABLE_LINEDISC \n,st1.SALESPOOLID as SALESTABLE_SALESPOOLID \n,st1.PRICEGROUPID as SALESTABLE_PRICEGROUPID \n,st1.WORKERSALESRESPONSIBLE as SALESTABLE_WORKERSALESRESPONSIBLE \n,null as SALESTABLE_ATAGENT \n,st1.SHIPCARRIERBLINDSHIPMENT as SALESTABLE_SHIPCARRIERBLINDSHIPMENT \n,st1.SHIPCARRIEREXPEDITEDSHIPMENT as SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT \n,null as SALESTABLE_ORDERBLOCKED \n,st1.MCRORDERSTOPPED as SALESTABLE_MCRORDERSTOPPED \n,st1.SHIPCARRIERFUELSURCHARGE as SALESTABLE_SHIPCARRIERFUELSURCHARGE \n,st1.INVENTSITEID as SALESTABLE_INVENTSITEID \n,st1.MODIFIEDDATETIME as SALESTABLE_MODIFIEDDATETIME \n,cij1.ORDERACCOUNT as CUSTINVOICEJOUR_ORDERACCOUNT \n,cij1.CUSTGROUP as CUSTINVOICEJOUR_CUSTGROUP \n,cij1.INVOICEPOSTALADDRESS as CUSTINVOICEJOUR_INVOICEPOSTALADDRESS \n,cij1.DLVTERM as CUSTINVOICEJOUR_DLVTERM \n,cij1.PAYMENT as CUSTINVOICEJOUR_PAYMENT \n,cij1.RETURNREASONCODEID as CUSTINVOICEJOUR_RETURNREASONCODEID \n,cij1.SALESORIGINID as CUSTINVOICEJOUR_SALESORIGINID \n,cij1.INVENTLOCATIONID as CUSTINVOICEJOUR_INVENTLOCATIONID \n,cij1.WORKERSALESTAKER as CUSTINVOICEJOUR_WORKERSALESTAKER \n,cij1.DOCUMENTDATE as CUSTINVOICEJOUR_DOCUMENTDATE \n,cij1.DUEDATE as CUSTINVOICEJOUR_DUEDATE \n,cij1.LEDGERVOUCHER as CUSTINVOICEJOUR_LEDGERVOUCHER \n,cij1.PURCHASEORDER as CUSTINVOICEJOUR_PURCHASEORDER \n,cij1.SALESTYPE as CUSTINVOICEJOUR_SALESTYPE\n,cij1.JOURNALNUM as CUSTINVOICEJOUR_JOURNALNUM\n,cij1.JOURNALNAME as CUSTINVOICEJOUR_JOURNALNAME\n,cij1.MODIFIEDDATETIME as CUSTINVOICEJOUR_MODIFIEDDATETIME \n,id1.CONFIGID as INVENTDIM1_CONFIGID \n,id1.INVENTSITEID as INVENTDIM1_INVENTSITEID\n,id1.MODIFIEDDATETIME as INVENTDIM1_MODIFIEDDATETIME \n,null as INVENTDIMCOMBINATION_PDMSTATUS \n,idc1.MODIFIEDDATETIME as INVENTDIMCOMBINATION_MODIFIEDDATETIME \n,null as SALESLINE1_TPX_RETURNREASONCODEID \n,sl1.LINEDISC as SALESLINE1_LINEDISC \n,sl1.LINEPERCENT as SALESLINE1_LINEPERCENT \n,sl1.COMPLETE as SALESLINE1_COMPLETE \n,null as SALESLINE1_ORDERBLOCKED \n,sl1.SCRAP as SALESLINE1_SCRAP \n,sl1.STOCKEDPRODUCT as SALESLINE1_STOCKEDPRODUCT \n,null as SALESLINE1_TPX_MANUFACTUREDATE \n,null as SALESLINE1_TPX_RELATEDORDERDATE \n,sl1.CREATEDDATETIME as SALESLINE1_CREATEDDATETIME \n,null as SALESLINE1_TPX_PRODUCTIONTIME \n,null as SALESLINE1_TPX_REGISTRYNUMBER \n,sl1.MODIFIEDDATETIME as SALESLINE1_MODIFIEDDATETIME \n,tet1.ENUMVALUELABEL as TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS \n,tet2.ENUMVALUELABEL as TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER \n,tet3.ENUMVALUELABEL as TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER \n,tet4.ENUMVALUELABEL as TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE \n,tet5.ENUMVALUELABEL as TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE \n,tet6.ENUMVALUELABEL as TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE \n,tet7.ENUMVALUELABEL as TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE \n,tet8.ENUMVALUELABEL as TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE\n,tet9.ENUMVALUELABEL as TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE  \n,mslds1.DROPSHIPMENT as MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT \n,sl2.CREATEDDATETIME as SALESLINE2_CREATEDDATETIME \n,sl2.INVENTDIMID as SALESLINE2_INVENTDIMID \n,sl2.SALESID as SALESLINE2_SALESID \n,sl2.MODIFIEDDATETIME as SALESLINE2_MODIFIEDDATETIME \n,da1.TIMEZONE as DATAAREA1_TIMEZONE \n,tzi1.TIMEBIAS as TIMEZONEINFO1_TIMEBIAS \n,da3.TIMEZONE as DATAAREA3_TIMEZONE \n,tzi3.TIMEBIAS as TIMEZONEINFO3_TIMEBIAS \n,null as INVENTITEMPRICE1_STANDARDCOST \n,null as INVENTITEMPRICE1_MODIFIEDDATETIME \n,null as INVENTITEMPRICE2_STANDARDCOST \n,null as INVENTITEMPRICE2_MODIFIEDDATETIME \n,null as INVENTITEMPRICE3_STANDARDCOST \n,null as INVENTITEMPRICE3_MODIFIEDDATETIME \n,null as INVENTITEMPRICE4_STANDARDCOST \n,null as INVENTITEMPRICE4_MODIFIEDDATETIME \n,null as INVENTITEMPRICE6_STANDARDCOST \n,null as INVENTITEMPRICE6_MODIFIEDDATETIME \n,null as INVENTITEMPRICE7_STANDARDCOST \n,null as INVENTITEMPRICE7_MODIFIEDDATETIME \n,null as INVENTITEMPRICE8_STANDARDCOST \n,null as INVENTITEMPRICE8_MODIFIEDDATETIME \n,null as INVENTITEMPRICE9_STANDARDCOST \n,null as INVENTITEMPRICE9_MODIFIEDDATETIME\n ,mslpo1.RECID as MCRSALESLINEPRICEOVERRIDE1_RECID \n ,mslpo1.REASONCODE as MCRSALESLINEPRICEOVERRIDE2_REASONCODE \n ,null as TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION \n ,null as PDMSTATUS_NAME\n ,(SELECT MAX(LastUpdateDate) \n FROM (VALUES (sl1.MODIFIEDDATETIME),\n  (isnull(def1.DEFAULTDIMENSION_MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(st1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(cij1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(id1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(idc1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(sl1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(sl2.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(id2.INVENTDIM_MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(id2.INVENTSITE_MODIFIEDDATETIME, '1950-01-01'))\n ) AS UpdateDate(LastUpdateDate)) AS LATEST_MODIFIEDDATETIME\nFROM CUSTINVOICETRANS cit1\nleft join (select distinct sl10.DEFAULTDIMENSION\n\t\t\t\t, max(\n\t\t\t\t\tcase when da1.NAME = 'BusinessUnit' then davsi1.DISPLAYVALUE\n\t\t\t\t\t\telse null\n\t\t\t\t\t\tend\n\t\t\t\t\t) over (partition by sl10.DEFAULTDIMENSION) as BUSINESS_UNIT\n\t\t\t\t, max(\n\t\t\t\t\t(select max(i) from (values (davsi1.MODIFIEDDATETIME), (dav1.MODIFIEDDATETIME), (da1.MODIFIEDDATETIME), (desc1.DESC_MODIFIEDDATETIME)) AS T(i))\n\t\t\t\t\t) over (partition by sl10.DEFAULTDIMENSION) as DEFAULTDIMENSION_MODIFIEDDATETIME\n\t\t\tfrom (select distinct DEFAULTDIMENSION from dbo.SALESLINE) sl10\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEVALUESETITEM davsi1 on\n\t\t\t\tsl10.DEFAULTDIMENSION = davsi1.DIMENSIONATTRIBUTEVALUESET\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEVALUE dav1 on\n\t\t\t\tdavsi1.DIMENSIONATTRIBUTEVALUE = dav1.RECID\n\t\t\tleft join dbo.DIMENSIONATTRIBUTE da1 on\n\t\t\t\tdav1.DIMENSIONATTRIBUTE = da1.RECID\n\t\t\tleft join (select dft1.VALUE, da2.NAME, dft1.DESCRIPTION\n\t\t\t\t\t\t\t, (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME\n\t\t\t\t\t\tfrom dbo.DIMENSIONFINANCIALTAG dft1\n\t\t\t\t\t\tleft join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on\n\t\t\t\t\t\t\tdft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n\t\t\t\t\t\tleft join dbo.DIMENSIONATTRIBUTE da2 on\n\t\t\t\t\t\t\tdadc1.DIMENSIONATTRIBUTE = da2.RECID) desc1 on\n\t\t\t\tdavsi1.DISPLAYVALUE = desc1.VALUE and\n\t\t\t\tda1.NAME = desc1.NAME\n\t\t\t) def1 on\n\tcit1.DEFAULTDIMENSION = def1.DEFAULTDIMENSION\nleft join dbo.SALESTABLE st1 on\n\tcit1.DATAAREAID = st1.DATAAREAID and\n\tcit1.ORIGSALESID = st1.SALESID\nleft join (select distinct cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, '') as NUMBERSEQUENCEGROUP, cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID\n\t\t\t, max(cij10.ORDERACCOUNT) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as ORDERACCOUNT\n\t\t\t, max(cij10.CUSTGROUP) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as CUSTGROUP\n\t\t\t, max(cij10.INVOICEPOSTALADDRESS) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as INVOICEPOSTALADDRESS\n\t\t\t, max(cij10.DLVTERM) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as DLVTERM\n\t\t\t, max(cij10.PAYMENT) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as PAYMENT\n\t\t\t, max(cij10.RETURNREASONCODEID) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as RETURNREASONCODEID\n\t\t\t, max(cij10.SALESORIGINID) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as SALESORIGINID\n\t\t\t, max(cij10.INVENTLOCATIONID) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as INVENTLOCATIONID\n\t\t\t, max(cij10.WORKERSALESTAKER) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as WORKERSALESTAKER\n\t\t\t, max(cij10.DOCUMENTDATE) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as DOCUMENTDATE\n\t\t\t, max(cij10.DUEDATE) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as DUEDATE\n\t\t\t, max(cij10.LEDGERVOUCHER) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as LEDGERVOUCHER\n\t\t\t, max(cij10.PURCHASEORDER) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as PURCHASEORDER\n\t\t\t, max(cij10.SALESTYPE) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as SALESTYPE\n\t\t\t\n\t\t\t, max(cij10.JOURNALNUM) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as JOURNALNUM\n\t\t\t, max(ljta10.JOURNALNAME) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as JOURNALNAME\n\t\t\t\n\t\t\t, max(cij10.IsManbase) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as IsManbase\n\t\t\t\n\t\t\t, max((select max(i) from (values (cij10.MODIFIEDDATETIME), (ljta10.MODIFIEDDATETIME)) AS T(i))) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as MODIFIEDDATETIME\n\t\tfrom (select cij100.RECID, cij100.DATAAREAID, cij100.NUMBERSEQUENCEGROUP, cij100.SALESID, cij100.INVOICEDATE, cij100.INVOICEID\n\t\t\t\t\t, cij100.ORDERACCOUNT, cij100.CUSTGROUP, cij100.INVOICEPOSTALADDRESS, cij100.DLVTERM, cij100.PAYMENT, cij100.RETURNREASONCODEID, cij100.SALESORIGINID, cij100.INVENTLOCATIONID, cij100.WORKERSALESTAKER, cij100.DOCUMENTDATE, cij100.DUEDATE, cij100.LEDGERVOUCHER, cij100.PURCHASEORDER, cij100.SALESTYPE\n\t\t\t\t\t, cij100.IsManbase\n\t\t\t\t\t, case when max(cij100.IsManbase) over (partition by cij100.DATAAREAID, isnull(cij100.NUMBERSEQUENCEGROUP, ''), cij100.SALESID, cij100.INVOICEDATE, cij100.INVOICEID) = 1 and cij100.IsManbase = 0 then ''\n\t\t\t\t\t\telse cij100.JOURNALNUM\n\t\t\t\t\t\tend as JOURNALNUM\n\t\t\t\t\t, cij100.MODIFIEDDATETIME\n\t\t\t\tfrom (select cij1000.RECID, cij1000.DATAAREAID, cij1000.NUMBERSEQUENCEGROUP, cij1000.SALESID, cij1000.INVOICEDATE, cij1000.INVOICEID\n\t\t\t\t\t, cij1000.ORDERACCOUNT, cij1000.CUSTGROUP, cij1000.INVOICEPOSTALADDRESS, cij1000.DLVTERM, cij1000.PAYMENT, cij1000.RETURNREASONCODEID, cij1000.SALESORIGINID, cij1000.INVENTLOCATIONID, cij1000.WORKERSALESTAKER, cij1000.DOCUMENTDATE, cij1000.DUEDATE, cij1000.LEDGERVOUCHER, cij1000.PURCHASEORDER, cij1000.SALESTYPE\n\t\t\t\t\t, case --Sealy --Manbase journals moved from Manbase into AX (not AX originated)\n\t\t\t\t\t\t\twhen cij1000.DATAAREAID = '415' and isnull(ljta1000.JOURNALNAME, '') like 'MB%' then 1\n\t\t\t\t\t\t\t--From Manbase, but eluded journal name filter   --From Manbase, but eluded journal name filter\n\t\t\t\t\t\t\twhen left(cij1000.INVOICEID, 4) = '415F' or left(cij1000.INVOICEID, 5) = 'TC415' then 1\n\t\t\t\t\t\t\t--And, at last, specific cutover date for old Manbase into AX history\n\t\t\t\t\t\t\twhen convert(date, cij1000.INVOICEDATE) = '2020-03-29' then 1\n\t\t\t\t\t\telse 0\n\t\t\t\t\t\tend as IsManbase\n\t\t\t\t\t, ljt1000.JOURNALNUM\n\t\t\t\t\t, (select max(i) from (values (cij1000.MODIFIEDDATETIME), (ljt1000.MODIFIEDDATETIME), (ljta1000.MODIFIEDDATETIME)) AS T(i)) as MODIFIEDDATETIME\n\t\t\t\tfrom dbo.CUSTINVOICEJOUR cij1000\n\t\t\t\tleft join (select DATAAREAID, INVOICE, JOURNALNUM, MODIFIEDDATETIME\n\t\t\t\t\t\t\tfrom dbo.LEDGERJOURNALTRANS) ljt1000 on\n\t\t\t\t\tcij1000.DATAAREAID = ljt1000.DATAAREAID and\n\t\t\t\t\tcij1000.INVOICEID = ljt1000.INVOICE\n\t\t\t\tleft join (select DATAAREAID, JOURNALNUM, JOURNALNAME, MODIFIEDDATETIME\n\t\t\t\t\t\t\tfrom dbo.LEDGERJOURNALTABLE) ljta1000 on\n\t\t\t\t\tljt1000.DATAAREAID = ljta1000.DATAAREAID and\n\t\t\t\t\tljt1000.JOURNALNUM = ljta1000.JOURNALNUM) cij100\n\t\t\t) cij10\n\tleft join (select DATAAREAID, JOURNALNUM\n\t\t\t\t\t, max(JOURNALNAME) as JOURNALNAME\n\t\t\t\t\t, max(MODIFIEDDATETIME) as MODIFIEDDATETIME\n\t\t\t\tfrom dbo.LEDGERJOURNALTABLE\n\t\t\t\tgroup by DATAAREAID, JOURNALNUM) ljta10 on\n\t\tcij10.DATAAREAID = ljta10.DATAAREAID and\n\t\tcij10.JOURNALNUM = ljta10.JOURNALNUM) cij1 on\n\tcit1.DATAAREAID = cij1.DATAAREAID and\n\tisnull(cit1.NUMBERSEQUENCEGROUP, '') = isnull(cij1.NUMBERSEQUENCEGROUP, '') and\n\tcit1.SALESID = cij1.SALESID and\n\tcit1.INVOICEDATE = cij1.INVOICEDATE and\n\tcit1.INVOICEID = cij1.INVOICEID\nleft join dbo.INVENTDIM id1 on\n\tcit1.DATAAREAID = id1.DATAAREAID and\n\tcit1.INVENTDIMID = id1.INVENTDIMID\nleft join (select idc10.DATAAREAID, idc10.ITEMID, id10.CONFIGID\n\t\t\t, max(id10.MODIFIEDDATETIME) as MODIFIEDDATETIME\n\t\tfrom dbo.INVENTDIMCOMBINATION idc10\n\t\tleft join dbo.INVENTDIM id10 on\n\t\t\tidc10.DATAAREAID = id10.DATAAREAID and\n\t\t\tidc10.INVENTDIMID = id10.INVENTDIMID\n\t\tgroup by idc10.DATAAREAID, idc10.ITEMID, id10.CONFIGID) idc1 on\n\tcit1.DATAAREAID = idc1.DATAAREAID and\n\tid1.CONFIGID = idc1.CONFIGID and\n\tcit1.ITEMID = idc1.ITEMID\nleft join dbo.SALESLINE sl1 on\n\tcit1.DATAAREAID = sl1.DATAAREAID and\n\tcit1.INVENTTRANSID = sl1.INVENTTRANSID\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'DocumentStatus'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet1 on\n\tst1.DOCUMENTSTATUS = tet1.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'ReturnStatusHeader'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet2 on\n\tst1.RETURNSTATUS = tet2.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'SalesStatus'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet3 on\n\t'3' = tet3.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'ReturnStatusLine'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet4 on\n\tsl1.RETURNSTATUS = tet4.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'SalesStatus'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet5 on\n\t'3' = tet5.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'SalesType'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet6 on\n\tcij1.SALESTYPE = tet6.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'ShipCarrierDlvType'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet7 on\n\tsl1.SHIPCARRIERDLVTYPE = tet7.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'TradeLineDlvType'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet8 on\n\tsl1.DELIVERYTYPE = tet8.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'CostingVersionPriceType'\n                                group by ENUMNAME, ENUMVALUE) tet9 on\n                0 = tet9.ENUMVALUE    \nleft join dbo.MCRSALESLINEDROPSHIPMENT mslds1 on\n\tsl1.DATAAREAID = mslds1.DATAAREAID and\n\tsl1.RECID = mslds1.SALESLINE\nleft join (select distinct DATAAREAID, INVENTTRANSID\n\t\t\t, max(CREATEDDATETIME) over (partition by DATAAREAID, INVENTTRANSID) as CREATEDDATETIME\n\t\t\t, max(INVENTDIMID) over (partition by DATAAREAID, INVENTTRANSID) as INVENTDIMID\n\t\t\t, max(SALESID) over (partition by DATAAREAID, INVENTTRANSID) as SALESID\n\t\t\t, max(MODIFIEDDATETIME) over (partition by DATAAREAID, INVENTTRANSID) as MODIFIEDDATETIME\n\t\tfrom dbo.SALESLINE) sl2 on\n\tsl1.DATAAREAID = sl2.DATAAREAID and\n\tsl1.INVENTTRANSIDRETURN = sl2.INVENTTRANSID\nleft join (select id20.DATAAREAID, id20.INVENTDIMID\n\t\t\t, max(is20.TIMEZONE) over (partition by id20.DATAAREAID, id20.INVENTDIMID) as TIMEZONE\n\t\t\t, max(id20.MODIFIEDDATETIME) over (partition by id20.DATAAREAID, id20.INVENTDIMID) as INVENTDIM_MODIFIEDDATETIME\n\t\t\t, max(is20.MODIFIEDDATETIME) over (partition by id20.DATAAREAID, id20.INVENTDIMID) as INVENTSITE_MODIFIEDDATETIME\n\t\tfrom dbo.INVENTDIM id20\n\t\tleft join dbo.INVENTSITE is20 on\n\t\t\tid20.DATAAREAID = is20.DATAAREAID and\n\t\t\tid20.INVENTSITEID = is20.SITEID) id2 on\n\tsl2.DATAAREAID = id2.DATAAREAID and\n\tsl2.INVENTDIMID = id2.INVENTDIMID\nleft join dbo.DATAAREA da1 on\n\tsl2.DATAAREAID = da1.ID\nleft join dbo.TIMEZONEINFO tzi1 on\n\tsl2.CREATEDDATETIME >= tzi1.STARTDATE and\n\tsl2.CREATEDDATETIME < tzi1.ENDDATE and\n\tisnull(id2.TIMEZONE, da1.TIMEZONE) = tzi1.TIMEZONEID\nleft join dbo.DATAAREA da3 on\n\tsl1.DATAAREAID = da3.ID\nleft join dbo.TIMEZONEINFO tzi3 on\n\tsl1.CREATEDDATETIME >= tzi3.STARTDATE and\n\tsl1.CREATEDDATETIME < tzi3.ENDDATE and\n\tda3.TIMEZONE = tzi3.TIMEZONEID\nleft join dbo.MCRSALESLINEPRICEOVERRIDE mslpo1 on\n\tsl1.RECID = mslpo1.SALESLINE\nleft join dbo.MCRSALESLINEPRICEOVERRIDE mslpo2 on\n\tmslpo1.RECID = mslpo2.RECID\nwhere cit1.RECID is not null\nand cit1.DATAAREAID is not null\nand cit1.ITEMID is not null\nand isnull(cij1.IsManbase, 0) = 0\noption(recompile, maxdop 16)",
												"type": "Expression"
											},
											"queryTimeout": "20:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "RECID",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "RECID",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "DATAAREAID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DATAAREAID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ITEMID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "ITEMID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CURRENCYCODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CURRENCYCODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DEFAULTDIMENSION",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "DEFAULTDIMENSION",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "TRANSACTIONCODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TRANSACTIONCODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "INVENTDIMID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVENTDIMID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DELIVERYPOSTALADDRESS",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "DELIVERYPOSTALADDRESS",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "MCRDLVMODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "MCRDLVMODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESCATEGORY",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SALESCATEGORY",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "RETURNDISPOSITIONCODEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "RETURNDISPOSITIONCODEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ORIGSALESID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "ORIGSALESID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TAXGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TAXGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TAXITEMGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TAXITEMGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESUNIT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESUNIT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DLVDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DLVDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVOICEDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVOICEDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "RETURNARRIVALDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "RETURNARRIVALDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "RETURNCLOSEDDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "RETURNCLOSEDDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTTRANSID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVENTTRANSID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "INVOICEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVOICEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LINENUM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "LINENUM",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTQTY",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "INVENTQTY",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "QTY",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "QTY",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "QTYPHYSICAL",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "QTYPHYSICAL",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "PRICEUNIT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "PRICEUNIT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "SALESPRICE",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "SALESPRICE",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "COMMISSAMOUNTCUR",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "COMMISSAMOUNTCUR",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "COMMISSAMOUNTMST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "COMMISSAMOUNTMST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "LINEAMOUNT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "LINEAMOUNT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "LINEAMOUNTMST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "LINEAMOUNTMST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "TAXAMOUNT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "TAXAMOUNT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "TAXAMOUNTMST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "TAXAMOUNTMST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "DISCPERCENT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "DISCPERCENT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "DISCAMOUNT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "DISCAMOUNT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "LINEDISC",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "LINEDISC",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "LINEPERCENT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "LINEPERCENT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "SUMLINEDISC",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "SUMLINEDISC",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "SUMLINEDISCMST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "SUMLINEDISCMST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "DEFAULTDIMENSION_BUSINESS_UNIT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DEFAULTDIMENSION_BUSINESS_UNIT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_SMMCAMPAIGNID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_SMMCAMPAIGNID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_COMMISSIONGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_COMMISSIONGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_INVOICEACCOUNT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_INVOICEACCOUNT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_MARKUPGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_MARKUPGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_RETURNREASONCODEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_RETURNREASONCODEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_LINEDISC",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_LINEDISC",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_SALESPOOLID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_SALESPOOLID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_PRICEGROUPID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_PRICEGROUPID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_WORKERSALESRESPONSIBLE",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SALESTABLE_WORKERSALESRESPONSIBLE",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_ATAGENT",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESTABLE_ATAGENT",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_SHIPCARRIERBLINDSHIPMENT",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESTABLE_SHIPCARRIERBLINDSHIPMENT",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_ORDERBLOCKED",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESTABLE_ORDERBLOCKED",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_MCRORDERSTOPPED",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESTABLE_MCRORDERSTOPPED",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_SHIPCARRIERFUELSURCHARGE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESTABLE_SHIPCARRIERFUELSURCHARGE",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_INVENTSITEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_INVENTSITEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "SALESTABLE_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_ORDERACCOUNT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_ORDERACCOUNT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_CUSTGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_CUSTGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_INVOICEPOSTALADDRESS",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_INVOICEPOSTALADDRESS",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_DLVTERM",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_DLVTERM",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_PAYMENT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_PAYMENT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_RETURNREASONCODEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_RETURNREASONCODEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_SALESORIGINID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_SALESORIGINID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_INVENTLOCATIONID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_INVENTLOCATIONID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_WORKERSALESTAKER",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_WORKERSALESTAKER",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_DOCUMENTDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_DOCUMENTDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_DUEDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_DUEDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_LEDGERVOUCHER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_LEDGERVOUCHER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_PURCHASEORDER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_PURCHASEORDER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_SALESTYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_SALESTYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_JOURNALNUM",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_JOURNALNUM",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_JOURNALNAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_JOURNALNAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTDIM1_CONFIGID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVENTDIM1_CONFIGID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "INVENTDIM1_INVENTSITEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVENTDIM1_INVENTSITEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "INVENTDIM1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTDIM1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTDIMCOMBINATION_PDMSTATUS",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "INVENTDIMCOMBINATION_PDMSTATUS",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "INVENTDIMCOMBINATION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTDIMCOMBINATION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_TPX_RETURNREASONCODEID",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESLINE1_TPX_RETURNREASONCODEID",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_LINEDISC",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "SALESLINE1_LINEDISC",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_LINEPERCENT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "SALESLINE1_LINEPERCENT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_COMPLETE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESLINE1_COMPLETE",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_ORDERBLOCKED",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESLINE1_ORDERBLOCKED",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_SCRAP",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESLINE1_SCRAP",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_STOCKEDPRODUCT",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESLINE1_STOCKEDPRODUCT",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_TPX_MANUFACTUREDATE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESLINE1_TPX_MANUFACTUREDATE",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_TPX_RELATEDORDERDATE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESLINE1_TPX_RELATEDORDERDATE",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_CREATEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "SALESLINE1_CREATEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_TPX_PRODUCTIONTIME",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESLINE1_TPX_PRODUCTIONTIME",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_TPX_REGISTRYNUMBER",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SALESLINE1_TPX_REGISTRYNUMBER",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "SALESLINE1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "SALESLINE2_CREATEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "SALESLINE2_CREATEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "SALESLINE2_INVENTDIMID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESLINE2_INVENTDIMID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESLINE2_SALESID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESLINE2_SALESID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESLINE2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "SALESLINE2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "DATAAREA1_TIMEZONE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "DATAAREA1_TIMEZONE",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "TIMEZONEINFO1_TIMEBIAS",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TIMEZONEINFO1_TIMEBIAS",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "DATAAREA3_TIMEZONE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "DATAAREA3_TIMEZONE",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "TIMEZONEINFO3_TIMEBIAS",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TIMEZONEINFO3_TIMEBIAS",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE1_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE1_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTITEMPRICE1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE2_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE2_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTITEMPRICE2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE3_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE3_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE3_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTITEMPRICE3_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE4_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE4_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE4_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTITEMPRICE4_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE6_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE6_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE6_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTITEMPRICE6_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE7_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE7_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE7_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTITEMPRICE7_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE8_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE8_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE8_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTITEMPRICE8_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE9_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE9_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE9_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "INVENTITEMPRICE9_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "MCRSALESLINEPRICEOVERRIDE1_RECID",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "MCRSALESLINEPRICEOVERRIDE1_RECID",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "MCRSALESLINEPRICEOVERRIDE2_REASONCODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "MCRSALESLINEPRICEOVERRIDE2_REASONCODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "PDMSTATUS_NAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "PDMSTATUS_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													},
													"sink": {
														"name": "HK_JOB_RUN_ID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "HK_SOURCE_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": true
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sql_server",
											"type": "DatasetReference",
											"parameters": {
												"p_src_table_name": {
													"value": "@pipeline().parameters.p_src_table_nm",
													"type": "Expression"
												},
												"p_src_schema_name": {
													"value": "@pipeline().parameters.p_src_schema_nm",
													"type": "Expression"
												},
												"p_ls_serverName": {
													"value": "@pipeline().globalParameters.retail_sql_serverName",
													"type": "Expression"
												},
												"p_ls_dbName": {
													"value": "@pipeline().globalParameters.retail_sql_dbName",
													"type": "Expression"
												},
												"p_ls_sqlUsername": {
													"value": "@pipeline().globalParameters.sql_userName",
													"type": "Expression"
												},
												"p_ls_sqlPassword": {
													"value": "@pipeline().globalParameters.sql_password",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"p_directory": {
													"value": "@pipeline().parameters.p_temp_directory",
													"type": "Expression"
												},
												"p_root_system": {
													"value": "@pipeline().globalParameters.rootDir",
													"type": "Expression"
												},
												"p_file_name": {
													"value": "@pipeline().parameters.p_temp_file_nm",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "retail_raw_load_failure_notification_1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "custinvoicetrans_to_adls_retail",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('custinvoicetrans_to_adls_retail').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@replace(replace(replace(activity('custinvoicetrans_to_adls_retail').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('custinvoicetrans_to_adls_retail').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('custinvoicetrans_to_adls_retail').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": "@pipeline().parameters.p_tgt_curate_table_nm",
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "sql_retail_load_to_raw_fail_1",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "retail_raw_load_failure_notification_1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('custinvoicetrans_to_adls_retail').Error['message']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								},
								{
									"name": "retail_raw_load_failure_notification_2",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "custinvoicetrans_standardcost_retail_to_adls",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('custinvoicetrans_standardcost_retail_to_adls').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@replace(replace(replace(activity('custinvoicetrans_standardcost_retail_to_adls').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('custinvoicetrans_standardcost_retail_to_adls').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('custinvoicetrans_standardcost_retail_to_adls').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": "@pipeline().parameters.p_tgt_curate_table_nm",
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "sql_retail_load_to_raw_fail_2",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "retail_raw_load_failure_notification_2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('custinvoicetrans_standardcost_retail_to_adls').Error['message']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								},
								{
									"name": "custinvoicetrans_standardcost_retail_to_adls",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "HK_JOB_RUN_ID",
													"value": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													}
												},
												{
													"name": "HK_SOURCE_NAME",
													"value": {
														"value": "@pipeline().parameters.p_src_nm",
														"type": "Expression"
													}
												},
												{
													"name": "LAST_MODIFIEDDATE",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select cit1.STANDARDCOST_SOURCE\n, cit1.RECID\n, cit1.DATAAREAID\n, cit1.ITEMID\n, cit1.CONFIGID as INVENTDIM_CONFIGID\n, cit1.INVENTSITEID as INVENTDIM_INVENTSITEID\n, cit1.MODIFIEDDATETIME as INVENTITEMPRICE_MODIFIEDDATETIME\n, cit1.ACTIVATIONDATE as INVENTITEMPRICE_ACTIVATIONDATE\n, cit1.CREATEDDATETIME as INVENTITEMPRICE_CREATEDDATETIME\n, cit1.STANDARDCOST as INVENTITEMPRICE_STANDARDCOST\nfrom (select iip1.STANDARDCOST_SOURCE, iip1.RECID, iip1.DATAAREAID, iip1.ITEMID, iip1.CONFIGID, iip1.INVENTSITEID, iip1.MODIFIEDDATETIME, iip1.ACTIVATIONDATE, iip1.CREATEDDATETIME, iip1.STANDARDCOST\n\tfrom (select 'iip1' as STANDARDCOST_SOURCE, cit11.RECID, cit11.DATAAREAID, cit11.ITEMID, id11.CONFIGID, id11.INVENTSITEID, iip11.MODIFIEDDATETIME, iip11.ACTIVATIONDATE, iip11.CREATEDDATETIME\n\t\t\t, ((iip11.PRICE / isnull(nullif(iip11.PRICEUNIT, 0), 1)) + (iip11.MARKUP / isnull(nullif(iip11.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by cit11.RECID, cit11.DATAAREAID, cit11.ITEMID, id11.CONFIGID, id11.INVENTSITEID order by iip11.ACTIVATIONDATE desc, iip11.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.CUSTINVOICETRANS cit11\n\t\tinner join dbo.INVENTDIM id11 on\n\t\t\tcit11.DATAAREAID = id11.DATAAREAID and\n\t\t\tcit11.INVENTDIMID = id11.INVENTDIMID\n\t\tinner join (select iip111.DATAAREAID, iip111.ITEMID, id111.CONFIGID, id111.INVENTSITEID, iip111.MODIFIEDDATETIME, iip111.ACTIVATIONDATE, iip111.CREATEDDATETIME\n\t\t\t\t\t\t, iip111.PRICE, iip111.PRICEUNIT, iip111.MARKUP, iip111.PRICEQTY\n\t\t\t\t\tfrom dbo.INVENTITEMPRICE iip111\n\t\t\t\t\tinner join dbo.INVENTDIM id111 on\n\t\t\t\t\t\tiip111.DATAAREAID = id111.DATAAREAID and\n\t\t\t\t\t\tiip111.INVENTDIMID = id111.INVENTDIMID\n\t\t\t\t\twhere iip111.PRICETYPE = 0) iip11 on\n\t\t\tcit11.DATAAREAID = iip11.DATAAREAID and\n\t\t\tcit11.ITEMID = iip11.ITEMID and\n\t\t\tid11.CONFIGID = iip11.CONFIGID and\n\t\t\tid11.INVENTSITEID = iip11.INVENTSITEID and\n\t\t\tcit11.INVOICEDATE >= iip11.ACTIVATIONDATE) iip1\n\twhere iip1.ROW_NUM = 1\n\tunion all\n\tselect iip2.STANDARDCOST_SOURCE, iip2.RECID, iip2.DATAAREAID, iip2.ITEMID, null as CONFIGID, iip2.INVENTSITEID, iip2.MODIFIEDDATETIME, iip2.ACTIVATIONDATE, iip2.CREATEDDATETIME, iip2.STANDARDCOST\n\tfrom (select 'iip2' as STANDARDCOST_SOURCE, cit21.RECID, cit21.DATAAREAID, cit21.ITEMID, id21.INVENTSITEID, iip21.MODIFIEDDATETIME, iip21.ACTIVATIONDATE, iip21.CREATEDDATETIME\n\t\t\t, ((iip21.PRICE / isnull(nullif(iip21.PRICEUNIT, 0), 1)) + (iip21.MARKUP / isnull(nullif(iip21.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by cit21.RECID, cit21.DATAAREAID, cit21.ITEMID, id21.INVENTSITEID order by iip21.ACTIVATIONDATE desc, iip21.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.CUSTINVOICETRANS cit21\n\t\tinner join dbo.INVENTDIM id21 on\n\t\t\tcit21.DATAAREAID = id21.DATAAREAID and\n\t\t\tcit21.INVENTDIMID = id21.INVENTDIMID\n\t\tinner join (select iip211.DATAAREAID, iip211.ITEMID, id211.INVENTSITEID, iip211.MODIFIEDDATETIME, iip211.ACTIVATIONDATE, iip211.CREATEDDATETIME\n\t\t\t\t\t\t, iip211.PRICE, iip211.PRICEUNIT, iip211.MARKUP, iip211.PRICEQTY\n\t\t\t\t\tfrom dbo.INVENTITEMPRICE iip211\n\t\t\t\t\tinner join dbo.INVENTDIM id211 on\n\t\t\t\t\t\tiip211.DATAAREAID = id211.DATAAREAID and\n\t\t\t\t\t\tiip211.INVENTDIMID = id211.INVENTDIMID\n\t\t\t\t\twhere iip211.PRICETYPE = 0) iip21 on\n\t\t\tcit21.DATAAREAID = iip21.DATAAREAID and\n\t\t\tcit21.ITEMID = iip21.ITEMID and\n\t\t\tid21.INVENTSITEID = iip21.INVENTSITEID and\n\t\t\tcit21.INVOICEDATE >= iip21.ACTIVATIONDATE) iip2\n\twhere iip2.ROW_NUM = 1\n\tunion all\n\tselect iip3.STANDARDCOST_SOURCE, iip3.RECID, iip3.DATAAREAID, iip3.ITEMID, iip3.CONFIGID, null as INVENTSITEID, iip3.MODIFIEDDATETIME, iip3.ACTIVATIONDATE, iip3.CREATEDDATETIME, iip3.STANDARDCOST\n\tfrom (select 'iip3' as STANDARDCOST_SOURCE, cit31.RECID, cit31.DATAAREAID, cit31.ITEMID, id31.CONFIGID, iip31.MODIFIEDDATETIME, iip31.ACTIVATIONDATE, iip31.CREATEDDATETIME\n\t\t\t, ((iip31.PRICE / isnull(nullif(iip31.PRICEUNIT, 0), 1)) + (iip31.MARKUP / isnull(nullif(iip31.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by cit31.RECID, cit31.DATAAREAID, cit31.ITEMID, id31.CONFIGID order by iip31.ACTIVATIONDATE desc, iip31.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.CUSTINVOICETRANS cit31\n\t\tinner join dbo.INVENTDIM id31 on\n\t\t\tcit31.DATAAREAID = id31.DATAAREAID and\n\t\t\tcit31.INVENTDIMID = id31.INVENTDIMID\n\t\tinner join (select iip311.DATAAREAID, iip311.ITEMID, id311.CONFIGID, iip311.MODIFIEDDATETIME, iip311.ACTIVATIONDATE, iip311.CREATEDDATETIME\n\t\t\t\t\t\t, iip311.PRICE, iip311.PRICEUNIT, iip311.MARKUP, iip311.PRICEQTY\n\t\t\t\t\tfrom dbo.INVENTITEMPRICE iip311\n\t\t\t\t\tinner join dbo.INVENTDIM id311 on\n\t\t\t\t\t\tiip311.DATAAREAID = id311.DATAAREAID and\n\t\t\t\t\t\tiip311.INVENTDIMID = id311.INVENTDIMID\n\t\t\t\t\twhere iip311.PRICETYPE = 0) iip31 on\n\t\t\tcit31.DATAAREAID = iip31.DATAAREAID and\n\t\t\tcit31.ITEMID = iip31.ITEMID and\n\t\t\tid31.CONFIGID = iip31.CONFIGID and\n\t\t\tcit31.INVOICEDATE >= iip31.ACTIVATIONDATE) iip3\n\twhere iip3.ROW_NUM = 1\n\tunion all\n\tselect iip4.STANDARDCOST_SOURCE, iip4.RECID, iip4.DATAAREAID, iip4.ITEMID, null as CONFIGID, null as INVENTSITEID, iip4.MODIFIEDDATETIME, iip4.ACTIVATIONDATE, iip4.CREATEDDATETIME, iip4.STANDARDCOST\n\tfrom (select 'iip4' as STANDARDCOST_SOURCE, cit41.RECID, cit41.DATAAREAID, cit41.ITEMID, iip41.MODIFIEDDATETIME, iip41.ACTIVATIONDATE, iip41.CREATEDDATETIME\n\t\t\t, ((iip41.PRICE / isnull(nullif(iip41.PRICEUNIT, 0), 1)) + (iip41.MARKUP / isnull(nullif(iip41.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by cit41.RECID, cit41.DATAAREAID, cit41.ITEMID order by iip41.ACTIVATIONDATE desc, iip41.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.CUSTINVOICETRANS cit41\n\t\tinner join dbo.INVENTDIM id41 on\n\t\t\tcit41.DATAAREAID = id41.DATAAREAID and\n\t\t\tcit41.INVENTDIMID = id41.INVENTDIMID\n\t\tinner join (select iip411.DATAAREAID, iip411.ITEMID, iip411.MODIFIEDDATETIME, iip411.ACTIVATIONDATE, iip411.CREATEDDATETIME\n\t\t\t\t\t\t, iip411.PRICE, iip411.PRICEUNIT, iip411.MARKUP, iip411.PRICEQTY\n\t\t\t\t\tfrom dbo.INVENTITEMPRICE iip411\n\t\t\t\t\tinner join dbo.INVENTDIM id411 on\n\t\t\t\t\t\tiip411.DATAAREAID = id411.DATAAREAID and\n\t\t\t\t\t\tiip411.INVENTDIMID = id411.INVENTDIMID\n\t\t\t\t\twhere iip411.PRICETYPE = 0) iip41 on\n\t\t\tcit41.DATAAREAID = iip41.DATAAREAID and\n\t\t\tcit41.ITEMID = iip41.ITEMID and\n\t\t\tcit41.INVOICEDATE >= iip41.ACTIVATIONDATE) iip4\n\twhere iip4.ROW_NUM = 1\n\tunion all\n\tselect iip6.STANDARDCOST_SOURCE, null as RECID, iip6.DATAAREAID, iip6.ITEMID, iip6.CONFIGID, iip6.INVENTSITEID, iip6.MODIFIEDDATETIME, iip6.ACTIVATIONDATE, iip6.CREATEDDATETIME, iip6.STANDARDCOST\n\tfrom (select 'iip6' as STANDARDCOST_SOURCE, iip21.DATAAREAID, iip21.ITEMID, id21.CONFIGID, id21.INVENTSITEID, iip21.MODIFIEDDATETIME, iip21.ACTIVATIONDATE, iip21.CREATEDDATETIME\n\t\t\t, ((iip21.PRICE / isnull(nullif(iip21.PRICEUNIT, 0), 1)) + (iip21.MARKUP / isnull(nullif(iip21.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by iip21.DATAAREAID, iip21.ITEMID, id21.CONFIGID, id21.INVENTSITEID order by iip21.ACTIVATIONDATE desc, iip21.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.INVENTITEMPRICE iip21\n\t\tinner join dbo.INVENTDIM id21 on\n\t\t\tiip21.DATAAREAID = id21.DATAAREAID and\n\t\t\tiip21.INVENTDIMID = id21.INVENTDIMID\n\t\twhere iip21.PRICETYPE = 0) iip6\n\twhere iip6.ROW_NUM = 1\n\tunion all\n\tselect iip7.STANDARDCOST_SOURCE, null as RECID, iip7.DATAAREAID, iip7.ITEMID, null as CONFIGID, iip7.INVENTSITEID, iip7.MODIFIEDDATETIME, iip7.ACTIVATIONDATE, iip7.CREATEDDATETIME, iip7.STANDARDCOST\n\tfrom (select 'iip7' as STANDARDCOST_SOURCE, iip22.DATAAREAID, iip22.ITEMID, id22.INVENTSITEID, iip22.MODIFIEDDATETIME, iip22.ACTIVATIONDATE, iip22.CREATEDDATETIME\n\t\t\t, ((iip22.PRICE / isnull(nullif(iip22.PRICEUNIT, 0), 1)) + (iip22.MARKUP / isnull(nullif(iip22.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by iip22.DATAAREAID, iip22.ITEMID, id22.INVENTSITEID order by iip22.ACTIVATIONDATE desc, iip22.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.INVENTITEMPRICE iip22\n\t\tinner join dbo.INVENTDIM id22 on\n\t\t\tiip22.DATAAREAID = id22.DATAAREAID and\n\t\t\tiip22.INVENTDIMID = id22.INVENTDIMID\n\t\twhere iip22.PRICETYPE = 0) iip7\n\twhere iip7.ROW_NUM = 1\n\tunion all\n\tselect iip8.STANDARDCOST_SOURCE, null as RECID, iip8.DATAAREAID, iip8.ITEMID, iip8.CONFIGID, null as INVENTSITEID, iip8.MODIFIEDDATETIME, iip8.ACTIVATIONDATE, iip8.CREATEDDATETIME, iip8.STANDARDCOST\n\tfrom (select 'iip8' as STANDARDCOST_SOURCE, iip23.DATAAREAID, iip23.ITEMID, id23.CONFIGID, iip23.MODIFIEDDATETIME, iip23.ACTIVATIONDATE, iip23.CREATEDDATETIME\n\t\t\t, ((iip23.PRICE / isnull(nullif(iip23.PRICEUNIT, 0), 1)) + (iip23.MARKUP / isnull(nullif(iip23.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by iip23.DATAAREAID, iip23.ITEMID, id23.CONFIGID order by iip23.ACTIVATIONDATE desc, iip23.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.INVENTITEMPRICE iip23\n\t\tinner join dbo.INVENTDIM id23 on\n\t\t\tiip23.DATAAREAID = id23.DATAAREAID and\n\t\t\tiip23.INVENTDIMID = id23.INVENTDIMID\n\t\twhere iip23.PRICETYPE = 0) iip8\n\twhere iip8.ROW_NUM = 1\n\tunion all\n\tselect iip9.STANDARDCOST_SOURCE, null as RECID, iip9.DATAAREAID, iip9.ITEMID, null as CONFIGID, null as INVENTSITEID, iip9.MODIFIEDDATETIME, iip9.ACTIVATIONDATE, iip9.CREATEDDATETIME, iip9.STANDARDCOST\n\tfrom (select 'iip9' as STANDARDCOST_SOURCE, iip24.DATAAREAID, iip24.ITEMID, iip24.MODIFIEDDATETIME, iip24.ACTIVATIONDATE, iip24.CREATEDDATETIME\n\t\t\t, ((iip24.PRICE / isnull(nullif(iip24.PRICEUNIT, 0), 1)) + (iip24.MARKUP / isnull(nullif(iip24.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by iip24.DATAAREAID, iip24.ITEMID order by iip24.ACTIVATIONDATE desc, iip24.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.INVENTITEMPRICE iip24\n\t\twhere iip24.PRICETYPE = 0) iip9\n\twhere iip9.ROW_NUM = 1\n\t) cit1\n\toption(recompile, maxdop 16)",
												"type": "Expression"
											},
											"queryTimeout": "20:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeSink",
											"preCopyScript": {
												"value": "@concat('TRUNCATE TABLE ',pipeline().parameters.p_tgt_raw_schema_nm,'.',pipeline().parameters.p_tgt_raw_table_nm_2)",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "ls_blob_storage",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@pipeline().globalParameters.rootDir",
												"type": "Expression"
											}
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													},
													"sink": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "STANDARDCOST_SOURCE",
														"type": "String"
													},
													"sink": {
														"name": "STANDARDCOST_SOURCE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RECID",
														"type": "Int64"
													},
													"sink": {
														"name": "RECID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DATAAREAID",
														"type": "String"
													},
													"sink": {
														"name": "DATAAREAID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ITEMID",
														"type": "String"
													},
													"sink": {
														"name": "ITEMID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "INVENTDIM_CONFIGID",
														"type": "String"
													},
													"sink": {
														"name": "INVENTDIM_CONFIGID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "INVENTDIM_INVENTSITEID",
														"type": "String"
													},
													"sink": {
														"name": "INVENTDIM_INVENTSITEID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE_MODIFIEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "INVENTITEMPRICE_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE_ACTIVATIONDATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "INVENTITEMPRICE_ACTIVATIONDATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE_CREATEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "INVENTITEMPRICE_CREATEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE_STANDARDCOST",
														"type": "Decimal"
													},
													"sink": {
														"name": "INVENTITEMPRICE_STANDARDCOST",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "LAST_MODIFIEDDATE",
														"type": "String"
													},
													"sink": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sql_server",
											"type": "DatasetReference",
											"parameters": {
												"p_src_table_name": {
													"value": "@pipeline().parameters.p_src_table_nm",
													"type": "Expression"
												},
												"p_src_schema_name": {
													"value": "@pipeline().parameters.p_src_schema_nm",
													"type": "Expression"
												},
												"p_ls_serverName": {
													"value": "@pipeline().globalParameters.retail_sql_serverName",
													"type": "Expression"
												},
												"p_ls_dbName": {
													"value": "@pipeline().globalParameters.retail_sql_dbName",
													"type": "Expression"
												},
												"p_ls_sqlUsername": {
													"value": "@pipeline().globalParameters.sql_userName",
													"type": "Expression"
												},
												"p_ls_sqlPassword": {
													"value": "@pipeline().globalParameters.sql_password",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_snowflake",
											"type": "DatasetReference",
											"parameters": {
												"p_tgt_table_name": {
													"value": "@pipeline().parameters.p_tgt_raw_table_nm_2",
													"type": "Expression"
												},
												"p_tgt_schema_name": {
													"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
													"type": "Expression"
												},
												"p_ls_DbName": {
													"value": "@pipeline().globalParameters.snow_rawDb",
													"type": "Expression"
												},
												"p_ls_Env": {
													"value": "@pipeline().globalParameters.environment",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					],
					"defaultActivities": [
						{
							"name": "custinvoicetrans_to_adls_d365",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "WarehouseSource",
									"additionalColumns": [
										{
											"name": "HK_JOB_RUN_ID",
											"value": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											}
										},
										{
											"name": "HK_SOURCE_NAME",
											"value": {
												"value": "@pipeline().parameters.p_src_nm",
												"type": "Expression"
											}
										}
									],
									"sqlReaderQuery": {
										"value": "SELECT\n    cit1.recid as RECID,\n    cit1.dataareaid as DATAAREAID,\n    cit1.itemid as ITEMID,\n    cit1.currencycode as CURRENCYCODE,\n    cit1.defaultdimension as DEFAULTDIMENSION,\n    cit1.transactioncode as TRANSACTIONCODE,\n    cit1.inventdimid as INVENTDIMID,\n    cit1.deliverypostaladdress as DELIVERYPOSTALADDRESS,\n    cit1.mcrdlvmode as MCRDLVMODE,\n    cit1.salescategory as SALESCATEGORY,\n    cit1.returndispositioncodeid as RETURNDISPOSITIONCODEID,\n    cit1.salesgroup as SALESGROUP,\n    cit1.origsalesid as ORIGSALESID,\n    cit1.taxgroup as TAXGROUP,\n    cit1.taxitemgroup as TAXITEMGROUP,\n    cit1.salesunit as SALESUNIT,\n    cit1.dlvdate as DLVDATE,\n    cit1.invoicedate as INVOICEDATE,\n    cit1.returnarrivaldate as RETURNARRIVALDATE,\n    cit1.returncloseddate as RETURNCLOSEDDATE,\n    cit1.inventtransid as INVENTTRANSID,\n    cit1.invoiceid as INVOICEID,\n    cit1.linenum as LINENUM,\n    cit1.inventqty as INVENTQTY,\n    cit1.qty as QTY,\n    cit1.qtyphysical as QTYPHYSICAL,\n    cit1.priceunit as PRICEUNIT,\n    cit1.salesprice as SALESPRICE,\n    cit1.commissamountcur as COMMISSAMOUNTCUR,\n    cit1.commissamountmst as COMMISSAMOUNTMST,\n    cit1.lineamount as LINEAMOUNT,\n    cit1.lineamountmst as LINEAMOUNTMST,\n    cit1.taxamount as TAXAMOUNT,\n    cit1.taxamountmst as TAXAMOUNTMST,\n    cit1.discpercent as DISCPERCENT,\n    cit1.discamount as DISCAMOUNT,\n    cit1.linedisc as LINEDISC,\n    cit1.linepercent as LINEPERCENT,\n    cit1.sumlinedisc as SUMLINEDISC,\n    cit1.sumlinediscmst as SUMLINEDISCMST,\n    cit1.modifieddatetime as MODIFIEDDATETIME,\n    def1.BUSINESS_UNIT as DEFAULTDIMENSION_BUSINESS_UNIT,\n    def1.DEFAULTDIMENSION_MODIFIEDDATETIME,\n    st1.smmcampaignid as SALESTABLE_SMMCAMPAIGNID,\n    st1.commissiongroup as SALESTABLE_COMMISSIONGROUP,\n    st1.invoiceaccount as SALESTABLE_INVOICEACCOUNT,\n    st1.markupgroup as SALESTABLE_MARKUPGROUP,\n    st1.returnreasoncodeid as SALESTABLE_RETURNREASONCODEID,\n    st1.linedisc as SALESTABLE_LINEDISC,\n    st1.salespoolid as SALESTABLE_SALESPOOLID,\n    st1.pricegroupid as SALESTABLE_PRICEGROUPID,\n    st1.workersalesresponsible as SALESTABLE_WORKERSALESRESPONSIBLE,\n    st1.atagent as SALESTABLE_ATAGENT,\n    st1.shipcarrierblindshipment as SALESTABLE_SHIPCARRIERBLINDSHIPMENT,\n    st1.shipcarrierexpeditedshipment as SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT,\n    st1.orderblocked as SALESTABLE_ORDERBLOCKED,\n    st1.mcrorderstopped as SALESTABLE_MCRORDERSTOPPED,\n    st1.shipcarrierfuelsurcharge as SALESTABLE_SHIPCARRIERFUELSURCHARGE,\n    st1.inventsiteid as SALESTABLE_INVENTSITEID,\n    st1.modifieddatetime as SALESTABLE_MODIFIEDDATETIME,\n    cij1.orderaccount as CUSTINVOICEJOUR_ORDERACCOUNT,\n    cij1.custgroup as CUSTINVOICEJOUR_CUSTGROUP,\n    cij1.invoicepostaladdress as CUSTINVOICEJOUR_INVOICEPOSTALADDRESS,\n    cij1.dlvterm as CUSTINVOICEJOUR_DLVTERM,\n    cij1.payment as CUSTINVOICEJOUR_PAYMENT,\n    cij1.returnreasoncodeid as CUSTINVOICEJOUR_RETURNREASONCODEID,\n    cij1.salesoriginid as CUSTINVOICEJOUR_SALESORIGINID,\n    cij1.inventlocationid as CUSTINVOICEJOUR_INVENTLOCATIONID,\n    cij1.workersalestaker as CUSTINVOICEJOUR_WORKERSALESTAKER,\n    cij1.documentdate as CUSTINVOICEJOUR_DOCUMENTDATE,\n    cij1.duedate as CUSTINVOICEJOUR_DUEDATE,\n    cij1.ledgervoucher as CUSTINVOICEJOUR_LEDGERVOUCHER,\n    cij1.purchaseorder as CUSTINVOICEJOUR_PURCHASEORDER,\n\tcij1.salestype as CUSTINVOICEJOUR_SALESTYPE,\n    cij1.journalnum as CUSTINVOICEJOUR_JOURNALNUM,\n    cij1.journalname as CUSTINVOICEJOUR_JOURNALNAME,\n    cij1.modifieddatetime as CUSTINVOICEJOUR_MODIFIEDDATETIME,\n    id1.configid as INVENTDIM1_CONFIGID,\n\tid1.inventsiteid as INVENTDIM1_INVENTSITEID,\n    id1.modifieddatetime as INVENTDIM1_MODIFIEDDATETIME,\n    idc1.productlifecyclestateid as INVENTDIMCOMBINATION_PDMSTATUS,\n    idc1.MODIFIEDDATETIME as INVENTDIMCOMBINATION_MODIFIEDDATETIME,\n    sl1.tpx_returnreasoncodeid as SALESLINE1_TPX_RETURNREASONCODEID,\n    sl1.linedisc as SALESLINE1_LINEDISC,\n    sl1.linepercent as SALESLINE1_LINEPERCENT,\n    sl1.complete as SALESLINE1_COMPLETE,\n    sl1.orderblocked as SALESLINE1_ORDERBLOCKED,\n    sl1.scrap as SALESLINE1_SCRAP,\n    sl1.stockedproduct as SALESLINE1_STOCKEDPRODUCT,\n    sl1.tpx_manufacturedate as SALESLINE1_TPX_MANUFACTUREDATE,\n    sl1.tpx_relatedorderdate as SALESLINE1_TPX_RELATEDORDERDATE,\n    sl1.createddatetime as SALESLINE1_CREATEDDATETIME,\n    sl1.tpx_productiontime as SALESLINE1_TPX_PRODUCTIONTIME,\n    sl1.tpx_registrynumber as SALESLINE1_TPX_REGISTRYNUMBER,\n    sl1.modifieddatetime as SALESLINE1_MODIFIEDDATETIME,\n    tet1.ENUMVALUELABEL as TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS,\n    tet2.ENUMVALUELABEL as TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER,\n    tet3.ENUMVALUELABEL as TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER,\n    tet4.ENUMVALUELABEL as TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE,\n    tet5.ENUMVALUELABEL as TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE,\n    tet6.ENUMVALUELABEL as TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE,\n    tet7.ENUMVALUELABEL as TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE,\n    tet8.ENUMVALUELABEL as TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE,\n    tet9.ENUMVALUELABEL as TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE, \n    mslds1.dropshipment as MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT,\n    sl2.CREATEDDATETIME as SALESLINE2_CREATEDDATETIME,\n    sl2.INVENTDIMID as SALESLINE2_INVENTDIMID,\n    sl2.SALESID as SALESLINE2_SALESID,\n    sl2.MODIFIEDDATETIME as SALESLINE2_MODIFIEDDATETIME,\n    da1.timezone as DATAAREA1_TIMEZONE,\n    tzi1.timebias as TIMEZONEINFO1_TIMEBIAS,\n    da3.timezone as DATAAREA3_TIMEZONE,\n    tzi3.timebias as TIMEZONEINFO3_TIMEBIAS,\n    null as INVENTITEMPRICE1_STANDARDCOST, \n\tnull as INVENTITEMPRICE1_MODIFIEDDATETIME, \n\tnull as INVENTITEMPRICE2_STANDARDCOST, \n\tnull as INVENTITEMPRICE2_MODIFIEDDATETIME, \n\tnull as INVENTITEMPRICE3_STANDARDCOST, \n\tnull as INVENTITEMPRICE3_MODIFIEDDATETIME, \n\tnull as INVENTITEMPRICE4_STANDARDCOST, \n\tnull as INVENTITEMPRICE4_MODIFIEDDATETIME, \n\tnull as INVENTITEMPRICE6_STANDARDCOST, \n\tnull as INVENTITEMPRICE6_MODIFIEDDATETIME, \n\tnull as INVENTITEMPRICE7_STANDARDCOST, \n\tnull as INVENTITEMPRICE7_MODIFIEDDATETIME, \n\tnull as INVENTITEMPRICE8_STANDARDCOST, \n\tnull as INVENTITEMPRICE8_MODIFIEDDATETIME, \n\tnull as INVENTITEMPRICE9_STANDARDCOST, \n\tnull as INVENTITEMPRICE9_MODIFIEDDATETIME,\n    mslpo1.recid as MCRSALESLINEPRICEOVERRIDE1_RECID,\n    mslpo1.reasoncode as MCRSALESLINEPRICEOVERRIDE2_REASONCODE,\n    tport1.description as TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION,\n\tidc1.productlifecyclestateid as PDMSTATUS_NAME,\n  (SELECT MAX(LastUpdateDate) \n FROM (VALUES (sl1.modifieddatetime),\n  (isnull(def1.DEFAULTDIMENSION_MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(st1.modifieddatetime, '1950-01-01'))\n  , (isnull(cij1.modifieddatetime, '1950-01-01'))\n  , (isnull(id1.modifieddatetime, '1950-01-01'))\n  , (isnull(idc1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(sl1.modifieddatetime, '1950-01-01'))\n  , (isnull(sl2.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(id2.INVENTDIM_MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(id2.INVENTSITE_MODIFIEDDATETIME, '1950-01-01'))\n ) AS UpdateDate(LastUpdateDate)) AS LATEST_MODIFIEDDATETIME \nFROM dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custinvoicetrans cit1\nleft join (select distinct sl10.defaultdimension\n\t\t\t\t, max(\n\t\t\t\t\tcase when da1.name = 'BusinessUnit' then davsi1.displayvalue\n\t\t\t\t\t\telse null\n\t\t\t\t\t\tend\n\t\t\t\t\t) over (partition by sl10.defaultdimension) as BUSINESS_UNIT\n\t\t\t\t, max(\n\t\t\t\t\t(select max(i) from (values (davsi1.modifieddatetime), (dav1.modifieddatetime), (da1.modifieddatetime), (desc1.DESC_MODIFIEDDATETIME)) as t(i))\n\t\t\t\t\t) over (partition by sl10.defaultdimension) as DEFAULTDIMENSION_MODIFIEDDATETIME\n\t\t\tfrom (select distinct defaultdimension from dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.salesline) sl10\n\t\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattributevaluesetitem davsi1 on\n\t\t\t\tsl10.defaultdimension = davsi1.dimensionattributevalueset\n\t\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattributevalue dav1 on\n\t\t\t\tdavsi1.dimensionattributevalue = dav1.recid\n\t\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattribute da1 on\n\t\t\t\tdav1.dimensionattribute = da1.recid\n\t\t\tleft join (select dft1.value, da2.name, dft1.description\n\t\t\t\t\t\t\t, (select max(i) from (values (dft1.modifieddatetime), (dadc1.modifieddatetime), (da2.modifieddatetime)) as t(i)) as DESC_MODIFIEDDATETIME\n\t\t\t\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionfinancialtag dft1\n\t\t\t\t\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattributedircategory dadc1 on\n\t\t\t\t\t\t\tdft1.financialtagcategory = dadc1.dircategory\n\t\t\t\t\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattribute da2 on\n\t\t\t\t\t\t\tdadc1.dimensionattribute = da2.recid) desc1 on\n\t\t\t\tdavsi1.displayvalue = desc1.value and\n\t\t\t\tda1.name = desc1.name\n\t\t\t) def1 on\n\tcit1.defaultdimension = def1.defaultdimension\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.salestable st1 on\n\tcit1.dataareaid = st1.dataareaid and\n\tcit1.origsalesid = st1.salesid\nleft join (select distinct cij10.dataareaid, isnull(cij10.numbersequencegroup, '') as numbersequencegroup, cij10.salesid, cij10.invoicedate, cij10.invoiceid\n\t\t\t, max(cij10.orderaccount) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as orderaccount\n\t\t\t, max(cij10.custgroup) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as custgroup\n\t\t\t, max(cij10.invoicepostaladdress) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as invoicepostaladdress\n\t\t\t, max(cij10.dlvterm) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as dlvterm\n\t\t\t, max(cij10.payment) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as payment\n\t\t\t, max(cij10.returnreasoncodeid) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as returnreasoncodeid\n\t\t\t, max(cij10.salesoriginid) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as salesoriginid\n\t\t\t, max(cij10.inventlocationid) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as inventlocationid\n\t\t\t, max(cij10.workersalestaker) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as workersalestaker\n\t\t\t, max(cij10.documentdate) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as documentdate\n\t\t\t, max(cij10.duedate) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as duedate\n\t\t\t, max(cij10.ledgervoucher) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as ledgervoucher\n\t\t\t, max(cij10.purchaseorder) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as purchaseorder\n\t\t\t, max(cij10.salestype) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as salestype\n\t\t\t\n\t\t\t, max(cij10.journalnum) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as journalnum\n\t\t\t, max(ljta10.journalname) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as journalname\n\t\t\t\n\t\t\t, max(cij10.ismanbase) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as ismanbase\n\t\t\t\n\t\t\t, max((select max(i) from (values (cij10.modifieddatetime), (ljta10.modifieddatetime)) as t(i))) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as modifieddatetime\n\t\tfrom (select cij100.recid, cij100.dataareaid, cij100.numbersequencegroup, cij100.salesid, cij100.invoicedate, cij100.invoiceid\n\t\t\t\t\t, cij100.orderaccount, cij100.custgroup, cij100.invoicepostaladdress, cij100.dlvterm, cij100.payment, cij100.returnreasoncodeid, cij100.salesoriginid, cij100.inventlocationid, cij100.workersalestaker, cij100.documentdate, cij100.duedate, cij100.ledgervoucher, cij100.purchaseorder, cij100.salestype\n\t\t\t\t\t, cij100.ismanbase\n\t\t\t\t\t, case when max(cij100.ismanbase) over (partition by cij100.dataareaid, isnull(cij100.numbersequencegroup, ''), cij100.salesid, cij100.invoicedate, cij100.invoiceid) = 1 and cij100.ismanbase = 0 then ''\n\t\t\t\t\t\telse cij100.journalnum\n\t\t\t\t\t\tend as journalnum\n\t\t\t\t\t, cij100.modifieddatetime\n\t\t\t\tfrom (select cij1000.recid, cij1000.dataareaid, cij1000.numbersequencegroup, cij1000.salesid, cij1000.invoicedate, cij1000.invoiceid\n\t\t\t\t\t, cij1000.orderaccount, cij1000.custgroup, cij1000.invoicepostaladdress, cij1000.dlvterm, cij1000.payment, cij1000.returnreasoncodeid, cij1000.salesoriginid, cij1000.inventlocationid, cij1000.workersalestaker, cij1000.documentdate, cij1000.duedate, cij1000.ledgervoucher, cij1000.purchaseorder, cij1000.salestype\n\t\t\t\t\t, case --sealy --manbase journals moved from manbase into ax (not ax originated)\n\t\t\t\t\t\t\twhen cij1000.dataareaid = '415' and isnull(ljta1000.journalname, '') like 'MB%' then 1\n\t\t\t\t\t\t\t--from manbase, but eluded journal name filter   --from manbase, but eluded journal name filter\n\t\t\t\t\t\t\twhen left(cij1000.invoiceid, 4) = '415F' or left(cij1000.invoiceid, 5) = 'TC415' then 1\n\t\t\t\t\t\t\t--and, at last, specific cutover date for old manbase into ax history\n\t\t\t\t\t\t\twhen convert(date, cij1000.invoicedate) = '2020-03-29' then 1\n\t\t\t\t\t\telse 0\n\t\t\t\t\t\tend as ismanbase\n\t\t\t\t\t, ljt1000.journalnum\n\t\t\t\t\t, (select max(i) from (values (cij1000.modifieddatetime), (ljt1000.modifieddatetime), (ljta1000.modifieddatetime)) as t(i)) as modifieddatetime\n\t\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custinvoicejour cij1000\n\t\t\t\tleft join (select dataareaid, invoice, journalnum, modifieddatetime\n\t\t\t\t\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.ledgerjournaltrans) ljt1000 on\n\t\t\t\t\tcij1000.dataareaid = ljt1000.dataareaid and\n\t\t\t\t\tcij1000.invoiceid = ljt1000.invoice\n\t\t\t\tleft join (select dataareaid, journalnum, journalname, modifieddatetime\n\t\t\t\t\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.ledgerjournaltable) ljta1000 on\n\t\t\t\t\tljt1000.dataareaid = ljta1000.dataareaid and\n\t\t\t\t\tljt1000.journalnum = ljta1000.journalnum) cij100\n\t\t\t) cij10\n\tleft join (select dataareaid, journalnum\n\t\t\t\t\t, max(journalname) as journalname\n\t\t\t\t\t, max(modifieddatetime) as modifieddatetime\n\t\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.ledgerjournaltable\n\t\t\t\tgroup by dataareaid, journalnum) ljta10 on\n\t\tcij10.dataareaid = ljta10.dataareaid and\n\t\tcij10.journalnum = ljta10.journalnum) cij1 on\n\tcit1.dataareaid = cij1.dataareaid and\n\tisnull(cit1.numbersequencegroup, '') = isnull(cij1.numbersequencegroup, '') and\n\tcit1.salesid = cij1.salesid and\n\tcit1.invoicedate = cij1.invoicedate and\n\tcit1.invoiceid = cij1.invoiceid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id1 on\n\tcit1.dataareaid = id1.dataareaid and\n\tcit1.inventdimid = id1.inventdimid\nleft join (select idp10.dataareaid, idp10.configid, idp10.itemid, idp10.productlifecyclestateid\n\t\t\t, max(greatest(idc10.modifieddatetime, id10.modifieddatetime, idp10.modifieddatetime)) as MODIFIEDDATETIME\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdimcombination idc10\n\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id10 on\n\t\t\tidc10.dataareaid = id10.dataareaid and\n\t\t\tidc10.inventdimid = id10.inventdimid\n\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdistinctproduct idp10 on\n\t\t\tid10.dataareaid = idp10.dataareaid and\n\t\t\tid10.configid = idp10.configid\n\t\tgroup by idp10.dataareaid, idp10.configid, idp10.itemid, idp10.productlifecyclestateid) idc1 on\n\tcit1.dataareaid = idc1.dataareaid and\n\tid1.configid = idc1.configid and\n\tcit1.itemid = idc1.itemid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.salesline sl1 on\n\tcit1.dataareaid = sl1.dataareaid and\n\tcit1.inventtransid = sl1.inventtransid\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'DocumentStatus'\n\t\tgroup by enumname, enumvalue) tet1 on\n\tst1.documentstatus = tet1.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'ReturnStatusHeader'\n\t\tgroup by enumname, enumvalue) tet2 on\n\tst1.returnstatus = tet2.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'SalesStatus'\n\t\tgroup by enumname, enumvalue) tet3 on\n\t'3' = tet3.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'ReturnStatusLine'\n\t\tgroup by enumname, enumvalue) tet4 on\n\tsl1.returnstatus = tet4.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'SalesStatus'\n\t\tgroup by enumname, enumvalue) tet5 on\n\t'3' = tet5.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'SalesType'\n\t\tgroup by enumname, enumvalue) tet6 on\n\tcij1.salestype = tet6.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'ShipCarrierDlvType'\n\t\tgroup by enumname, enumvalue) tet7 on\n\tsl1.shipcarrierdlvtype = tet7.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'TradeLineDlvType'\n\t\tgroup by enumname, enumvalue) tet8 on\n\tsl1.deliverytype = tet8.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'CostingVersionPriceType'\n\t\tgroup by enumname, enumvalue) tet9 on\n\t0 = tet9.enumvalue\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.mcrsaleslinedropshipment mslds1 on\n\tsl1.dataareaid = mslds1.dataareaid and\n\tsl1.recid = mslds1.salesline\nleft join (select distinct dataareaid, inventtransid\n\t\t\t, max(createddatetime) over (partition by dataareaid, inventtransid) as CREATEDDATETIME\n\t\t\t, max(inventdimid) over (partition by dataareaid, inventtransid) as INVENTDIMID\n\t\t\t, max(salesid) over (partition by dataareaid, inventtransid) as SALESID\n\t\t\t, max(modifieddatetime) over (partition by dataareaid, inventtransid) as MODIFIEDDATETIME\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.salesline) sl2 on\n\tsl1.dataareaid = sl2.dataareaid and\n\tsl1.inventtransidreturn = sl2.inventtransid\nleft join (select id20.dataareaid, id20.inventdimid\n\t\t\t, max(is20.timezone) over (partition by id20.dataareaid, id20.inventdimid) as TIMEZONE\n\t\t\t, max(id20.modifieddatetime) over (partition by id20.dataareaid, id20.inventdimid) as INVENTDIM_MODIFIEDDATETIME\n\t\t\t, max(is20.modifieddatetime) over (partition by id20.dataareaid, id20.inventdimid) as INVENTSITE_MODIFIEDDATETIME\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id20\n\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventsite is20 on\n\t\t\tid20.dataareaid = is20.dataareaid and\n\t\t\tid20.inventsiteid = is20.siteid) id2 on\n\tsl2.dataareaid = id2.dataareaid and\n\tsl2.INVENTDIMID = id2.inventdimid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dataarea da1 on\n\tsl2.dataareaid = da1.Id\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timezoneinfo tzi1 on\n\tsl2.CREATEDDATETIME >= tzi1.startdate and\n\tsl2.CREATEDDATETIME < tzi1.enddate and\n\tisnull(id2.TIMEZONE, da1.timezone) = tzi1.timezoneid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dataarea da3 on\n\tsl1.dataareaid = da3.Id\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timezoneinfo tzi3 on\n\tsl1.createddatetime >= tzi3.startdate and\n\tsl1.createddatetime < tzi3.enddate and\n\tda3.timezone = tzi3.timezoneid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.mcrsaleslinepriceoverride mslpo1 on\n\tsl1.recid = mslpo1.salesline\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.mcrsaleslinepriceoverride mslpo2 on\n\tmslpo1.recid = mslpo2.recid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.tpxpriceoverridereasontable tport1 on\n\tmslpo1.dataareaid = tport1.dataareaid and\n\tmslpo1.reasoncode = tport1.subcodeid and\n\tmslpo1.partition = tport1.partition\nwhere cit1.recid is not null\nand cit1.dataareaid is not null\nand cit1.itemid is not null\nand isnull(cij1.ismanbase, 0) = 0",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "RECID",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "RECID",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "DATAAREAID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "DATAAREAID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "ITEMID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "ITEMID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "CURRENCYCODE",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "CURRENCYCODE",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "DEFAULTDIMENSION",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "DEFAULTDIMENSION",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "TRANSACTIONCODE",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "TRANSACTIONCODE",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "INVENTDIMID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "INVENTDIMID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "DELIVERYPOSTALADDRESS",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "DELIVERYPOSTALADDRESS",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "MCRDLVMODE",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "MCRDLVMODE",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "SALESCATEGORY",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "SALESCATEGORY",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "RETURNDISPOSITIONCODEID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "RETURNDISPOSITIONCODEID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "SALESGROUP",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "SALESGROUP",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "ORIGSALESID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "ORIGSALESID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "TAXGROUP",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "TAXGROUP",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "TAXITEMGROUP",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "TAXITEMGROUP",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "SALESUNIT",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "SALESUNIT",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "DLVDATE",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "DLVDATE",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "INVOICEDATE",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "INVOICEDATE",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "RETURNARRIVALDATE",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "RETURNARRIVALDATE",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "RETURNCLOSEDDATE",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "RETURNCLOSEDDATE",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "INVENTTRANSID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "INVENTTRANSID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "INVOICEID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "INVOICEID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "LINENUM",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "LINENUM",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "INVENTQTY",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "INVENTQTY",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "QTY",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "QTY",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "QTYPHYSICAL",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "QTYPHYSICAL",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "PRICEUNIT",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "PRICEUNIT",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "SALESPRICE",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "SALESPRICE",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "COMMISSAMOUNTCUR",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "COMMISSAMOUNTCUR",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "COMMISSAMOUNTMST",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "COMMISSAMOUNTMST",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "LINEAMOUNT",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "LINEAMOUNT",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "LINEAMOUNTMST",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "LINEAMOUNTMST",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "TAXAMOUNT",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "TAXAMOUNT",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "TAXAMOUNTMST",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "TAXAMOUNTMST",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "DISCPERCENT",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "DISCPERCENT",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "DISCAMOUNT",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "DISCAMOUNT",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "LINEDISC",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "LINEDISC",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "LINEPERCENT",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "LINEPERCENT",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "SUMLINEDISC",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "SUMLINEDISC",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "SUMLINEDISCMST",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "SUMLINEDISCMST",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "DEFAULTDIMENSION_BUSINESS_UNIT",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "DEFAULTDIMENSION_BUSINESS_UNIT",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "SALESTABLE_SMMCAMPAIGNID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "SALESTABLE_SMMCAMPAIGNID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "SALESTABLE_COMMISSIONGROUP",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "SALESTABLE_COMMISSIONGROUP",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "SALESTABLE_INVOICEACCOUNT",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "SALESTABLE_INVOICEACCOUNT",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "SALESTABLE_MARKUPGROUP",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "SALESTABLE_MARKUPGROUP",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "SALESTABLE_RETURNREASONCODEID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "SALESTABLE_RETURNREASONCODEID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "SALESTABLE_LINEDISC",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "SALESTABLE_LINEDISC",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "SALESTABLE_SALESPOOLID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "SALESTABLE_SALESPOOLID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "SALESTABLE_PRICEGROUPID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "SALESTABLE_PRICEGROUPID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "SALESTABLE_WORKERSALESRESPONSIBLE",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "SALESTABLE_WORKERSALESRESPONSIBLE",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "SALESTABLE_ATAGENT",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "SALESTABLE_ATAGENT",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "SALESTABLE_SHIPCARRIERBLINDSHIPMENT",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "SALESTABLE_SHIPCARRIERBLINDSHIPMENT",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "SALESTABLE_ORDERBLOCKED",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "SALESTABLE_ORDERBLOCKED",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "SALESTABLE_MCRORDERSTOPPED",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "SALESTABLE_MCRORDERSTOPPED",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "SALESTABLE_SHIPCARRIERFUELSURCHARGE",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "SALESTABLE_SHIPCARRIERFUELSURCHARGE",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "SALESTABLE_INVENTSITEID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "SALESTABLE_INVENTSITEID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "SALESTABLE_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "SALESTABLE_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "CUSTINVOICEJOUR_ORDERACCOUNT",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "CUSTINVOICEJOUR_ORDERACCOUNT",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "CUSTINVOICEJOUR_CUSTGROUP",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "CUSTINVOICEJOUR_CUSTGROUP",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "CUSTINVOICEJOUR_INVOICEPOSTALADDRESS",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "CUSTINVOICEJOUR_INVOICEPOSTALADDRESS",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "CUSTINVOICEJOUR_DLVTERM",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "CUSTINVOICEJOUR_DLVTERM",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "CUSTINVOICEJOUR_PAYMENT",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "CUSTINVOICEJOUR_PAYMENT",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "CUSTINVOICEJOUR_RETURNREASONCODEID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "CUSTINVOICEJOUR_RETURNREASONCODEID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "CUSTINVOICEJOUR_SALESORIGINID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "CUSTINVOICEJOUR_SALESORIGINID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "CUSTINVOICEJOUR_INVENTLOCATIONID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "CUSTINVOICEJOUR_INVENTLOCATIONID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "CUSTINVOICEJOUR_WORKERSALESTAKER",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "CUSTINVOICEJOUR_WORKERSALESTAKER",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "CUSTINVOICEJOUR_DOCUMENTDATE",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "CUSTINVOICEJOUR_DOCUMENTDATE",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "CUSTINVOICEJOUR_DUEDATE",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "CUSTINVOICEJOUR_DUEDATE",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "CUSTINVOICEJOUR_LEDGERVOUCHER",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "CUSTINVOICEJOUR_LEDGERVOUCHER",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "CUSTINVOICEJOUR_PURCHASEORDER",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "CUSTINVOICEJOUR_PURCHASEORDER",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "CUSTINVOICEJOUR_SALESTYPE",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "CUSTINVOICEJOUR_SALESTYPE",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "CUSTINVOICEJOUR_JOURNALNUM",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "CUSTINVOICEJOUR_JOURNALNUM",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "CUSTINVOICEJOUR_JOURNALNAME",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "CUSTINVOICEJOUR_JOURNALNAME",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "INVENTDIM1_CONFIGID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "INVENTDIM1_CONFIGID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "INVENTDIM1_INVENTSITEID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "INVENTDIM1_INVENTSITEID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "INVENTDIM1_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "INVENTDIM1_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "INVENTDIMCOMBINATION_PDMSTATUS",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "INVENTDIMCOMBINATION_PDMSTATUS",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "INVENTDIMCOMBINATION_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "INVENTDIMCOMBINATION_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "SALESLINE1_TPX_RETURNREASONCODEID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "SALESLINE1_TPX_RETURNREASONCODEID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "SALESLINE1_LINEDISC",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "SALESLINE1_LINEDISC",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "SALESLINE1_LINEPERCENT",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "SALESLINE1_LINEPERCENT",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "SALESLINE1_COMPLETE",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "SALESLINE1_COMPLETE",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "SALESLINE1_ORDERBLOCKED",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "SALESLINE1_ORDERBLOCKED",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "SALESLINE1_SCRAP",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "SALESLINE1_SCRAP",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "SALESLINE1_STOCKEDPRODUCT",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "SALESLINE1_STOCKEDPRODUCT",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "SALESLINE1_TPX_MANUFACTUREDATE",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "SALESLINE1_TPX_MANUFACTUREDATE",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "SALESLINE1_TPX_RELATEDORDERDATE",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "SALESLINE1_TPX_RELATEDORDERDATE",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "SALESLINE1_CREATEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "SALESLINE1_CREATEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "SALESLINE1_TPX_PRODUCTIONTIME",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "SALESLINE1_TPX_PRODUCTIONTIME",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "SALESLINE1_TPX_REGISTRYNUMBER",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "SALESLINE1_TPX_REGISTRYNUMBER",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "SALESLINE1_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "SALESLINE1_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "SALESLINE2_CREATEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "SALESLINE2_CREATEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "SALESLINE2_INVENTDIMID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "SALESLINE2_INVENTDIMID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "SALESLINE2_SALESID",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "SALESLINE2_SALESID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "SALESLINE2_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "SALESLINE2_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "DATAAREA1_TIMEZONE",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "DATAAREA1_TIMEZONE",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "TIMEZONEINFO1_TIMEBIAS",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "TIMEZONEINFO1_TIMEBIAS",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "DATAAREA3_TIMEZONE",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "DATAAREA3_TIMEZONE",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "TIMEZONEINFO3_TIMEBIAS",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "TIMEZONEINFO3_TIMEBIAS",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE1_STANDARDCOST",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "INVENTITEMPRICE1_STANDARDCOST",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE1_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "INVENTITEMPRICE1_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE2_STANDARDCOST",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "INVENTITEMPRICE2_STANDARDCOST",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE2_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "INVENTITEMPRICE2_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE3_STANDARDCOST",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "INVENTITEMPRICE3_STANDARDCOST",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE3_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "INVENTITEMPRICE3_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE4_STANDARDCOST",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "INVENTITEMPRICE4_STANDARDCOST",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE4_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "INVENTITEMPRICE4_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE6_STANDARDCOST",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "INVENTITEMPRICE6_STANDARDCOST",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE6_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "INVENTITEMPRICE6_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE7_STANDARDCOST",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "INVENTITEMPRICE7_STANDARDCOST",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE7_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "INVENTITEMPRICE7_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE8_STANDARDCOST",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "INVENTITEMPRICE8_STANDARDCOST",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE8_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "INVENTITEMPRICE8_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE9_STANDARDCOST",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "INVENTITEMPRICE9_STANDARDCOST",
												"type": "Decimal",
												"physicalType": "DECIMAL"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE9_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "INVENTITEMPRICE9_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "MCRSALESLINEPRICEOVERRIDE1_RECID",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "MCRSALESLINEPRICEOVERRIDE1_RECID",
												"type": "Int64",
												"physicalType": "INT_64"
											}
										},
										{
											"source": {
												"name": "MCRSALESLINEPRICEOVERRIDE2_REASONCODE",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "MCRSALESLINEPRICEOVERRIDE2_REASONCODE",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "PDMSTATUS_NAME",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "PDMSTATUS_NAME",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "LATEST_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "LATEST_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "INT_96"
											}
										},
										{
											"source": {
												"name": "HK_JOB_RUN_ID",
												"type": "String"
											},
											"sink": {
												"name": "HK_JOB_RUN_ID",
												"type": "String",
												"physicalType": "UTF8"
											}
										},
										{
											"source": {
												"name": "HK_SOURCE_NAME",
												"type": "String"
											},
											"sink": {
												"name": "HK_SOURCE_NAME",
												"type": "String",
												"physicalType": "UTF8"
											}
										}
									],
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": true
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_fabric_wh",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_parquet",
									"type": "DatasetReference",
									"parameters": {
										"p_directory": {
											"value": "@pipeline().parameters.p_temp_directory",
											"type": "Expression"
										},
										"p_root_system": {
											"value": "@pipeline().globalParameters.rootDir",
											"type": "Expression"
										},
										"p_file_name": {
											"value": "@pipeline().parameters.p_temp_file_nm",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "d365_raw_load_failure_notification_1",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "custinvoicetrans_to_adls_d365",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pp_adf_pipeline_notification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"subscription": {
										"value": "@pipeline().globalParameters.subscriptionId",
										"type": "Expression"
									},
									"resourceGroup": {
										"value": "@pipeline().globalParameters.resourceGroup",
										"type": "Expression"
									},
									"runId": {
										"value": "@coalesce(pipeline().RunId, -1)",
										"type": "Expression"
									},
									"name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"triggerTime": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"status": {
										"value": "@activity('custinvoicetrans_to_adls_d365').Status",
										"type": "Expression"
									},
									"message": {
										"value": "@activity('custinvoicetrans_to_adls_d365').Error['message']",
										"type": "Expression"
									},
									"executionEndTime": {
										"value": "@activity('custinvoicetrans_to_adls_d365').ExecutionEndTime",
										"type": "Expression"
									},
									"runDuration": {
										"value": "@activity('custinvoicetrans_to_adls_d365').Duration",
										"type": "Expression"
									},
									"teamWebhookUrl": {
										"value": "@pipeline().globalParameters.teamsWebhookUrl",
										"type": "Expression"
									},
									"notificationTime": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"taskName": "@pipeline().parameters.p_tgt_curate_table_nm",
									"taskStepNumber": {
										"value": "@pipeline().parameters.p_src_code",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "d365_load_to_raw_fail_1",
							"type": "Fail",
							"dependsOn": [
								{
									"activity": "d365_raw_load_failure_notification_1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"message": {
									"value": "@activity('custinvoicetrans_to_adls_d365').Error['message']",
									"type": "Expression"
								},
								"errorCode": "500"
							}
						},
						{
							"name": "d365_raw_load_failure_notification_2",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "custinvoicetrans_standardcost_to_adls_d365",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pp_adf_pipeline_notification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"subscription": {
										"value": "@pipeline().globalParameters.subscriptionId",
										"type": "Expression"
									},
									"resourceGroup": {
										"value": "@pipeline().globalParameters.resourceGroup",
										"type": "Expression"
									},
									"runId": {
										"value": "@coalesce(pipeline().RunId, -1)",
										"type": "Expression"
									},
									"name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"triggerTime": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"status": {
										"value": "@activity('custinvoicetrans_standardcost_to_adls_d365').Status",
										"type": "Expression"
									},
									"message": {
										"value": "@activity('custinvoicetrans_standardcost_to_adls_d365').Error['message']",
										"type": "Expression"
									},
									"executionEndTime": {
										"value": "@activity('custinvoicetrans_standardcost_to_adls_d365').ExecutionEndTime",
										"type": "Expression"
									},
									"runDuration": {
										"value": "@activity('custinvoicetrans_standardcost_to_adls_d365').Duration",
										"type": "Expression"
									},
									"teamWebhookUrl": {
										"value": "@pipeline().globalParameters.teamsWebhookUrl",
										"type": "Expression"
									},
									"notificationTime": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"taskName": "@pipeline().parameters.p_tgt_curate_table_nm",
									"taskStepNumber": {
										"value": "@pipeline().parameters.p_src_code",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "d365_load_to_raw_fail_2",
							"type": "Fail",
							"dependsOn": [
								{
									"activity": "d365_raw_load_failure_notification_2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"message": {
									"value": "@activity('custinvoicetrans_standardcost_to_adls_d365').Error['message']",
									"type": "Expression"
								},
								"errorCode": "500"
							}
						},
						{
							"name": "custinvoicetrans_standardcost_to_adls_d365",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "WarehouseSource",
									"additionalColumns": [
										{
											"name": "HK_JOB_RUN_ID",
											"value": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											}
										},
										{
											"name": "HK_SOURCE_NAME",
											"value": {
												"value": "@pipeline().parameters.p_src_nm",
												"type": "Expression"
											}
										},
										{
											"name": "LAST_MODIFIEDDATE",
											"value": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											}
										}
									],
									"sqlReaderQuery": "select cit1.standardcost_source as STANDARDCOST_SOURCE\n, cit1.recid as RECID\n, cit1.dataareaid as DATAAREAID\n, cit1.itemid as ITEMID\n, cit1.configid as INVENTDIM_CONFIGID\n, cit1.inventsiteid as INVENTDIM_INVENTSITEID\n, cit1.modifieddatetime as INVENTITEMPRICE_MODIFIEDDATETIME\n, cit1.activationdate as INVENTITEMPRICE_ACTIVATIONDATE\n, cit1.createddatetime as INVENTITEMPRICE_CREATEDDATETIME\n, cit1.standardcost as INVENTITEMPRICE_STANDARDCOST\nfrom (\n\tselect iip1.standardcost_source, iip1.recid, iip1.dataareaid, iip1.itemid, iip1.configid, iip1.inventsiteid, iip1.modifieddatetime, iip1.activationdate, iip1.createddatetime, iip1.standardcost\n\tfrom (select 'iip1' as standardcost_source, cit11.recid, cit11.dataareaid, cit11.itemid, id11.configid, id11.inventsiteid, iip11.modifieddatetime, iip11.activationdate, iip11.createddatetime\n\t\t\t, ((iip11.price / isnull(nullif(iip11.priceunit, 0), 1)) + (iip11.markup / isnull(nullif(iip11.priceqty, 0), 1))) as standardcost\n\t\t\t, row_number() over (partition by cit11.recid, cit11.dataareaid, cit11.itemid, id11.configid, id11.inventsiteid order by iip11.activationdate desc, iip11.modifieddatetime desc) as row_num\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custinvoicetrans cit11\n\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id11 on\n\t\t\tcit11.dataareaid = id11.dataareaid and\n\t\t\t\tcit11.inventdimid = id11.inventdimid\n\t\t\tinner join (select iip111.dataareaid, iip111.itemid, id111.configid, id111.inventsiteid, iip111.modifieddatetime, iip111.activationdate, iip111.createddatetime\n\t\t\t\t\t\t, iip111.price, iip111.priceunit, iip111.markup, iip111.priceqty\n\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventitemprice iip111\n\t\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id111 on\n\t\t\t\t\t\tiip111.dataareaid = id111.dataareaid and\n\t\t\t\t\tiip111.inventdimid = id111.inventdimid\n\t\t\twhere iip111.pricetype = 0) iip11 on\n\t\t\tcit11.dataareaid = iip11.dataareaid and\n\t\t\t\tcit11.itemid = iip11.itemid and\n\t\t\t\tid11.configid = iip11.configid and\n\t\t\t\tid11.inventsiteid = iip11.inventsiteid and\n\t\t\t\tcit11.invoicedate >= iip11.activationdate) iip1\n\twhere iip1.row_num = 1\nunion all\n\tselect iip2.standardcost_source, iip2.recid, iip2.dataareaid, iip2.itemid, null as configid, iip2.inventsiteid, iip2.modifieddatetime, iip2.activationdate, iip2.createddatetime, iip2.standardcost\n\tfrom (select 'iip2' as standardcost_source, cit21.recid, cit21.dataareaid, cit21.itemid, id21.inventsiteid, iip21.modifieddatetime, iip21.activationdate, iip21.createddatetime\n\t\t\t, ((iip21.price / isnull(nullif(iip21.priceunit, 0), 1)) + (iip21.markup / isnull(nullif(iip21.priceqty, 0), 1))) as standardcost\n\t\t\t, row_number() over (partition by cit21.recid, cit21.dataareaid, cit21.itemid, id21.inventsiteid order by iip21.activationdate desc, iip21.modifieddatetime desc) as row_num\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custinvoicetrans cit21\n\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id21 on\n\t\t\tcit21.dataareaid = id21.dataareaid and\n\t\t\t\tcit21.inventdimid = id21.inventdimid\n\t\t\tinner join (select iip211.dataareaid, iip211.itemid, id211.inventsiteid, iip211.modifieddatetime, iip211.activationdate, iip211.createddatetime\n\t\t\t\t\t\t, iip211.price, iip211.priceunit, iip211.markup, iip211.priceqty\n\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventitemprice iip211\n\t\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id211 on\n\t\t\t\t\t\tiip211.dataareaid = id211.dataareaid and\n\t\t\t\t\tiip211.inventdimid = id211.inventdimid\n\t\t\twhere iip211.pricetype = 0) iip21 on\n\t\t\tcit21.dataareaid = iip21.dataareaid and\n\t\t\t\tcit21.itemid = iip21.itemid and\n\t\t\t\tid21.inventsiteid = iip21.inventsiteid and\n\t\t\t\tcit21.invoicedate >= iip21.activationdate) iip2\n\twhere iip2.row_num = 1\nunion all\n\tselect iip3.standardcost_source, iip3.recid, iip3.dataareaid, iip3.itemid, iip3.configid, null as inventsiteid, iip3.modifieddatetime, iip3.activationdate, iip3.createddatetime, iip3.standardcost\n\tfrom (select 'iip3' as standardcost_source, cit31.recid, cit31.dataareaid, cit31.itemid, id31.configid, iip31.modifieddatetime, iip31.activationdate, iip31.createddatetime\n\t\t\t, ((iip31.price / isnull(nullif(iip31.priceunit, 0), 1)) + (iip31.markup / isnull(nullif(iip31.priceqty, 0), 1))) as standardcost\n\t\t\t, row_number() over (partition by cit31.recid, cit31.dataareaid, cit31.itemid, id31.configid order by iip31.activationdate desc, iip31.modifieddatetime desc) as row_num\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custinvoicetrans cit31\n\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id31 on\n\t\t\tcit31.dataareaid = id31.dataareaid and\n\t\t\t\tcit31.inventdimid = id31.inventdimid\n\t\t\tinner join (select iip311.dataareaid, iip311.itemid, id311.configid, iip311.modifieddatetime, iip311.activationdate, iip311.createddatetime\n\t\t\t\t\t\t, iip311.price, iip311.priceunit, iip311.markup, iip311.priceqty\n\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventitemprice iip311\n\t\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id311 on\n\t\t\t\t\t\tiip311.dataareaid = id311.dataareaid and\n\t\t\t\t\tiip311.inventdimid = id311.inventdimid\n\t\t\twhere iip311.pricetype = 0) iip31 on\n\t\t\tcit31.dataareaid = iip31.dataareaid and\n\t\t\t\tcit31.itemid = iip31.itemid and\n\t\t\t\tid31.configid = iip31.configid and\n\t\t\t\tcit31.invoicedate >= iip31.activationdate) iip3\n\twhere iip3.row_num = 1\nunion all\n\tselect iip4.standardcost_source, iip4.recid, iip4.dataareaid, iip4.itemid, null as configid, null as inventsiteid, iip4.modifieddatetime, iip4.activationdate, iip4.createddatetime, iip4.standardcost\n\tfrom (select 'iip4' as standardcost_source, cit41.recid, cit41.dataareaid, cit41.itemid, iip41.modifieddatetime, iip41.activationdate, iip41.createddatetime\n\t\t\t, ((iip41.price / isnull(nullif(iip41.priceunit, 0), 1)) + (iip41.markup / isnull(nullif(iip41.priceqty, 0), 1))) as standardcost\n\t\t\t, row_number() over (partition by cit41.recid, cit41.dataareaid, cit41.itemid order by iip41.activationdate desc, iip41.modifieddatetime desc) as row_num\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custinvoicetrans cit41\n\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id41 on\n\t\t\tcit41.dataareaid = id41.dataareaid and\n\t\t\t\tcit41.inventdimid = id41.inventdimid\n\t\t\tinner join (select iip411.dataareaid, iip411.itemid, iip411.modifieddatetime, iip411.activationdate, iip411.createddatetime\n\t\t\t\t\t\t, iip411.price, iip411.priceunit, iip411.markup, iip411.priceqty\n\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventitemprice iip411\n\t\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id411 on\n\t\t\t\t\t\tiip411.dataareaid = id411.dataareaid and\n\t\t\t\t\tiip411.inventdimid = id411.inventdimid\n\t\t\twhere iip411.pricetype = 0) iip41 on\n\t\t\tcit41.dataareaid = iip41.dataareaid and\n\t\t\t\tcit41.itemid = iip41.itemid and\n\t\t\t\tcit41.invoicedate >= iip41.activationdate) iip4\n\twhere iip4.row_num = 1\nunion all\n\tselect iip6.standardcost_source, null as recid, iip6.dataareaid, iip6.itemid, iip6.configid, iip6.inventsiteid, iip6.modifieddatetime, iip6.activationdate, iip6.createddatetime, iip6.standardcost\n\tfrom (select 'iip6' as standardcost_source, iip21.dataareaid, iip21.itemid, id21.configid, id21.inventsiteid, iip21.modifieddatetime, iip21.activationdate, iip21.createddatetime\n\t\t\t, ((iip21.price / isnull(nullif(iip21.priceunit, 0), 1)) + (iip21.markup / isnull(nullif(iip21.priceqty, 0), 1))) as standardcost\n\t\t\t, row_number() over (partition by iip21.dataareaid, iip21.itemid, id21.configid, id21.inventsiteid order by iip21.activationdate desc, iip21.modifieddatetime desc) as row_num\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventitemprice iip21\n\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id21 on\n\t\t\tiip21.dataareaid = id21.dataareaid and\n\t\t\t\tiip21.inventdimid = id21.inventdimid\n\t\twhere iip21.pricetype = 0) iip6\n\twhere iip6.row_num = 1\nunion all\n\tselect iip7.standardcost_source, null as recid, iip7.dataareaid, iip7.itemid, null as configid, iip7.inventsiteid, iip7.modifieddatetime, iip7.activationdate, iip7.createddatetime, iip7.standardcost\n\tfrom (select 'iip7' as standardcost_source, iip22.dataareaid, iip22.itemid, id22.inventsiteid, iip22.modifieddatetime, iip22.activationdate, iip22.createddatetime\n\t\t\t, ((iip22.price / isnull(nullif(iip22.priceunit, 0), 1)) + (iip22.markup / isnull(nullif(iip22.priceqty, 0), 1))) as standardcost\n\t\t\t, row_number() over (partition by iip22.dataareaid, iip22.itemid, id22.inventsiteid order by iip22.activationdate desc, iip22.modifieddatetime desc) as row_num\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventitemprice iip22\n\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id22 on\n\t\t\tiip22.dataareaid = id22.dataareaid and\n\t\t\t\tiip22.inventdimid = id22.inventdimid\n\t\twhere iip22.pricetype = 0) iip7\n\twhere iip7.row_num = 1\nunion all\n\tselect iip8.standardcost_source, null as recid, iip8.dataareaid, iip8.itemid, iip8.configid, null as inventsiteid, iip8.modifieddatetime, iip8.activationdate, iip8.createddatetime, iip8.standardcost\n\tfrom (select 'iip8' as standardcost_source, iip23.dataareaid, iip23.itemid, id23.configid, iip23.modifieddatetime, iip23.activationdate, iip23.createddatetime\n\t\t\t, ((iip23.price / isnull(nullif(iip23.priceunit, 0), 1)) + (iip23.markup / isnull(nullif(iip23.priceqty, 0), 1))) as standardcost\n\t\t\t, row_number() over (partition by iip23.dataareaid, iip23.itemid, id23.configid order by iip23.activationdate desc, iip23.modifieddatetime desc) as row_num\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventitemprice iip23\n\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id23 on\n\t\t\tiip23.dataareaid = id23.dataareaid and\n\t\t\t\tiip23.inventdimid = id23.inventdimid\n\t\twhere iip23.pricetype = 0) iip8\n\twhere iip8.row_num = 1\nunion all\n\tselect iip9.standardcost_source, null as recid, iip9.dataareaid, iip9.itemid, null as configid, null as inventsiteid, iip9.modifieddatetime, iip9.activationdate, iip9.createddatetime, iip9.standardcost\n\tfrom (select 'iip9' as standardcost_source, iip24.dataareaid, iip24.itemid, iip24.modifieddatetime, iip24.activationdate, iip24.createddatetime\n\t\t\t, ((iip24.price / isnull(nullif(iip24.priceunit, 0), 1)) + (iip24.markup / isnull(nullif(iip24.priceqty, 0), 1))) as standardcost\n\t\t\t, row_number() over (partition by iip24.dataareaid, iip24.itemid order by iip24.activationdate desc, iip24.modifieddatetime desc) as row_num\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventitemprice iip24\n\t\twhere iip24.pricetype = 0) iip9\n\twhere iip9.row_num = 1\n\t)\ncit1",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SnowflakeSink",
									"preCopyScript": {
										"value": "@concat('TRUNCATE TABLE ',pipeline().parameters.p_tgt_raw_schema_nm,'.',pipeline().parameters.p_tgt_raw_table_nm_2)",
										"type": "Expression"
									},
									"importSettings": {
										"type": "SnowflakeImportCopyCommand"
									}
								},
								"enableStaging": true,
								"stagingSettings": {
									"linkedServiceName": {
										"referenceName": "ls_blob_storage",
										"type": "LinkedServiceReference"
									},
									"path": {
										"value": "@pipeline().globalParameters.rootDir",
										"type": "Expression"
									}
								},
								"parallelCopies": 32,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "HK_SOURCE_NAME",
												"type": "String"
											},
											"sink": {
												"name": "HK_SOURCE_NAME",
												"type": "String",
												"physicalType": "VARCHAR"
											}
										},
										{
											"source": {
												"name": "HK_JOB_RUN_ID",
												"type": "String"
											},
											"sink": {
												"name": "HK_JOB_RUN_ID",
												"type": "String",
												"physicalType": "VARCHAR"
											}
										},
										{
											"source": {
												"name": "STANDARDCOST_SOURCE",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "STANDARDCOST_SOURCE",
												"type": "String",
												"physicalType": "VARCHAR"
											}
										},
										{
											"source": {
												"name": "RECID",
												"type": "Int64",
												"physicalType": "bigint"
											},
											"sink": {
												"name": "RECID",
												"type": "Int64",
												"physicalType": "NUMBER"
											}
										},
										{
											"source": {
												"name": "DATAAREAID",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "DATAAREAID",
												"type": "String",
												"physicalType": "VARCHAR"
											}
										},
										{
											"source": {
												"name": "ITEMID",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "ITEMID",
												"type": "String",
												"physicalType": "VARCHAR"
											}
										},
										{
											"source": {
												"name": "INVENTDIM_CONFIGID",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "INVENTDIM_CONFIGID",
												"type": "String",
												"physicalType": "VARCHAR"
											}
										},
										{
											"source": {
												"name": "INVENTDIM_INVENTSITEID",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "INVENTDIM_INVENTSITEID",
												"type": "String",
												"physicalType": "VARCHAR"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "INVENTITEMPRICE_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "TIMESTAMP_TZ"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE_ACTIVATIONDATE",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "INVENTITEMPRICE_ACTIVATIONDATE",
												"type": "DateTime",
												"physicalType": "DATE"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE_CREATEDDATETIME",
												"type": "DateTime",
												"physicalType": "datetime2"
											},
											"sink": {
												"name": "INVENTITEMPRICE_CREATEDDATETIME",
												"type": "DateTime",
												"physicalType": "TIMESTAMP_TZ"
											}
										},
										{
											"source": {
												"name": "INVENTITEMPRICE_STANDARDCOST",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 6,
												"precision": 38
											},
											"sink": {
												"name": "INVENTITEMPRICE_STANDARDCOST",
												"type": "Int64",
												"physicalType": "NUMBER"
											}
										},
										{
											"source": {
												"name": "LAST_MODIFIEDDATE",
												"type": "String"
											},
											"sink": {
												"name": "LATEST_MODIFIEDDATETIME",
												"type": "DateTime",
												"physicalType": "TIMESTAMP_TZ"
											}
										}
									],
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_fabric_wh",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_snowflake",
									"type": "DatasetReference",
									"parameters": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_tgt_raw_table_nm_2",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_rawDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "load_fact_sales_invoice",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "switch_nala_retail_d365",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "df_load_fact_sales_invoice",
						"type": "DataFlowReference",
						"parameters": {
							"df_last_mod_tmstmp_cogsitemcosts": {
								"value": "'@{variables('v_last_mod_tmstmp_cogsitemcosts')}'",
								"type": "Expression"
							},
							"df_hk_job_run_id": {
								"value": "'@{coalesce(pipeline().RunId, -1)}'",
								"type": "Expression"
							},
							"df_hk_source_name": {
								"value": "'@{pipeline().parameters.p_src_nm}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"SrcCustInvoiceTrans": {
								"p_directory": {
									"value": "@pipeline().parameters.p_temp_directory",
									"type": "Expression"
								},
								"p_root_system": {
									"value": "@pipeline().globalParameters.rootDir",
									"type": "Expression"
								},
								"p_file_name": {
									"value": "@pipeline().parameters.p_temp_file_nm",
									"type": "Expression"
								}
							},
							"CogsItemCosts": {
								"p_src_directory": {
									"value": "@pipeline().parameters.p_src_directory",
									"type": "Expression"
								},
								"p_src_file_name": {
									"value": "@pipeline().parameters.p_src_file_nm",
									"type": "Expression"
								},
								"p_src_root_system": {
									"value": "@pipeline().globalParameters.rootDir",
									"type": "Expression"
								},
								"p_sheet_name": {
									"value": "@pipeline().parameters.p_src_file_sheet",
									"type": "Expression"
								}
							},
							"CustInvoiceTrans": {
								"p_tgt_table_name": {
									"value": "@pipeline().parameters.p_tgt_raw_table_nm",
									"type": "Expression"
								},
								"p_tgt_schema_name": {
									"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
									"type": "Expression"
								},
								"p_ls_DbName": {
									"value": "@pipeline().globalParameters.snow_rawDb",
									"type": "Expression"
								},
								"p_ls_Env": {
									"value": "@pipeline().globalParameters.environment",
									"type": "Expression"
								}
							},
							"sinkCUSTINVOICETRANSCOGSXLSX": {
								"p_tgt_table_name": {
									"value": "@pipeline().parameters.p_tgt_raw_table_nm_4",
									"type": "Expression"
								},
								"p_tgt_schema_name": {
									"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
									"type": "Expression"
								},
								"p_ls_DbName": {
									"value": "@pipeline().globalParameters.snow_rawDb",
									"type": "Expression"
								},
								"p_ls_Env": {
									"value": "@pipeline().globalParameters.environment",
									"type": "Expression"
								}
							}
						}
					},
					"integrationRuntime": {
						"referenceName": "IR-Snowflake-NALA",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "raw_to_curate_sp_call",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "load_fact_sales_invoice",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_snowflake",
					"type": "LinkedServiceReference",
					"parameters": {
						"ls_DbName": {
							"value": "@pipeline().globalParameters.snow_auditDb",
							"type": "Expression"
						},
						"ls_Env": {
							"value": "@pipeline().globalParameters.environment",
							"type": "Expression"
						}
					}
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('CALL ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb,'.CONTROL.SP_TASK_INITIALIZE(','''',pipeline().RunId,'''',',','''',pipeline().globalParameters.environment,'''',',','''',pipeline().parameters.p_tgt_curate_table_nm,'''',',',pipeline().parameters.p_src_code,')')",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "stored_procedure_failure_notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "raw_to_curate_sp_call",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pp_adf_pipeline_notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"subscription": {
							"value": "@pipeline().globalParameters.subscriptionId",
							"type": "Expression"
						},
						"resourceGroup": {
							"value": "@pipeline().globalParameters.resourceGroup",
							"type": "Expression"
						},
						"runId": {
							"value": "@coalesce(pipeline().RunId, -1)",
							"type": "Expression"
						},
						"name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"triggerTime": {
							"value": "@pipeline().TriggerTime",
							"type": "Expression"
						},
						"status": {
							"value": "@activity('raw_to_curate_sp_call').Status",
							"type": "Expression"
						},
						"message": {
							"value": "@activity('raw_to_curate_sp_call').Error['message']",
							"type": "Expression"
						},
						"executionEndTime": {
							"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
							"type": "Expression"
						},
						"runDuration": {
							"value": "@activity('raw_to_curate_sp_call').Duration",
							"type": "Expression"
						},
						"teamWebhookUrl": {
							"value": "@pipeline().globalParameters.teamsWebhookUrl",
							"type": "Expression"
						},
						"notificationTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"taskName": {
							"value": "@pipeline().parameters.p_tgt_curate_table_nm",
							"type": "Expression"
						},
						"taskStepNumber": {
							"value": "@pipeline().parameters.p_src_code",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "pipeline_execution_notification",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "raw_to_curate_sp_call",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@if(equals(activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE'],'TRUE'),bool('TRUE'), bool('FALSE'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "pp_stored_procedure_failure_notification",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pp_adf_pipeline_notification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"subscription": {
										"value": "@pipeline().globalParameters.subscriptionId",
										"type": "Expression"
									},
									"resourceGroup": {
										"value": "@pipeline().globalParameters.resourceGroup",
										"type": "Expression"
									},
									"runId": {
										"value": "@coalesce(pipeline().RunId, -1)",
										"type": "Expression"
									},
									"name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"triggerTime": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"status": {
										"value": "@toUpper('failed')",
										"type": "Expression"
									},
									"message": {
										"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
										"type": "Expression"
									},
									"executionEndTime": {
										"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
										"type": "Expression"
									},
									"runDuration": {
										"value": "@activity('raw_to_curate_sp_call').Duration",
										"type": "Expression"
									},
									"teamWebhookUrl": {
										"value": "@pipeline().globalParameters.teamsWebhookUrl",
										"type": "Expression"
									},
									"notificationTime": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"taskName": {
										"value": "@pipeline().parameters.p_tgt_curate_table_nm",
										"type": "Expression"
									},
									"taskStepNumber": {
										"value": "@pipeline().parameters.p_src_code",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "curate_load_failure",
							"type": "Fail",
							"dependsOn": [
								{
									"activity": "pp_stored_procedure_failure_notification",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"message": {
									"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
									"type": "Expression"
								},
								"errorCode": "500"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "stored_procedure_success_notification",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pp_adf_pipeline_notification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"subscription": {
										"value": "@pipeline().globalParameters.subscriptionId",
										"type": "Expression"
									},
									"resourceGroup": {
										"value": "@pipeline().globalParameters.resourceGroup",
										"type": "Expression"
									},
									"runId": {
										"value": "@coalesce(pipeline().RunId, -1)",
										"type": "Expression"
									},
									"name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"triggerTime": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"status": {
										"value": "@activity('raw_to_curate_sp_call').Status",
										"type": "Expression"
									},
									"message": {
										"value": "@concat(pipeline().parameters.p_tgt_curate_table_nm, ' is successfully loaded')",
										"type": "Expression"
									},
									"executionEndTime": {
										"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
										"type": "Expression"
									},
									"runDuration": {
										"value": "@activity('raw_to_curate_sp_call').Duration",
										"type": "Expression"
									},
									"teamWebhookUrl": {
										"value": "@pipeline().globalParameters.teamsWebhookUrl",
										"type": "Expression"
									},
									"notificationTime": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"taskName": {
										"value": "@pipeline().parameters.p_tgt_curate_table_nm",
										"type": "Expression"
									},
									"taskStepNumber": {
										"value": "@pipeline().parameters.p_src_code",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "load_raw_failure_notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "load_fact_sales_invoice",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pp_adf_pipeline_notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"subscription": {
							"value": "@pipeline().globalParameters.subscriptionId",
							"type": "Expression"
						},
						"resourceGroup": {
							"value": "@pipeline().globalParameters.resourceGroup",
							"type": "Expression"
						},
						"runId": {
							"value": "@coalesce(pipeline().RunId, -1)",
							"type": "Expression"
						},
						"name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"triggerTime": {
							"value": "@pipeline().TriggerTime",
							"type": "Expression"
						},
						"status": {
							"value": "@activity('load_fact_sales_invoice').Status",
							"type": "Expression"
						},
						"message": {
							"value": "@activity('load_fact_sales_invoice').Error['message']",
							"type": "Expression"
						},
						"executionEndTime": {
							"value": "@activity('load_fact_sales_invoice').ExecutionEndTime",
							"type": "Expression"
						},
						"runDuration": {
							"value": "@activity('load_fact_sales_invoice').Duration",
							"type": "Expression"
						},
						"teamWebhookUrl": {
							"value": "@pipeline().globalParameters.teamsWebhookUrl",
							"type": "Expression"
						},
						"notificationTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"taskName": {
							"value": "@pipeline().parameters.p_tgt_curate_table_nm",
							"type": "Expression"
						},
						"taskStepNumber": {
							"value": "@pipeline().parameters.p_src_code",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"p_src_table_nm": {
				"type": "string",
				"defaultValue": "CUSTINVOICETRANS"
			},
			"p_src_schema_nm": {
				"type": "string",
				"defaultValue": "dbo"
			},
			"p_tgt_raw_table_nm": {
				"type": "string",
				"defaultValue": "CUSTINVOICETRANS"
			},
			"p_tgt_raw_schema_nm": {
				"type": "string",
				"defaultValue": "AX_NALA"
			},
			"p_tgt_curate_table_nm": {
				"type": "string",
				"defaultValue": "FACT_SALES_INVOICES"
			},
			"p_tgt_curate_schema_nm": {
				"type": "string",
				"defaultValue": "GLOBAL"
			},
			"p_src_nm": {
				"type": "string",
				"defaultValue": "AXNALA"
			},
			"p_src_directory": {
				"type": "string",
				"defaultValue": "business_files"
			},
			"p_temp_file_nm": {
				"type": "string",
				"defaultValue": "custinvoicetrans_nala.parquet"
			},
			"p_src_file_nm": {
				"type": "string",
				"defaultValue": "COGS.xlsx"
			},
			"p_temp_directory": {
				"type": "string",
				"defaultValue": "temp_files"
			},
			"p_src_file_sheet": {
				"type": "string",
				"defaultValue": "ItemCosts"
			},
			"p_src_code": {
				"type": "string",
				"defaultValue": "1"
			},
			"p_tgt_raw_table_nm_2": {
				"type": "string",
				"defaultValue": "CUSTINVOICETRANS_STANDARDCOST"
			},
			"p_tgt_raw_table_nm_3": {
				"type": "string",
				"defaultValue": "CUSTINVOICETRANS_COGSFIFO"
			},
			"p_tgt_raw_table_nm_4": {
				"type": "string",
				"defaultValue": "CUSTINVOICETRANS_COGSXLS"
			}
		},
		"variables": {
			"v_last_mod_tmstmp_cogsitemcosts": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-11-22T20:38:35Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}