{
	"name": "pp_ax_budgettransactionline_to_fact_budget_transactions",
	"properties": {
		"activities": [
			{
				"name": "raw_to_curate_sp_call",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "switch_nala_retail_d365",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_snowflake",
					"type": "LinkedServiceReference",
					"parameters": {
						"ls_DbName": {
							"value": "@pipeline().globalParameters.snow_auditDb",
							"type": "Expression"
						},
						"ls_Env": {
							"value": "@pipeline().globalParameters.environment",
							"type": "Expression"
						}
					}
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('CALL ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb,'.CONTROL.SP_TASK_INITIALIZE(','''',pipeline().RunId,'''',',','''',pipeline().globalParameters.environment,'''',',','''',pipeline().parameters.p_tgt_curate_table_nm,'''',',',pipeline().parameters.p_src_code,')')",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "stored_procedure_failure_notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "raw_to_curate_sp_call",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pp_adf_pipeline_notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"subscription": {
							"value": "@pipeline().globalParameters.subscriptionId",
							"type": "Expression"
						},
						"resourceGroup": {
							"value": "@pipeline().globalParameters.resourceGroup",
							"type": "Expression"
						},
						"runId": {
							"value": "@coalesce(pipeline().RunId, -1)",
							"type": "Expression"
						},
						"name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"triggerTime": {
							"value": "@pipeline().TriggerTime",
							"type": "Expression"
						},
						"status": {
							"value": "@activity('raw_to_curate_sp_call').Status",
							"type": "Expression"
						},
						"message": {
							"value": "@activity('raw_to_curate_sp_call').Error['message']",
							"type": "Expression"
						},
						"executionEndTime": {
							"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
							"type": "Expression"
						},
						"runDuration": {
							"value": "@activity('raw_to_curate_sp_call').Duration",
							"type": "Expression"
						},
						"teamWebhookUrl": {
							"value": "@pipeline().globalParameters.teamsWebhookUrl",
							"type": "Expression"
						},
						"notificationTime": {
							"value": "@utcNow()",
							"type": "Expression"
						},
						"taskName": {
							"value": "@pipeline().parameters.p_tgt_curate_table_nm",
							"type": "Expression"
						},
						"taskStepNumber": {
							"value": "@pipeline().parameters.p_src_code",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "lkp_raw_last_modified_date",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "@concat('select max(to_varchar(LATEST_MODIFIEDDATETIME::timestamp, ''','yyyy-mm-dd hh24:mi:ss',''')) as max_date from ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_rawDb,'.',pipeline().parameters.p_tgt_raw_schema_nm, '.', pipeline().parameters.p_tgt_raw_table_nm)",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "ds_snowflake",
						"type": "DatasetReference",
						"parameters": {
							"p_tgt_table_name": {
								"value": "@pipeline().parameters.p_tgt_raw_table_nm",
								"type": "Expression"
							},
							"p_tgt_schema_name": {
								"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
								"type": "Expression"
							},
							"p_ls_DbName": {
								"value": "@pipeline().globalParameters.snow_rawDb",
								"type": "Expression"
							},
							"p_ls_Env": {
								"value": "@pipeline().globalParameters.environment",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "set_last_modified_date",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "lkp_raw_last_modified_date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "v_prev_max_timestamp",
					"value": {
						"value": "@coalesce(activity('lkp_raw_last_modified_date').output.firstRow.max_date, '1950-01-01 00:00:00')\n\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "switch_nala_retail_d365",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "set_last_modified_date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@pipeline().parameters.p_src_code",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "1",
							"activities": [
								{
									"name": "sql_to_raw_nala",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "HK_JOB_RUN_ID",
													"value": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													}
												},
												{
													"name": "HK_SOURCE_NAME",
													"value": {
														"value": "@pipeline().parameters.p_src_nm",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "SELECT\nbtl1.recid as RECID\n,btl1.budgettransactionheader as BUDGETTRANSACTIONHEADER\n,btl1.transactioncurrency as TRANSACTIONCURRENCY\n,btl1.ledgerdimension as LEDGERDIMENSION\n,btl1.date as DATE\n,btl1.quantity as QUANTITY\n,btl1.accountingcurrencyamount as ACCOUNTINGCURRENCYAMOUNT\n,btl1.transactioncurrencyamount as TRANSACTIONCURRENCYAMOUNT\n,btl1.modifieddatetime as MODIFIEDDATETIME\n,bth1.budgetmodelid as BUDGETTRANSACTIONHEADER_BUDGETMODELID\n,bth1.budgetsubmodelid as BUDGETTRANSACTIONHEADER_BUDGETSUBMODELID\n,bth1.budgetmodeltype as BUDGETTRANSACTIONHEADER_BUDGETMODELTYPE\n,bth1.primaryledger as BUDGETTRANSACTIONHEADER_PRIMARYLEDGER\n,bth1.budgetmodeldataareaid as BUDGETTRANSACTIONHEADER_BUDGETMODELDATAAREAID\n,bth1.modifieddatetime as BUDGETTRANSACTIONHEADER_MODIFIEDDATETIME\n,davc1.mainaccount as DIMENSIONATTRIBUTEVALUECOMBINATION_MAINACCOUNT\n,davc1.modifieddatetime as DIMENSIONATTRIBUTEVALUECOMBINATION_MODIFIEDDATETIME\n,tet1.enumvaluelabel as TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_BUDGETMODELTYPE\n,(SELECT MAX(LastUpdateDate)\n FROM (VALUES (btl1.modifieddatetime),\n  (isnull(bth1.modifieddatetime, '1950-01-01'))\n  , (isnull(davc1.MODIFIEDDATETIME, '1950-01-01'))\n) AS UpdateDate(LastUpdateDate)) as LATEST_MODIFIEDDATETIME\nFROM\ndbo.BUDGETTRANSACTIONLINE btl1\nleft join dbo.BUDGETTRANSACTIONHEADER bth1 on\n\tbtl1.BUDGETTRANSACTIONHEADER = bth1.RECID\nleft join dbo.DIMENSIONATTRIBUTEVALUECOMBINATION davc1 on\n\tbtl1.LEDGERDIMENSION = davc1.RECID\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'HeadingSub'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet1 on\n\tbth1.BUDGETMODELTYPE = tet1.ENUMVALUE\nWHERE (SELECT MAX(LastUpdateDate)\n FROM (VALUES (btl1.modifieddatetime),\n  (isnull(bth1.modifieddatetime, '1950-01-01'))\n  , (isnull(davc1.MODIFIEDDATETIME, '1950-01-01'))\n) AS UpdateDate(LastUpdateDate)) > '@{variables('v_prev_max_timestamp')}' ",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeSink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "ls_blob_storage",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@pipeline().globalParameters.rootDir",
												"type": "Expression"
											},
											"enableCompression": true
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													},
													"sink": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RECID",
														"type": "Int64"
													},
													"sink": {
														"name": "RECID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BUDGETTRANSACTIONHEADER",
														"type": "Int64"
													},
													"sink": {
														"name": "BUDGETTRANSACTIONHEADER",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TRANSACTIONCURRENCY",
														"type": "String"
													},
													"sink": {
														"name": "TRANSACTIONCURRENCY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LEDGERDIMENSION",
														"type": "Int64"
													},
													"sink": {
														"name": "LEDGERDIMENSION",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "QUANTITY",
														"type": "Decimal"
													},
													"sink": {
														"name": "QUANTITY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ACCOUNTINGCURRENCYAMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "ACCOUNTINGCURRENCYAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TRANSACTIONCURRENCYAMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "TRANSACTIONCURRENCYAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "BUDGETTRANSACTIONHEADER_BUDGETMODELID",
														"type": "String"
													},
													"sink": {
														"name": "BUDGETTRANSACTIONHEADER_BUDGETMODELID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BUDGETTRANSACTIONHEADER_BUDGETSUBMODELID",
														"type": "String"
													},
													"sink": {
														"name": "BUDGETTRANSACTIONHEADER_BUDGETSUBMODELID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BUDGETTRANSACTIONHEADER_BUDGETMODELTYPE",
														"type": "Int32"
													},
													"sink": {
														"name": "BUDGETTRANSACTIONHEADER_BUDGETMODELTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BUDGETTRANSACTIONHEADER_PRIMARYLEDGER",
														"type": "Int64"
													},
													"sink": {
														"name": "BUDGETTRANSACTIONHEADER_PRIMARYLEDGER",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BUDGETTRANSACTIONHEADER_BUDGETMODELDATAAREAID",
														"type": "String"
													},
													"sink": {
														"name": "BUDGETTRANSACTIONHEADER_BUDGETMODELDATAAREAID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BUDGETTRANSACTIONHEADER_MODIFIEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "BUDGETTRANSACTIONHEADER_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DIMENSIONATTRIBUTEVALUECOMBINATION_MAINACCOUNT",
														"type": "Int64"
													},
													"sink": {
														"name": "DIMENSIONATTRIBUTEVALUECOMBINATION_MAINACCOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DIMENSIONATTRIBUTEVALUECOMBINATION_MODIFIEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "DIMENSIONATTRIBUTEVALUECOMBINATION_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_BUDGETMODELTYPE",
														"type": "String"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_BUDGETMODELTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sql_server",
											"type": "DatasetReference",
											"parameters": {
												"p_src_table_name": {
													"value": "@pipeline().parameters.p_src_table_nm",
													"type": "Expression"
												},
												"p_src_schema_name": {
													"value": "@pipeline().parameters.p_src_schema_nm",
													"type": "Expression"
												},
												"p_ls_serverName": {
													"value": "@pipeline().globalParameters.nala_sql_serverName",
													"type": "Expression"
												},
												"p_ls_dbName": {
													"value": "@pipeline().globalParameters.nala_sql_dbName",
													"type": "Expression"
												},
												"p_ls_sqlUsername": {
													"value": "@pipeline().globalParameters.sql_userName",
													"type": "Expression"
												},
												"p_ls_sqlPassword": {
													"value": "@pipeline().globalParameters.sql_password",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_snowflake",
											"type": "DatasetReference",
											"parameters": {
												"p_tgt_table_name": {
													"value": "@pipeline().parameters.p_tgt_raw_table_nm",
													"type": "Expression"
												},
												"p_tgt_schema_name": {
													"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
													"type": "Expression"
												},
												"p_ls_DbName": {
													"value": "@pipeline().globalParameters.snow_rawDb",
													"type": "Expression"
												},
												"p_ls_Env": {
													"value": "@pipeline().globalParameters.environment",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "nala_raw_load_failure_notification",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "sql_to_raw_nala",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('sql_to_raw_nala').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@replace(replace(replace(activity('sql_to_raw_nala').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('sql_to_raw_nala').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('sql_to_raw_nala').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "sql_nala_load_to_raw_fail",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "nala_raw_load_failure_notification",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('sql_to_raw_nala').Error['message']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								}
							]
						},
						{
							"value": "3",
							"activities": [
								{
									"name": "sql_to_raw_d365",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "WarehouseSource",
											"additionalColumns": [
												{
													"name": "HK_JOB_RUN_ID",
													"value": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													}
												},
												{
													"name": "HK_SOURCE_NAME",
													"value": {
														"value": "@pipeline().parameters.p_src_nm",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@Concat('SELECT\nbtl1.recid as RECID\n,btl1.budgettransactionheader as BUDGETTRANSACTIONHEADER\n,btl1.transactioncurrency as TRANSACTIONCURRENCY\n,btl1.ledgerdimension as LEDGERDIMENSION\n,btl1.date as DATE\n,btl1.quantity as QUANTITY\n,btl1.accountingcurrencyamount as ACCOUNTINGCURRENCYAMOUNT\n,btl1.transactioncurrencyamount as TRANSACTIONCURRENCYAMOUNT\n,btl1.modifieddatetime as MODIFIEDDATETIME\n,bth1.budgetmodelid as BUDGETTRANSACTIONHEADER_BUDGETMODELID\n,bth1.budgetsubmodelid as BUDGETTRANSACTIONHEADER_BUDGETSUBMODELID\n,bth1.budgetmodeltype as BUDGETTRANSACTIONHEADER_BUDGETMODELTYPE\n,bth1.primaryledger as BUDGETTRANSACTIONHEADER_PRIMARYLEDGER\n,bth1.budgetmodeldataareaid as BUDGETTRANSACTIONHEADER_BUDGETMODELDATAAREAID\n,bth1.modifieddatetime as BUDGETTRANSACTIONHEADER_MODIFIEDDATETIME\n,davc1.mainaccount as DIMENSIONATTRIBUTEVALUECOMBINATION_MAINACCOUNT\n,davc1.modifieddatetime as DIMENSIONATTRIBUTEVALUECOMBINATION_MODIFIEDDATETIME\n,tet1.ENUMVALUELABEL as TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_BUDGETMODELTYPE\n,(SELECT MAX(lastupdatedate)\n FROM (VALUES (btl1.modifieddatetime),\n  (isnull(bth1.modifieddatetime, ''1950-01-01''))\n  , (isnull(davc1.modifieddatetime, ''1950-01-01''))\n) AS UpdateDate(lastupdatedate)) as LATEST_MODIFIEDDATETIME\nFROM\ndataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.budgettransactionline btl1\nLeft Join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.budgettransactionheader bth1 On\n\tbtl1.budgettransactionheader = bth1.recid\nLeft Join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattributevaluecombination davc1 On\n\tbtl1.ledgerdimension = davc1.recid\nLeft Join (Select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) As ENUMVALUELABEL\n\t\tFrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\tWhere enumname = ''HeadingSub''\n\t\tGroup By enumname, enumvalue) tet1 On\n\tbth1.budgetmodeltype = tet1.enumvalue\nWhere (Select max(LastUpdateDate)\n FROM (VALUES (btl1.modifieddatetime),\n  (isnull(bth1.modifieddatetime, ''1950-01-01''))\n  , (isnull(davc1.modifieddatetime, ''1950-01-01''))\n) AS UpdateDate(LastUpdateDate)) > ','''',variables('v_prev_max_timestamp'),'''')\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeSink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "ls_blob_storage",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@pipeline().globalParameters.rootDir",
												"type": "Expression"
											},
											"enableCompression": true
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													},
													"sink": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "RECID",
														"type": "Int64"
													},
													"sink": {
														"name": "RECID",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BUDGETTRANSACTIONHEADER",
														"type": "Int64"
													},
													"sink": {
														"name": "BUDGETTRANSACTIONHEADER",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TRANSACTIONCURRENCY",
														"type": "String"
													},
													"sink": {
														"name": "TRANSACTIONCURRENCY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LEDGERDIMENSION",
														"type": "Int64"
													},
													"sink": {
														"name": "LEDGERDIMENSION",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DATE",
														"type": "DateTime"
													},
													"sink": {
														"name": "DATE",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "QUANTITY",
														"type": "Decimal"
													},
													"sink": {
														"name": "QUANTITY",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "ACCOUNTINGCURRENCYAMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "ACCOUNTINGCURRENCYAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "TRANSACTIONCURRENCYAMOUNT",
														"type": "Decimal"
													},
													"sink": {
														"name": "TRANSACTIONCURRENCYAMOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "BUDGETTRANSACTIONHEADER_BUDGETMODELID",
														"type": "String"
													},
													"sink": {
														"name": "BUDGETTRANSACTIONHEADER_BUDGETMODELID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BUDGETTRANSACTIONHEADER_BUDGETSUBMODELID",
														"type": "String"
													},
													"sink": {
														"name": "BUDGETTRANSACTIONHEADER_BUDGETSUBMODELID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BUDGETTRANSACTIONHEADER_BUDGETMODELTYPE",
														"type": "Int32"
													},
													"sink": {
														"name": "BUDGETTRANSACTIONHEADER_BUDGETMODELTYPE",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BUDGETTRANSACTIONHEADER_PRIMARYLEDGER",
														"type": "Int64"
													},
													"sink": {
														"name": "BUDGETTRANSACTIONHEADER_PRIMARYLEDGER",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "BUDGETTRANSACTIONHEADER_BUDGETMODELDATAAREAID",
														"type": "String"
													},
													"sink": {
														"name": "BUDGETTRANSACTIONHEADER_BUDGETMODELDATAAREAID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "BUDGETTRANSACTIONHEADER_MODIFIEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "BUDGETTRANSACTIONHEADER_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "DIMENSIONATTRIBUTEVALUECOMBINATION_MAINACCOUNT",
														"type": "Int64"
													},
													"sink": {
														"name": "DIMENSIONATTRIBUTEVALUECOMBINATION_MAINACCOUNT",
														"type": "Int64"
													}
												},
												{
													"source": {
														"name": "DIMENSIONATTRIBUTEVALUECOMBINATION_MODIFIEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "DIMENSIONATTRIBUTEVALUECOMBINATION_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_BUDGETMODELTYPE",
														"type": "String"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_BUDGETMODELTYPE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime"
													},
													"sink": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_fabric_wh",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "ds_snowflake",
											"type": "DatasetReference",
											"parameters": {
												"p_tgt_table_name": {
													"value": "@pipeline().parameters.p_tgt_raw_table_nm",
													"type": "Expression"
												},
												"p_tgt_schema_name": {
													"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
													"type": "Expression"
												},
												"p_ls_DbName": {
													"value": "@pipeline().globalParameters.snow_rawDb",
													"type": "Expression"
												},
												"p_ls_Env": {
													"value": "@pipeline().globalParameters.environment",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "d365_raw_load_failure_notification",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "sql_to_raw_d365",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('sql_to_raw_d365').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@replace(replace(replace(activity('sql_to_raw_d365').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('sql_to_raw_d365').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('sql_to_raw_d365').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "sql_d365load_to_raw_fail",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "d365_raw_load_failure_notification",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('sql_to_raw_d365').Error['message']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "pipeline_execution_notification",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "raw_to_curate_sp_call",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@if(equals(activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE'],'TRUE'),bool('TRUE'), bool('FALSE'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "pp_stored_procedure_failure_notification",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pp_adf_pipeline_notification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"subscription": {
										"value": "@pipeline().globalParameters.subscriptionId",
										"type": "Expression"
									},
									"resourceGroup": {
										"value": "@pipeline().globalParameters.resourceGroup",
										"type": "Expression"
									},
									"runId": {
										"value": "@coalesce(pipeline().RunId, -1)",
										"type": "Expression"
									},
									"name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"triggerTime": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"status": {
										"value": "@toUpper('failed')",
										"type": "Expression"
									},
									"message": {
										"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
										"type": "Expression"
									},
									"executionEndTime": {
										"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
										"type": "Expression"
									},
									"runDuration": {
										"value": "@activity('raw_to_curate_sp_call').Duration",
										"type": "Expression"
									},
									"teamWebhookUrl": {
										"value": "@pipeline().globalParameters.teamsWebhookUrl",
										"type": "Expression"
									},
									"notificationTime": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"taskName": "@pipeline().parameters.p_tgt_curate_table_nm",
									"taskStepNumber": {
										"value": "@pipeline().parameters.p_src_code",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "curate_load_failure",
							"type": "Fail",
							"dependsOn": [
								{
									"activity": "pp_stored_procedure_failure_notification",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"message": {
									"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
									"type": "Expression"
								},
								"errorCode": "500"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "stored_procedure_success_notification",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pp_adf_pipeline_notification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"subscription": {
										"value": "@pipeline().globalParameters.subscriptionId",
										"type": "Expression"
									},
									"resourceGroup": {
										"value": "@pipeline().globalParameters.resourceGroup",
										"type": "Expression"
									},
									"runId": {
										"value": "@coalesce(pipeline().RunId, -1)",
										"type": "Expression"
									},
									"name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"triggerTime": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"status": {
										"value": "@activity('raw_to_curate_sp_call').Status",
										"type": "Expression"
									},
									"message": {
										"value": "@concat(pipeline().parameters.p_tgt_curate_table_nm, ' is successfully loaded')",
										"type": "Expression"
									},
									"executionEndTime": {
										"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
										"type": "Expression"
									},
									"runDuration": {
										"value": "@activity('raw_to_curate_sp_call').Duration",
										"type": "Expression"
									},
									"teamWebhookUrl": {
										"value": "@pipeline().globalParameters.teamsWebhookUrl",
										"type": "Expression"
									},
									"notificationTime": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"taskName": {
										"value": "@pipeline().parameters.p_tgt_curate_table_nm",
										"type": "Expression"
									},
									"taskStepNumber": {
										"value": "@pipeline().parameters.p_src_code",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"p_src_nm": {
				"type": "string",
				"defaultValue": "AXNALA"
			},
			"p_tgt_curate_table_nm": {
				"type": "string",
				"defaultValue": "FACT_BUDGET_TRANSACTIONS"
			},
			"p_tgt_raw_table_nm": {
				"type": "string",
				"defaultValue": "BUDGETTRANSACTIONLINE"
			},
			"p_tgt_raw_schema_nm": {
				"type": "string",
				"defaultValue": "AX_NALA"
			},
			"p_tgt_curate_schema_nm": {
				"type": "string",
				"defaultValue": "GLOBAL"
			},
			"p_src_table_nm": {
				"type": "string",
				"defaultValue": "BUDGETTRANSACTIONLINE"
			},
			"p_src_schema_nm": {
				"type": "string",
				"defaultValue": "dbo"
			},
			"p_src_code": {
				"type": "string",
				"defaultValue": "1"
			}
		},
		"variables": {
			"v_prev_max_timestamp": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-06-04T13:47:58Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}