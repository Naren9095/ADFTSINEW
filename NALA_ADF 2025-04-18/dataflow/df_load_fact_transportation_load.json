{
	"name": "df_load_fact_transportation_load",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_parquet",
						"type": "DatasetReference"
					},
					"name": "srcWhsLoadLine"
				},
				{
					"dataset": {
						"referenceName": "ds_snowflake",
						"type": "DatasetReference"
					},
					"name": "srcWhsLoadLineExt"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_snowflake",
						"type": "DatasetReference"
					},
					"name": "whsLoadLineExt"
				},
				{
					"dataset": {
						"referenceName": "ds_snowflake",
						"type": "DatasetReference"
					},
					"name": "whsLoadLine"
				}
			],
			"transformations": [
				{
					"name": "joinLoadLineExt"
				},
				{
					"name": "setActiveFlag"
				},
				{
					"name": "pullDistinctEntries"
				},
				{
					"name": "upsertWhsLoadLineExt"
				},
				{
					"name": "filterWhsLoadline"
				}
			],
			"scriptLines": [
				"parameters{",
				"     df_prev_max_timestamp as string",
				"}",
				"source(output(",
				"          DATAAREAID as string,",
				"          LOADID as string,",
				"          ORDERNUM as string,",
				"          ITEMID as string,",
				"          QTY as decimal(38,16),",
				"          MODIFIEDDATETIME as timestamp,",
				"          MCSRNAEVENTLINE_ACTUALPIECES as decimal(38,16),",
				"          MCSRNAEVENTLINE_UNITVOLUME as decimal(38,6),",
				"          MCSRNAEVENTLINE_INVENTTABLE_MODIFIEDDATETIME as timestamp,",
				"          MCSRNAEVENTLINE_SALESLINE_MODIFIEDDATETIME as timestamp,",
				"          INVENTTABLE_UNITVOLUME as decimal(32,16),",
				"          INVENTTABLE_MODIFIEDDATETIME as timestamp,",
				"          SALESTABLE_SALESID as string,",
				"          SALESTABLE_CUSTACCOUNT as string,",
				"          SALESTABLE_DELIVERYPOSTALADDRESS as long,",
				"          SALESTABLE_SHIPPINGDATECONFIRMED as timestamp,",
				"          SALESTABLE_MODIFIEDDATETIME as timestamp,",
				"          WHSLOADTABLE_EBCCARRIERID as string,",
				"          WHSLOADTABLE_INVENTSITEID as string,",
				"          WHSLOADTABLE_EBCTRAILERID as string,",
				"          WHSLOADTABLE_LOADSCHEDSHIPUTCDATETIME as timestamp,",
				"          WHSLOADTABLE_LOADSTATUS as integer,",
				"          WHSLOADTABLE_MODIFIEDDATETIME as timestamp,",
				"          WHSLOADTABLE_ENTITYKEY as integer,",
				"          MCSROADNETSTAGINGTABLE_MODIFIEDDATETIME as timestamp,",
				"          MCSRNAROUTESTOP_STOPCOUNT as integer,",
				"          MCSRNAROUTESTOP_MILEAGE as decimal(38,16),",
				"          MCSRNAEVENTHEADER_ACTUALMILES as decimal(38,16),",
				"          MCSRNAEVENTHEADER_ACTUALSTOPCOUNT as integer,",
				"          MCSTRAILERS_CUBICVOLUME as integer,",
				"          TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_SALESTYPE as string,",
				"          TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_LOADSTATUS as string,",
				"          WHSLOADLINE_EXT_HASH_KEY as string,",
				"          WHS_EXT_RANK as long,",
				"          LAST_MODIFIEDDATETIME as timestamp,",
				"          HK_JOB_RUN_ID as string,",
				"          HK_SOURCE_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> srcWhsLoadLine",
				"source(output(",
				"          HK_SOURCE_NAME as string,",
				"          HK_JOB_RUN_ID as string,",
				"          HK_CREATED_TIMESTAMP as timestamp,",
				"          HK_WAREHOUSE_ID as string,",
				"          HK_WHSLOADLINE_EXT_HASH_KEY as string,",
				"          DATAAREAID as string,",
				"          LOADID as string,",
				"          ORDERNUM as string,",
				"          ITEMID as string,",
				"          MCSRNAEVENTLINE_ACTUALPIECES as decimal(25,16),",
				"          MCSRNAEVENTLINE_UNITVOLUME as decimal(25,16),",
				"          MCSRNAROUTESTOP_STOPCOUNT as decimal(38,0),",
				"          MCSRNAROUTESTOP_MILEAGE as decimal(25,16),",
				"          MCSRNAEVENTHEADER_ACTUALMILES as decimal(25,16),",
				"          MCSRNAEVENTHEADER_ACTUALSTOPCOUNT as decimal(38,0),",
				"          MCSTRAILERS_CUBICVOLUME as decimal(38,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> srcWhsLoadLineExt",
				"srcWhsLoadLine, srcWhsLoadLineExt join(srcWhsLoadLine@DATAAREAID == srcWhsLoadLineExt@DATAAREAID",
				"     && srcWhsLoadLine@LOADID == srcWhsLoadLineExt@LOADID",
				"     && srcWhsLoadLine@ORDERNUM == srcWhsLoadLineExt@ORDERNUM",
				"     && srcWhsLoadLine@ITEMID == srcWhsLoadLineExt@ITEMID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinLoadLineExt",
				"joinLoadLineExt derive(ACTIVE_FLAG = iif((srcWhsLoadLine@DATAAREAID == srcWhsLoadLineExt@DATAAREAID && \r",
				"srcWhsLoadLine@LOADID == srcWhsLoadLineExt@LOADID && \r",
				"srcWhsLoadLine@ORDERNUM == srcWhsLoadLineExt@ORDERNUM &&\r",
				" srcWhsLoadLine@ITEMID == srcWhsLoadLineExt@ITEMID &&\r",
				" WHSLOADLINE_EXT_HASH_KEY == HK_WHSLOADLINE_EXT_HASH_KEY && \r",
				" LAST_MODIFIEDDATETIME < toTimestamp($df_prev_max_timestamp)) , 'R',\r",
				"iif((srcWhsLoadLine@DATAAREAID == srcWhsLoadLineExt@DATAAREAID &&\r",
				"srcWhsLoadLine@LOADID == srcWhsLoadLineExt@LOADID && \r",
				"srcWhsLoadLine@ORDERNUM == srcWhsLoadLineExt@ORDERNUM &&\r",
				" srcWhsLoadLine@ITEMID == srcWhsLoadLineExt@ITEMID &&\r",
				" WHSLOADLINE_EXT_HASH_KEY == HK_WHSLOADLINE_EXT_HASH_KEY && LAST_MODIFIEDDATETIME >= toTimestamp($df_prev_max_timestamp))\r",
				" || (srcWhsLoadLine@DATAAREAID == srcWhsLoadLineExt@DATAAREAID && \r",
				" srcWhsLoadLine@LOADID == srcWhsLoadLineExt@LOADID && \r",
				"srcWhsLoadLine@ORDERNUM == srcWhsLoadLineExt@ORDERNUM &&\r",
				" srcWhsLoadLine@ITEMID == srcWhsLoadLineExt@ITEMID &&\r",
				" WHSLOADLINE_EXT_HASH_KEY != HK_WHSLOADLINE_EXT_HASH_KEY), 'U',\r",
				"'I'))) ~> setActiveFlag",
				"setActiveFlag filter(WHS_EXT_RANK == 1 && ACTIVE_FLAG != 'R') ~> pullDistinctEntries",
				"pullDistinctEntries alterRow(updateIf(ACTIVE_FLAG=='U'),",
				"     insertIf(ACTIVE_FLAG=='I')) ~> upsertWhsLoadLineExt",
				"setActiveFlag filter(ACTIVE_FLAG != 'R') ~> filterWhsLoadline",
				"upsertWhsLoadLineExt sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['DATAAREAID','LOADID','ORDERNUM','ITEMID'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          DATAAREAID = srcWhsLoadLine@DATAAREAID,",
				"          LOADID = srcWhsLoadLine@LOADID,",
				"          ORDERNUM = srcWhsLoadLine@ORDERNUM,",
				"          ITEMID = srcWhsLoadLine@ITEMID,",
				"          MCSRNAEVENTLINE_ACTUALPIECES = srcWhsLoadLine@MCSRNAEVENTLINE_ACTUALPIECES,",
				"          MCSRNAEVENTLINE_UNITVOLUME = srcWhsLoadLine@MCSRNAEVENTLINE_UNITVOLUME,",
				"          MCSRNAROUTESTOP_STOPCOUNT = srcWhsLoadLine@MCSRNAROUTESTOP_STOPCOUNT,",
				"          MCSRNAROUTESTOP_MILEAGE = srcWhsLoadLine@MCSRNAROUTESTOP_MILEAGE,",
				"          MCSRNAEVENTHEADER_ACTUALMILES = srcWhsLoadLine@MCSRNAEVENTHEADER_ACTUALMILES,",
				"          MCSRNAEVENTHEADER_ACTUALSTOPCOUNT = srcWhsLoadLine@MCSRNAEVENTHEADER_ACTUALSTOPCOUNT,",
				"          MCSTRAILERS_CUBICVOLUME = srcWhsLoadLine@MCSTRAILERS_CUBICVOLUME,",
				"          HK_WHSLOADLINE_EXT_HASH_KEY = WHSLOADLINE_EXT_HASH_KEY,",
				"          HK_SOURCE_NAME = srcWhsLoadLine@HK_SOURCE_NAME,",
				"          HK_JOB_RUN_ID = srcWhsLoadLine@HK_JOB_RUN_ID",
				"     )) ~> whsLoadLineExt",
				"filterWhsLoadline sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          DATAAREAID = srcWhsLoadLine@DATAAREAID,",
				"          LOADID = srcWhsLoadLine@LOADID,",
				"          ORDERNUM = srcWhsLoadLine@ORDERNUM,",
				"          ITEMID = srcWhsLoadLine@ITEMID,",
				"          QTY,",
				"          MODIFIEDDATETIME,",
				"          MCSRNAEVENTLINE_ACTUALPIECES = srcWhsLoadLine@MCSRNAEVENTLINE_ACTUALPIECES,",
				"          MCSRNAEVENTLINE_UNITVOLUME = srcWhsLoadLine@MCSRNAEVENTLINE_UNITVOLUME,",
				"          MCSRNAEVENTLINE_INVENTTABLE_MODIFIEDDATETIME,",
				"          MCSRNAEVENTLINE_SALESLINE_MODIFIEDDATETIME,",
				"          INVENTTABLE_UNITVOLUME,",
				"          INVENTTABLE_MODIFIEDDATETIME,",
				"          SALESTABLE_SALESID,",
				"          SALESTABLE_CUSTACCOUNT,",
				"          SALESTABLE_DELIVERYPOSTALADDRESS,",
				"          SALESTABLE_SHIPPINGDATECONFIRMED,",
				"          SALESTABLE_MODIFIEDDATETIME,",
				"          WHSLOADTABLE_EBCCARRIERID,",
				"          WHSLOADTABLE_INVENTSITEID,",
				"          WHSLOADTABLE_EBCTRAILERID,",
				"          WHSLOADTABLE_LOADSCHEDSHIPUTCDATETIME,",
				"          WHSLOADTABLE_LOADSTATUS,",
				"          WHSLOADTABLE_MODIFIEDDATETIME,",
				"          WHSLOADTABLE_ENTITYKEY,",
				"          MCSROADNETSTAGINGTABLE_MODIFIEDDATETIME,",
				"          MCSRNAROUTESTOP_STOPCOUNT = srcWhsLoadLine@MCSRNAROUTESTOP_STOPCOUNT,",
				"          MCSRNAROUTESTOP_MILEAGE = srcWhsLoadLine@MCSRNAROUTESTOP_MILEAGE,",
				"          MCSRNAEVENTHEADER_ACTUALMILES = srcWhsLoadLine@MCSRNAEVENTHEADER_ACTUALMILES,",
				"          MCSRNAEVENTHEADER_ACTUALSTOPCOUNT = srcWhsLoadLine@MCSRNAEVENTHEADER_ACTUALSTOPCOUNT,",
				"          MCSTRAILERS_CUBICVOLUME = srcWhsLoadLine@MCSTRAILERS_CUBICVOLUME,",
				"          TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_SALESTYPE,",
				"          TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_LOADSTATUS,",
				"          LATEST_MODIFIEDDATETIME = LAST_MODIFIEDDATETIME,",
				"          HK_JOB_RUN_ID = srcWhsLoadLine@HK_JOB_RUN_ID,",
				"          HK_SOURCE_NAME = srcWhsLoadLine@HK_SOURCE_NAME",
				"     )) ~> whsLoadLine"
			]
		}
	}
}