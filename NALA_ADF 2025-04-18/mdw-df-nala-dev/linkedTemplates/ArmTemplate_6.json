{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mdw-df-nala-dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/df_load_fact_cost_of_goods_sold')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_excel",
								"type": "DatasetReference"
							},
							"name": "srcCogsItemCosts"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference"
							},
							"name": "cogs"
						}
					],
					"transformations": [
						{
							"name": "deriveColumns"
						},
						{
							"name": "reDeriveColumns"
						},
						{
							"name": "maxLastestModifieddatetime"
						},
						{
							"name": "pullLatestRecords"
						}
					],
					"scriptLines": [
						"parameters{",
						"     df_last_mod_tmstmp_cogs_itemcosts as string,",
						"     df_pipeline_job_id as string,",
						"     df_prev_max_timestamp as string,",
						"     df_src_nm as string",
						"}",
						"source(output(",
						"          ItemNumber as string,",
						"          Configuration as string,",
						"          EffectiveDate as date,",
						"          StandardCost as double,",
						"          Material as double,",
						"          Labor as double,",
						"          VariableOverhead as double,",
						"          FixedOverhead as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> srcCogsItemCosts",
						"srcCogsItemCosts derive(LATEST_MODIFIEDDATETIME = toTimestamp($df_last_mod_tmstmp_cogs_itemcosts, 'yyyy-MM-dd\\'T\\'HH:mm'),",
						"          ORACLEITEM = 'No Mapped Oracle Item',",
						"          DATAAREAID = '740',",
						"          HK_JOB_RUN_ID = $df_pipeline_job_id,",
						"          HK_SOURCE_NAME = $df_src_nm) ~> deriveColumns",
						"deriveColumns select(mapColumn(",
						"          LATEST_MODIFIEDDATETIME,",
						"          ORACLEITEM,",
						"          DATAAREAID,",
						"          HK_JOB_RUN_ID,",
						"          each(match(true()),",
						"               upper($$) = $$)",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> reDeriveColumns",
						"reDeriveColumns window(LATEST_MODIFIEDDATETIME = max(LATEST_MODIFIEDDATETIME)) ~> maxLastestModifieddatetime",
						"maxLastestModifieddatetime filter(LATEST_MODIFIEDDATETIME > toTimestamp($df_prev_max_timestamp, 'yyyy-MM-dd HH:mm:ss')) ~> pullLatestRecords",
						"pullLatestRecords sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          LATEST_MODIFIEDDATETIME,",
						"          ORACLEITEM,",
						"          DATAAREAID,",
						"          HK_JOB_RUN_ID,",
						"          ITEMNUMBER,",
						"          CONFIGURATION,",
						"          EFFECTIVEDATE,",
						"          STANDARDCOST,",
						"          MATERIAL,",
						"          LABOR,",
						"          VARIABLEOVERHEAD,",
						"          FIXEDOVERHEAD,",
						"          HK_SOURCE_NAME",
						"     )) ~> cogs"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_load_fact_cust_transactions')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_parquet",
								"type": "DatasetReference"
							},
							"name": "srcCustomerParquet"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference"
							},
							"name": "custtrans"
						}
					],
					"transformations": [
						{
							"name": "formatDateTimeColumns"
						}
					],
					"scriptLines": [
						"parameters{",
						"     p_src_code as string",
						"}",
						"source(output(",
						"          RECID as long,",
						"          CASHDISCCODE as string,",
						"          CURRENCYCODE as string,",
						"          ACCOUNTNUM as string,",
						"          ORDERACCOUNT as string,",
						"          POSTINGPROFILE as string,",
						"          DEFAULTDIMENSION as long,",
						"          DELIVERYMODE as string,",
						"          DATAAREAID as string,",
						"          PAYMMODE as string,",
						"          REASONREFRECID as integer,",
						"          APPROVER as integer,",
						"          PAYMMETHOD as integer,",
						"          DXCMBINTEGRATIONTRANSTYPE as integer,",
						"          TRANSTYPE as integer,",
						"          APPROVED as integer,",
						"          CANCELLEDPAYMENT as integer,",
						"          PREPAYMENT as integer,",
						"          CORRECT as integer,",
						"          INVOICE as string,",
						"          CLOSED as string,",
						"          DOCUMENTDATE as string,",
						"          DUEDATE as string,",
						"          LASTSETTLEDATE as string,",
						"          TRANSDATE as string,",
						"          DOCUMENTNUM as string,",
						"          LASTSETTLEVOUCHER as string,",
						"          PAYMREFERENCE as string,",
						"          EBCPURCHORDERFORMNUM as string,",
						"          TXT as string,",
						"          VOUCHER as string,",
						"          AMOUNTCUR as string,",
						"          AMOUNTMST as string,",
						"          SETTLEAMOUNTCUR as string,",
						"          SETTLEAMOUNTMST as string,",
						"          MODIFIEDDATETIME as string,",
						"          TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_NETCURRENT as string,",
						"          TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE as string,",
						"          TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_LEDGERTRANSTYPE as string,",
						"          CUSTINVOICEJOUR_SALESID as string,",
						"          CUSTINVOICEJOUR_MODIFIEDDATETIME as string,",
						"          LEDGERJOURNALTRANS_JOURNALNUM as string,",
						"          LEDGERJOURNALTRANS_MODIFIEDDATETIME as string,",
						"          LATEST_MODIFIEDDATETIME as timestamp,",
						"          HK_SOURCE_NAME as string,",
						"          HK_JOB_RUN_ID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> srcCustomerParquet",
						"srcCustomerParquet derive(D_CLOSED = iif($p_src_code == '1', iifNull(toDate(CLOSED, 'MMM dd yyyy HH:mm'), toDate(CLOSED, 'MMM dd yyyy')), toDate(CLOSED)),",
						"          D_DOCUMENTDATE = iif($p_src_code == '1', iifNull(toDate(DOCUMENTDATE, 'MMM dd yyyy HH:mm'), toDate(DOCUMENTDATE, 'MMM dd yyyy')), toDate(DOCUMENTDATE)),",
						"          D_DUEDATE = iif($p_src_code == '1', iifNull(toDate(DUEDATE, 'MMM dd yyyy HH:mm'), toDate(DUEDATE, 'MMM dd yyyy')), toDate(DUEDATE)),",
						"          D_LASTSETTLEDATE = iif($p_src_code == '1', iifNull(toDate(LASTSETTLEDATE, 'MMM dd yyyy HH:mm'), toDate(LASTSETTLEDATE, 'MMM dd yyyy')), toDate(LASTSETTLEDATE)),",
						"          D_MODIFIEDDATETIME = iif($p_src_code == '1', toTimestamp(MODIFIEDDATETIME, 'MMM d yyyy hh:mm'), toTimestamp(MODIFIEDDATETIME)),",
						"          D_CUSTINVOICEJOUR_MODIFIEDDATETIME = iif($p_src_code == '1', toTimestamp(CUSTINVOICEJOUR_MODIFIEDDATETIME, 'MMM d yyyy hh:mm'), toTimestamp(CUSTINVOICEJOUR_MODIFIEDDATETIME)),",
						"          D_LEDGERJOURNALTRANS_MODIFIEDDATETIME = iif($p_src_code == '1', toTimestamp(LEDGERJOURNALTRANS_MODIFIEDDATETIME, 'MMM d yyyy hh:mm'), toTimestamp(LEDGERJOURNALTRANS_MODIFIEDDATETIME)),",
						"          D_TRANSDATE = iif($p_src_code == '1', iifNull(toDate(TRANSDATE, 'MMM dd yyyy HH:mm'), toDate(TRANSDATE, 'MMM dd yyyy')), toDate(TRANSDATE))) ~> formatDateTimeColumns",
						"formatDateTimeColumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          RECID,",
						"          CASHDISCCODE,",
						"          CURRENCYCODE,",
						"          ACCOUNTNUM,",
						"          ORDERACCOUNT,",
						"          POSTINGPROFILE,",
						"          DEFAULTDIMENSION,",
						"          DELIVERYMODE,",
						"          DATAAREAID,",
						"          PAYMMODE,",
						"          REASONREFRECID,",
						"          APPROVER,",
						"          PAYMMETHOD,",
						"          DXCMBINTEGRATIONTRANSTYPE,",
						"          TRANSTYPE,",
						"          APPROVED,",
						"          CANCELLEDPAYMENT,",
						"          PREPAYMENT,",
						"          CORRECT,",
						"          INVOICE,",
						"          CLOSED = D_CLOSED,",
						"          DOCUMENTDATE = D_DOCUMENTDATE,",
						"          DUEDATE = D_DUEDATE,",
						"          LASTSETTLEDATE = D_LASTSETTLEDATE,",
						"          TRANSDATE = D_TRANSDATE,",
						"          DOCUMENTNUM,",
						"          LASTSETTLEVOUCHER,",
						"          PAYMREFERENCE,",
						"          EBCPURCHORDERFORMNUM,",
						"          TXT,",
						"          VOUCHER,",
						"          AMOUNTCUR,",
						"          AMOUNTMST,",
						"          SETTLEAMOUNTCUR,",
						"          SETTLEAMOUNTMST,",
						"          MODIFIEDDATETIME = D_MODIFIEDDATETIME,",
						"          TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_NETCURRENT,",
						"          TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE,",
						"          TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_LEDGERTRANSTYPE,",
						"          CUSTINVOICEJOUR_SALESID,",
						"          CUSTINVOICEJOUR_MODIFIEDDATETIME = D_CUSTINVOICEJOUR_MODIFIEDDATETIME,",
						"          LEDGERJOURNALTRANS_JOURNALNUM,",
						"          LEDGERJOURNALTRANS_MODIFIEDDATETIME = D_LEDGERJOURNALTRANS_MODIFIEDDATETIME,",
						"          LATEST_MODIFIEDDATETIME,",
						"          HK_SOURCE_NAME,",
						"          HK_JOB_RUN_ID",
						"     )) ~> custtrans"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_load_fact_ledger_journal_transactions')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_parquet",
								"type": "DatasetReference"
							},
							"name": "SrcLedgerJournalTrans"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference"
							},
							"name": "FactLedgerJournalTransaction"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          HK_SOURCE_NAME as string,",
						"          HK_JOB_RUN_ID as string,",
						"          RECID as long,",
						"          CURRENCYCODE as string,",
						"          DEFAULTDIMENSION as long,",
						"          OFFSETDEFAULTDIMENSION as long,",
						"          LEDGERDIMENSION as long,",
						"          OFFSETLEDGERDIMENSION as long,",
						"          TAXCODE as string,",
						"          TAXGROUP as string,",
						"          APPROVER as long,",
						"          ACCOUNTTYPE as integer,",
						"          DXCMBINTEGRATIONTRANSTYPE as integer,",
						"          OFFSETACCOUNTTYPE as integer,",
						"          TRANSACTIONTYPE as integer,",
						"          APPROVED as integer,",
						"          REVERSEENTRY as integer,",
						"          DOCUMENTDATE as timestamp,",
						"          TRANSDATE as timestamp,",
						"          DOCUMENTNUM as string,",
						"          INVOICE as string,",
						"          JOURNALNUM as string,",
						"          TXT as string,",
						"          VOUCHER as string,",
						"          DATAAREAID as string,",
						"          LINENUM as decimal(32,16),",
						"          QTY as decimal(32,16),",
						"          AMOUNTCURCREDIT as decimal(32,16),",
						"          AMOUNTCURDEBIT as decimal(32,16),",
						"          MODIFIEDDATETIME as timestamp,",
						"          DIMENSIONATTRIBUTEVALUECOMBINATION_MAINACCOUNT as long,",
						"          DIMENSIONATTRIBUTEVALUECOMBINATION_MODIFIEDDATETIME as timestamp,",
						"          DEFAULTDIMENSION_MAIN_ACCOUNT as string,",
						"          DEFAULTDIMENSION_I_CUSTOMER as string,",
						"          DEFAULTDIMENSION_MODIFIEDDATETIME as timestamp,",
						"          TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_ACCOUNTTYPE as string,",
						"          TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE as string,",
						"          TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_OFFSETACCOUNTTYPE as string,",
						"          TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_TRANSACTIONTYPE as string,",
						"          LEDGERJOURNALTABLE_CREATEDDATETIME as timestamp,",
						"          LEDGERJOURNALTABLE_REVERSEDATE as timestamp,",
						"          LEDGERJOURNALTABLE_CREATEDBY as string,",
						"          LEDGERJOURNALTABLE_NAME as string,",
						"          LEDGERJOURNALTABLE_JOURNALNAME as string,",
						"          LEDGERJOURNALTABLE_POSTED as integer,",
						"          LEDGERJOURNALTABLE_MODIFIEDDATETIME as timestamp,",
						"          LATEST_MODIFIEDDATETIME as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> SrcLedgerJournalTrans",
						"SrcLedgerJournalTrans sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          HK_SOURCE_NAME,",
						"          HK_JOB_RUN_ID,",
						"          RECID,",
						"          CURRENCYCODE,",
						"          DEFAULTDIMENSION,",
						"          OFFSETDEFAULTDIMENSION,",
						"          LEDGERDIMENSION,",
						"          OFFSETLEDGERDIMENSION,",
						"          TAXCODE,",
						"          TAXGROUP,",
						"          APPROVER,",
						"          ACCOUNTTYPE,",
						"          DXCMBINTEGRATIONTRANSTYPE,",
						"          OFFSETACCOUNTTYPE,",
						"          TRANSACTIONTYPE,",
						"          APPROVED,",
						"          REVERSEENTRY,",
						"          DOCUMENTDATE,",
						"          TRANSDATE,",
						"          DOCUMENTNUM,",
						"          INVOICE,",
						"          JOURNALNUM,",
						"          TXT,",
						"          VOUCHER,",
						"          DATAAREAID,",
						"          LINENUM,",
						"          QTY,",
						"          AMOUNTCURCREDIT,",
						"          AMOUNTCURDEBIT,",
						"          MODIFIEDDATETIME,",
						"          DIMENSIONATTRIBUTEVALUECOMBINATION_MAINACCOUNT,",
						"          DIMENSIONATTRIBUTEVALUECOMBINATION_MODIFIEDDATETIME,",
						"          DEFAULTDIMENSION_MAIN_ACCOUNT,",
						"          DEFAULTDIMENSION_I_CUSTOMER,",
						"          DEFAULTDIMENSION_MODIFIEDDATETIME,",
						"          TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_ACCOUNTTYPE,",
						"          TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE,",
						"          TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_OFFSETACCOUNTTYPE,",
						"          TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_TRANSACTIONTYPE,",
						"          LEDGERJOURNALTABLE_CREATEDDATETIME,",
						"          LEDGERJOURNALTABLE_REVERSEDATE,",
						"          LEDGERJOURNALTABLE_CREATEDBY,",
						"          LEDGERJOURNALTABLE_NAME,",
						"          LEDGERJOURNALTABLE_JOURNALNAME,",
						"          LEDGERJOURNALTABLE_POSTED,",
						"          LEDGERJOURNALTABLE_MODIFIEDDATETIME,",
						"          LATEST_MODIFIEDDATETIME",
						"     )) ~> FactLedgerJournalTransaction"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_load_fact_sales_invoice')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_parquet",
								"type": "DatasetReference"
							},
							"name": "SrcCustInvoiceTrans"
						},
						{
							"dataset": {
								"referenceName": "ds_excel",
								"type": "DatasetReference"
							},
							"name": "CogsItemCosts"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference"
							},
							"name": "CustInvoiceTrans"
						},
						{
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference"
							},
							"name": "sinkCUSTINVOICETRANSCOGSXLSX",
							"description": "Export data to ds_snowflake raw table CUSTINVOICETRANS_COGSXLS"
						}
					],
					"transformations": [
						{
							"name": "RederiveLastMod"
						},
						{
							"name": "RederiveColumns"
						},
						{
							"name": "CogsItemCostsColumns"
						},
						{
							"name": "CogsItemCostsColumns2"
						},
						{
							"name": "RenamingCogsItemCostsColumns2"
						},
						{
							"name": "SelectCogsItemCostsColumns"
						},
						{
							"name": "JoinCogsItemCosts"
						},
						{
							"name": "selCOGSXLSX"
						},
						{
							"name": "derColCOGSXLSX"
						}
					],
					"scriptLines": [
						"parameters{",
						"     df_last_mod_tmstmp_cogsitemcosts as string,",
						"     df_hk_job_run_id as string,",
						"     df_hk_source_name as string",
						"}",
						"source(output(",
						"          RECID as long,",
						"          DATAAREAID as string,",
						"          ITEMID as string,",
						"          CURRENCYCODE as string,",
						"          DEFAULTDIMENSION as long,",
						"          TRANSACTIONCODE as string,",
						"          INVENTDIMID as string,",
						"          DELIVERYPOSTALADDRESS as long,",
						"          MCRDLVMODE as string,",
						"          SALESCATEGORY as long,",
						"          RETURNDISPOSITIONCODEID as string,",
						"          SALESGROUP as string,",
						"          ORIGSALESID as string,",
						"          TAXGROUP as string,",
						"          TAXITEMGROUP as string,",
						"          SALESUNIT as string,",
						"          DLVDATE as timestamp,",
						"          INVOICEDATE as timestamp,",
						"          RETURNARRIVALDATE as timestamp,",
						"          RETURNCLOSEDDATE as timestamp,",
						"          INVENTTRANSID as string,",
						"          INVOICEID as string,",
						"          LINENUM as decimal(38,16),",
						"          INVENTQTY as decimal(38,6),",
						"          QTY as decimal(38,6),",
						"          QTYPHYSICAL as decimal(38,6),",
						"          PRICEUNIT as decimal(38,12),",
						"          SALESPRICE as decimal(38,6),",
						"          COMMISSAMOUNTCUR as decimal(38,6),",
						"          COMMISSAMOUNTMST as decimal(38,6),",
						"          LINEAMOUNT as decimal(38,6),",
						"          LINEAMOUNTMST as decimal(38,6),",
						"          TAXAMOUNT as decimal(38,6),",
						"          TAXAMOUNTMST as decimal(38,6),",
						"          DISCPERCENT as decimal(38,6),",
						"          DISCAMOUNT as decimal(38,6),",
						"          LINEDISC as decimal(38,6),",
						"          LINEPERCENT as decimal(38,6),",
						"          SUMLINEDISC as decimal(38,6),",
						"          SUMLINEDISCMST as decimal(38,6),",
						"          MODIFIEDDATETIME as timestamp,",
						"          DEFAULTDIMENSION_BUSINESS_UNIT as string,",
						"          DEFAULTDIMENSION_MODIFIEDDATETIME as timestamp,",
						"          SALESTABLE_SMMCAMPAIGNID as string,",
						"          SALESTABLE_COMMISSIONGROUP as string,",
						"          SALESTABLE_INVOICEACCOUNT as string,",
						"          SALESTABLE_MARKUPGROUP as string,",
						"          SALESTABLE_RETURNREASONCODEID as string,",
						"          SALESTABLE_LINEDISC as string,",
						"          SALESTABLE_SALESPOOLID as string,",
						"          SALESTABLE_PRICEGROUPID as string,",
						"          SALESTABLE_WORKERSALESRESPONSIBLE as long,",
						"          SALESTABLE_ATAGENT as long,",
						"          SALESTABLE_SHIPCARRIERBLINDSHIPMENT as long,",
						"          SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT as long,",
						"          SALESTABLE_ORDERBLOCKED as long,",
						"          SALESTABLE_MCRORDERSTOPPED as long,",
						"          SALESTABLE_SHIPCARRIERFUELSURCHARGE as long,",
						"          SALESTABLE_INVENTSITEID as string,",
						"          SALESTABLE_MODIFIEDDATETIME as timestamp,",
						"          CUSTINVOICEJOUR_ORDERACCOUNT as string,",
						"          CUSTINVOICEJOUR_CUSTGROUP as string,",
						"          CUSTINVOICEJOUR_INVOICEPOSTALADDRESS as long,",
						"          CUSTINVOICEJOUR_DLVTERM as string,",
						"          CUSTINVOICEJOUR_PAYMENT as string,",
						"          CUSTINVOICEJOUR_RETURNREASONCODEID as string,",
						"          CUSTINVOICEJOUR_SALESORIGINID as string,",
						"          CUSTINVOICEJOUR_INVENTLOCATIONID as string,",
						"          CUSTINVOICEJOUR_WORKERSALESTAKER as long,",
						"          CUSTINVOICEJOUR_DOCUMENTDATE as timestamp,",
						"          CUSTINVOICEJOUR_DUEDATE as timestamp,",
						"          CUSTINVOICEJOUR_LEDGERVOUCHER as string,",
						"          CUSTINVOICEJOUR_PURCHASEORDER as string,",
						"          CUSTINVOICEJOUR_SALESTYPE as string,",
						"          CUSTINVOICEJOUR_JOURNALNUM as string,",
						"          CUSTINVOICEJOUR_JOURNALNAME as string,",
						"          CUSTINVOICEJOUR_MODIFIEDDATETIME as timestamp,",
						"          INVENTDIM1_CONFIGID as string,",
						"          INVENTDIM1_INVENTSITEID as string,",
						"          INVENTDIM1_MODIFIEDDATETIME as timestamp,",
						"          INVENTDIMCOMBINATION_PDMSTATUS as string,",
						"          INVENTDIMCOMBINATION_MODIFIEDDATETIME as timestamp,",
						"          SALESLINE1_TPX_RETURNREASONCODEID as string,",
						"          SALESLINE1_LINEDISC as decimal(38,6),",
						"          SALESLINE1_LINEPERCENT as decimal(38,6),",
						"          SALESLINE1_COMPLETE as long,",
						"          SALESLINE1_ORDERBLOCKED as long,",
						"          SALESLINE1_SCRAP as long,",
						"          SALESLINE1_STOCKEDPRODUCT as long,",
						"          SALESLINE1_TPX_MANUFACTUREDATE as timestamp,",
						"          SALESLINE1_TPX_RELATEDORDERDATE as timestamp,",
						"          SALESLINE1_CREATEDDATETIME as timestamp,",
						"          SALESLINE1_TPX_PRODUCTIONTIME as long,",
						"          SALESLINE1_TPX_REGISTRYNUMBER as string,",
						"          SALESLINE1_MODIFIEDDATETIME as timestamp,",
						"          TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS as string,",
						"          TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER as string,",
						"          TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER as string,",
						"          TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE as string,",
						"          TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE as string,",
						"          TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE as string,",
						"          TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE as string,",
						"          TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE as string,",
						"          TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE as string,",
						"          MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT as long,",
						"          SALESLINE2_CREATEDDATETIME as timestamp,",
						"          SALESLINE2_INVENTDIMID as string,",
						"          SALESLINE2_SALESID as string,",
						"          SALESLINE2_MODIFIEDDATETIME as timestamp,",
						"          DATAAREA1_TIMEZONE as long,",
						"          TIMEZONEINFO1_TIMEBIAS as long,",
						"          DATAAREA3_TIMEZONE as long,",
						"          TIMEZONEINFO3_TIMEBIAS as long,",
						"          INVENTITEMPRICE1_STANDARDCOST as decimal(10,0),",
						"          INVENTITEMPRICE1_MODIFIEDDATETIME as timestamp,",
						"          INVENTITEMPRICE2_STANDARDCOST as decimal(10,0),",
						"          INVENTITEMPRICE2_MODIFIEDDATETIME as timestamp,",
						"          INVENTITEMPRICE3_STANDARDCOST as decimal(10,0),",
						"          INVENTITEMPRICE3_MODIFIEDDATETIME as timestamp,",
						"          INVENTITEMPRICE4_STANDARDCOST as decimal(10,0),",
						"          INVENTITEMPRICE4_MODIFIEDDATETIME as timestamp,",
						"          INVENTITEMPRICE6_STANDARDCOST as decimal(10,0),",
						"          INVENTITEMPRICE6_MODIFIEDDATETIME as timestamp,",
						"          INVENTITEMPRICE7_STANDARDCOST as decimal(10,0),",
						"          INVENTITEMPRICE7_MODIFIEDDATETIME as timestamp,",
						"          INVENTITEMPRICE8_STANDARDCOST as decimal(10,0),",
						"          INVENTITEMPRICE8_MODIFIEDDATETIME as timestamp,",
						"          INVENTITEMPRICE9_STANDARDCOST as decimal(10,0),",
						"          INVENTITEMPRICE9_MODIFIEDDATETIME as timestamp,",
						"          MCRSALESLINEPRICEOVERRIDE1_RECID as long,",
						"          MCRSALESLINEPRICEOVERRIDE2_REASONCODE as string,",
						"          TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION as string,",
						"          PDMSTATUS_NAME as string,",
						"          LATEST_MODIFIEDDATETIME as timestamp,",
						"          HK_JOB_RUN_ID as string,",
						"          HK_SOURCE_NAME as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> SrcCustInvoiceTrans",
						"source(output(",
						"          ItemNumber as string,",
						"          Configuration as string,",
						"          EffectiveDate as date,",
						"          StandardCost as double,",
						"          Material as double,",
						"          Labor as double,",
						"          VariableOverhead as double,",
						"          FixedOverhead as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> CogsItemCosts",
						"RederiveColumns derive(LATEST_MODIFIEDDATETIME_NEW = greatest(LATEST_MODIFIEDDATETIME,COGS_ITEMCOSTS1_MODIFIEDDATETIME, COGS_ITEMCOSTS2_MODIFIEDDATETIME)) ~> RederiveLastMod",
						"JoinCogsItemCosts derive(COGS_ITEMCOSTS1_STANDARDCOST = StandardCost,",
						"          COGS_ITEMCOSTS1_FIXEDOVERHEAD = FixedOverhead,",
						"          COGS_ITEMCOSTS1_LABOR = Labor,",
						"          COGS_ITEMCOSTS1_MATERIAL = Material,",
						"          COGS_ITEMCOSTS1_VARIABLE_OVERHEAD = VariableOverhead,",
						"          COGS_ITEMCOSTS1_MODIFIEDDATETIME = toTimestamp($df_last_mod_tmstmp_cogsitemcosts,'yyyy-MM-dd\\'T\\'HH:mm'),",
						"          COGS_ITEMCOSTS2_STANDARDCOST = StandardCost_2,",
						"          COGS_ITEMCOSTS2_FIXEDOVERHEAD = FixedOverhead_2,",
						"          COGS_ITEMCOSTS2_LABOR = Labor_2,",
						"          COGS_ITEMCOSTS2_MATERIAL = Material_2,",
						"          COGS_ITEMCOSTS2_VARIABLE_OVERHEAD = VariableOverhead_2,",
						"          COGS_ITEMCOSTS2_MODIFIEDDATETIME = toTimestamp($df_last_mod_tmstmp_cogsitemcosts,'yyyy-MM-dd\\'T\\'HH:mm')) ~> RederiveColumns",
						"SrcCustInvoiceTrans, CogsItemCosts lookup(ITEMID == toString(ItemNumber)",
						"     && INVENTDIM1_CONFIGID == Configuration",
						"     && toDate(INVOICEDATE) >= EffectiveDate,",
						"     multiple: false,",
						"     pickup: 'first',",
						"     desc(EffectiveDate, true),",
						"     broadcast: 'right')~> CogsItemCostsColumns",
						"SrcCustInvoiceTrans, CogsItemCosts lookup(ITEMID == toString(ItemNumber)",
						"     && INVENTDIM1_CONFIGID == Configuration,",
						"     multiple: false,",
						"     pickup: 'first',",
						"     desc(EffectiveDate, true),",
						"     broadcast: 'auto')~> CogsItemCostsColumns2",
						"CogsItemCostsColumns2 select(mapColumn(",
						"          RECID,",
						"          DATAAREAID,",
						"          ITEMID,",
						"          CURRENCYCODE,",
						"          DEFAULTDIMENSION,",
						"          TRANSACTIONCODE,",
						"          INVENTDIMID,",
						"          DELIVERYPOSTALADDRESS,",
						"          MCRDLVMODE,",
						"          SALESCATEGORY,",
						"          RETURNDISPOSITIONCODEID,",
						"          SALESGROUP,",
						"          ORIGSALESID,",
						"          TAXGROUP,",
						"          TAXITEMGROUP,",
						"          SALESUNIT,",
						"          DLVDATE,",
						"          INVOICEDATE,",
						"          RETURNARRIVALDATE,",
						"          RETURNCLOSEDDATE,",
						"          INVENTTRANSID,",
						"          INVOICEID,",
						"          LINENUM,",
						"          INVENTQTY,",
						"          QTY,",
						"          QTYPHYSICAL,",
						"          PRICEUNIT,",
						"          SALESPRICE,",
						"          COMMISSAMOUNTCUR,",
						"          COMMISSAMOUNTMST,",
						"          LINEAMOUNT,",
						"          LINEAMOUNTMST,",
						"          TAXAMOUNT,",
						"          TAXAMOUNTMST,",
						"          DISCPERCENT,",
						"          DISCAMOUNT,",
						"          LINEDISC,",
						"          LINEPERCENT,",
						"          SUMLINEDISC,",
						"          SUMLINEDISCMST,",
						"          MODIFIEDDATETIME,",
						"          DEFAULTDIMENSION_BUSINESS_UNIT,",
						"          DEFAULTDIMENSION_MODIFIEDDATETIME,",
						"          SALESTABLE_SMMCAMPAIGNID,",
						"          SALESTABLE_COMMISSIONGROUP,",
						"          SALESTABLE_INVOICEACCOUNT,",
						"          SALESTABLE_MARKUPGROUP,",
						"          SALESTABLE_RETURNREASONCODEID,",
						"          SALESTABLE_LINEDISC,",
						"          SALESTABLE_SALESPOOLID,",
						"          SALESTABLE_PRICEGROUPID,",
						"          SALESTABLE_WORKERSALESRESPONSIBLE,",
						"          SALESTABLE_ATAGENT,",
						"          SALESTABLE_SHIPCARRIERBLINDSHIPMENT,",
						"          SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT,",
						"          SALESTABLE_ORDERBLOCKED,",
						"          SALESTABLE_MCRORDERSTOPPED,",
						"          SALESTABLE_SHIPCARRIERFUELSURCHARGE,",
						"          SALESTABLE_INVENTSITEID,",
						"          SALESTABLE_MODIFIEDDATETIME,",
						"          CUSTINVOICEJOUR_ORDERACCOUNT,",
						"          CUSTINVOICEJOUR_CUSTGROUP,",
						"          CUSTINVOICEJOUR_INVOICEPOSTALADDRESS,",
						"          CUSTINVOICEJOUR_DLVTERM,",
						"          CUSTINVOICEJOUR_PAYMENT,",
						"          CUSTINVOICEJOUR_RETURNREASONCODEID,",
						"          CUSTINVOICEJOUR_SALESORIGINID,",
						"          CUSTINVOICEJOUR_INVENTLOCATIONID,",
						"          CUSTINVOICEJOUR_WORKERSALESTAKER,",
						"          CUSTINVOICEJOUR_DOCUMENTDATE,",
						"          CUSTINVOICEJOUR_DUEDATE,",
						"          CUSTINVOICEJOUR_LEDGERVOUCHER,",
						"          CUSTINVOICEJOUR_PURCHASEORDER,",
						"          CUSTINVOICEJOUR_SALESTYPE,",
						"          CUSTINVOICEJOUR_JOURNALNUM,",
						"          CUSTINVOICEJOUR_JOURNALNAME,",
						"          CUSTINVOICEJOUR_MODIFIEDDATETIME,",
						"          INVENTDIM1_CONFIGID,",
						"          INVENTDIM1_INVENTSITEID,",
						"          INVENTDIM1_MODIFIEDDATETIME,",
						"          INVENTDIMCOMBINATION_PDMSTATUS,",
						"          INVENTDIMCOMBINATION_MODIFIEDDATETIME,",
						"          SALESLINE1_TPX_RETURNREASONCODEID,",
						"          SALESLINE1_LINEDISC,",
						"          SALESLINE1_LINEPERCENT,",
						"          SALESLINE1_COMPLETE,",
						"          SALESLINE1_ORDERBLOCKED,",
						"          SALESLINE1_SCRAP,",
						"          SALESLINE1_STOCKEDPRODUCT,",
						"          SALESLINE1_TPX_MANUFACTUREDATE,",
						"          SALESLINE1_TPX_RELATEDORDERDATE,",
						"          SALESLINE1_CREATEDDATETIME,",
						"          SALESLINE1_TPX_PRODUCTIONTIME,",
						"          SALESLINE1_TPX_REGISTRYNUMBER,",
						"          SALESLINE1_MODIFIEDDATETIME,",
						"          TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS,",
						"          TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER,",
						"          TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER,",
						"          TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE,",
						"          TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE,",
						"          TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE,",
						"          TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE,",
						"          TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE,",
						"          TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE,",
						"          MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT,",
						"          SALESLINE2_CREATEDDATETIME,",
						"          SALESLINE2_INVENTDIMID,",
						"          SALESLINE2_SALESID,",
						"          SALESLINE2_MODIFIEDDATETIME,",
						"          DATAAREA1_TIMEZONE,",
						"          TIMEZONEINFO1_TIMEBIAS,",
						"          DATAAREA3_TIMEZONE,",
						"          TIMEZONEINFO3_TIMEBIAS,",
						"          INVENTITEMPRICE1_STANDARDCOST,",
						"          INVENTITEMPRICE1_MODIFIEDDATETIME,",
						"          INVENTITEMPRICE2_STANDARDCOST,",
						"          INVENTITEMPRICE2_MODIFIEDDATETIME,",
						"          INVENTITEMPRICE3_STANDARDCOST,",
						"          INVENTITEMPRICE3_MODIFIEDDATETIME,",
						"          INVENTITEMPRICE4_STANDARDCOST,",
						"          INVENTITEMPRICE4_MODIFIEDDATETIME,",
						"          INVENTITEMPRICE6_STANDARDCOST,",
						"          INVENTITEMPRICE6_MODIFIEDDATETIME,",
						"          INVENTITEMPRICE7_STANDARDCOST,",
						"          INVENTITEMPRICE7_MODIFIEDDATETIME,",
						"          INVENTITEMPRICE8_STANDARDCOST,",
						"          INVENTITEMPRICE8_MODIFIEDDATETIME,",
						"          INVENTITEMPRICE9_STANDARDCOST,",
						"          INVENTITEMPRICE9_MODIFIEDDATETIME,",
						"          MCRSALESLINEPRICEOVERRIDE1_RECID,",
						"          MCRSALESLINEPRICEOVERRIDE2_REASONCODE,",
						"          TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION,",
						"          LATEST_MODIFIEDDATETIME,",
						"          HK_JOB_RUN_ID,",
						"          HK_SOURCE_NAME,",
						"          ItemNumber_2 = ItemNumber,",
						"          Configuration_2 = Configuration,",
						"          EffectiveDate_2 = EffectiveDate,",
						"          StandardCost_2 = StandardCost,",
						"          Material_2 = Material,",
						"          Labor_2 = Labor,",
						"          VariableOverhead_2 = VariableOverhead,",
						"          FixedOverhead_2 = FixedOverhead,",
						"          PDMSTATUS_NAME",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenamingCogsItemCostsColumns2",
						"CogsItemCostsColumns select(mapColumn(",
						"          RECID,",
						"          DATAAREAID,",
						"          ITEMID,",
						"          ItemNumber,",
						"          Configuration,",
						"          EffectiveDate,",
						"          StandardCost,",
						"          Material,",
						"          Labor,",
						"          VariableOverhead,",
						"          FixedOverhead",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectCogsItemCostsColumns",
						"RenamingCogsItemCostsColumns2, SelectCogsItemCostsColumns join(RenamingCogsItemCostsColumns2@RECID == SelectCogsItemCostsColumns@RECID",
						"     && RenamingCogsItemCostsColumns2@DATAAREAID == SelectCogsItemCostsColumns@DATAAREAID",
						"     && RenamingCogsItemCostsColumns2@ITEMID == SelectCogsItemCostsColumns@ITEMID,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinCogsItemCosts",
						"CogsItemCosts select(mapColumn(",
						"          ItemNumber,",
						"          Configuration,",
						"          EffectiveDate,",
						"          StandardCost",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selCOGSXLSX",
						"selCOGSXLSX derive(LATEST_MODIFIEDDATETIME = toTimestamp($df_last_mod_tmstmp_cogsitemcosts,'yyyy-MM-dd\\'T\\'HH:mm'),",
						"          HK_JOB_RUN_ID = $df_hk_job_run_id,",
						"          HK_SOURCE_NAME = $df_hk_source_name) ~> derColCOGSXLSX",
						"RederiveLastMod sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          RECID,",
						"          DATAAREAID,",
						"          ITEMID,",
						"          CURRENCYCODE,",
						"          DEFAULTDIMENSION,",
						"          TRANSACTIONCODE,",
						"          INVENTDIMID,",
						"          DELIVERYPOSTALADDRESS,",
						"          MCRDLVMODE,",
						"          SALESCATEGORY,",
						"          RETURNDISPOSITIONCODEID,",
						"          SALESGROUP,",
						"          ORIGSALESID,",
						"          TAXGROUP,",
						"          TAXITEMGROUP,",
						"          SALESUNIT,",
						"          DLVDATE,",
						"          INVOICEDATE,",
						"          RETURNARRIVALDATE,",
						"          RETURNCLOSEDDATE,",
						"          INVENTTRANSID,",
						"          INVOICEID,",
						"          LINENUM,",
						"          INVENTQTY,",
						"          QTY,",
						"          QTYPHYSICAL,",
						"          PRICEUNIT,",
						"          SALESPRICE,",
						"          COMMISSAMOUNTCUR,",
						"          COMMISSAMOUNTMST,",
						"          LINEAMOUNT,",
						"          LINEAMOUNTMST,",
						"          TAXAMOUNT,",
						"          TAXAMOUNTMST,",
						"          DISCPERCENT,",
						"          DISCAMOUNT,",
						"          LINEDISC,",
						"          LINEPERCENT,",
						"          SUMLINEDISC,",
						"          SUMLINEDISCMST,",
						"          MODIFIEDDATETIME,",
						"          DEFAULTDIMENSION_BUSINESS_UNIT,",
						"          DEFAULTDIMENSION_MODIFIEDDATETIME,",
						"          SALESTABLE_SMMCAMPAIGNID,",
						"          SALESTABLE_COMMISSIONGROUP,",
						"          SALESTABLE_INVOICEACCOUNT,",
						"          SALESTABLE_MARKUPGROUP,",
						"          SALESTABLE_RETURNREASONCODEID,",
						"          SALESTABLE_LINEDISC,",
						"          SALESTABLE_SALESPOOLID,",
						"          SALESTABLE_PRICEGROUPID,",
						"          SALESTABLE_WORKERSALESRESPONSIBLE,",
						"          SALESTABLE_ATAGENT,",
						"          SALESTABLE_SHIPCARRIERBLINDSHIPMENT,",
						"          SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT,",
						"          SALESTABLE_ORDERBLOCKED,",
						"          SALESTABLE_MCRORDERSTOPPED,",
						"          SALESTABLE_SHIPCARRIERFUELSURCHARGE,",
						"          SALESTABLE_INVENTSITEID,",
						"          SALESTABLE_MODIFIEDDATETIME,",
						"          CUSTINVOICEJOUR_ORDERACCOUNT,",
						"          CUSTINVOICEJOUR_CUSTGROUP,",
						"          CUSTINVOICEJOUR_INVOICEPOSTALADDRESS,",
						"          CUSTINVOICEJOUR_DLVTERM,",
						"          CUSTINVOICEJOUR_PAYMENT,",
						"          CUSTINVOICEJOUR_RETURNREASONCODEID,",
						"          CUSTINVOICEJOUR_SALESORIGINID,",
						"          CUSTINVOICEJOUR_INVENTLOCATIONID,",
						"          CUSTINVOICEJOUR_WORKERSALESTAKER,",
						"          CUSTINVOICEJOUR_DOCUMENTDATE,",
						"          CUSTINVOICEJOUR_DUEDATE,",
						"          CUSTINVOICEJOUR_LEDGERVOUCHER,",
						"          CUSTINVOICEJOUR_PURCHASEORDER,",
						"          CUSTINVOICEJOUR_SALESTYPE,",
						"          CUSTINVOICEJOUR_JOURNALNUM,",
						"          CUSTINVOICEJOUR_JOURNALNAME,",
						"          CUSTINVOICEJOUR_MODIFIEDDATETIME,",
						"          INVENTDIM1_CONFIGID,",
						"          INVENTDIM1_INVENTSITEID,",
						"          INVENTDIM1_MODIFIEDDATETIME,",
						"          INVENTDIMCOMBINATION_PDMSTATUS,",
						"          INVENTDIMCOMBINATION_MODIFIEDDATETIME,",
						"          SALESLINE1_TPX_RETURNREASONCODEID,",
						"          SALESLINE1_LINEDISC,",
						"          SALESLINE1_LINEPERCENT,",
						"          SALESLINE1_COMPLETE,",
						"          SALESLINE1_ORDERBLOCKED,",
						"          SALESLINE1_SCRAP,",
						"          SALESLINE1_STOCKEDPRODUCT,",
						"          SALESLINE1_TPX_MANUFACTUREDATE,",
						"          SALESLINE1_TPX_RELATEDORDERDATE,",
						"          SALESLINE1_CREATEDDATETIME,",
						"          SALESLINE1_TPX_PRODUCTIONTIME,",
						"          SALESLINE1_TPX_REGISTRYNUMBER,",
						"          SALESLINE1_MODIFIEDDATETIME,",
						"          TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS,",
						"          TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER,",
						"          TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER,",
						"          TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE,",
						"          TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE,",
						"          TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE,",
						"          TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE,",
						"          TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE,",
						"          TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE,",
						"          MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT,",
						"          SALESLINE2_CREATEDDATETIME,",
						"          SALESLINE2_INVENTDIMID,",
						"          SALESLINE2_SALESID,",
						"          SALESLINE2_MODIFIEDDATETIME,",
						"          DATAAREA1_TIMEZONE,",
						"          TIMEZONEINFO1_TIMEBIAS,",
						"          DATAAREA3_TIMEZONE,",
						"          TIMEZONEINFO3_TIMEBIAS,",
						"          INVENTITEMPRICE1_STANDARDCOST,",
						"          INVENTITEMPRICE1_MODIFIEDDATETIME,",
						"          INVENTITEMPRICE2_STANDARDCOST,",
						"          INVENTITEMPRICE2_MODIFIEDDATETIME,",
						"          INVENTITEMPRICE3_STANDARDCOST,",
						"          INVENTITEMPRICE3_MODIFIEDDATETIME,",
						"          INVENTITEMPRICE4_STANDARDCOST,",
						"          INVENTITEMPRICE4_MODIFIEDDATETIME,",
						"          INVENTITEMPRICE6_STANDARDCOST,",
						"          INVENTITEMPRICE6_MODIFIEDDATETIME,",
						"          INVENTITEMPRICE7_STANDARDCOST,",
						"          INVENTITEMPRICE7_MODIFIEDDATETIME,",
						"          INVENTITEMPRICE8_STANDARDCOST,",
						"          INVENTITEMPRICE8_MODIFIEDDATETIME,",
						"          INVENTITEMPRICE9_STANDARDCOST,",
						"          INVENTITEMPRICE9_MODIFIEDDATETIME,",
						"          MCRSALESLINEPRICEOVERRIDE1_RECID,",
						"          MCRSALESLINEPRICEOVERRIDE2_REASONCODE,",
						"          TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION,",
						"          HK_JOB_RUN_ID,",
						"          HK_SOURCE_NAME,",
						"          COGS_ITEMCOSTS1_STANDARDCOST,",
						"          COGS_ITEMCOSTS1_FIXEDOVERHEAD,",
						"          COGS_ITEMCOSTS1_LABOR,",
						"          COGS_ITEMCOSTS1_MATERIAL,",
						"          COGS_ITEMCOSTS1_VARIABLE_OVERHEAD,",
						"          COGS_ITEMCOSTS1_MODIFIEDDATETIME,",
						"          COGS_ITEMCOSTS2_STANDARDCOST,",
						"          COGS_ITEMCOSTS2_FIXEDOVERHEAD,",
						"          COGS_ITEMCOSTS2_LABOR,",
						"          COGS_ITEMCOSTS2_MATERIAL,",
						"          COGS_ITEMCOSTS2_VARIABLE_OVERHEAD,",
						"          COGS_ITEMCOSTS2_MODIFIEDDATETIME,",
						"          LATEST_MODIFIEDDATETIME = LATEST_MODIFIEDDATETIME_NEW,",
						"          PDMSTATUS_NAME",
						"     )) ~> CustInvoiceTrans",
						"derColCOGSXLSX sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          ITEMNUMBER = ItemNumber,",
						"          CONFIGURATION = Configuration,",
						"          EFFECTIVEDATE = EffectiveDate,",
						"          STANDARDCOST = StandardCost,",
						"          HK_JOB_RUN_ID,",
						"          HK_SOURCE_NAME,",
						"          LATEST_MODIFIEDDATETIME",
						"     )) ~> sinkCUSTINVOICETRANSCOGSXLSX"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_load_fact_sales_order')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_parquet",
								"type": "DatasetReference"
							},
							"name": "salesLineParquet"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference"
							},
							"name": "salesLine"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          DATAAREAID as string,",
						"          INVENTTRANSID as string,",
						"          RECID as long,",
						"          CUSTACCOUNT as string,",
						"          CURRENCYCODE as string,",
						"          CUSTGROUP as string,",
						"          DEFAULTDIMENSION as long,",
						"          TRANSACTIONCODE as string,",
						"          INVENTDIMID as string,",
						"          ITEMID as string,",
						"          MCSALTITEMNO as string,",
						"          TPX_RETURNREASONCODEID as string,",
						"          DELIVERYPOSTALADDRESS as long,",
						"          SHIPCARRIERPOSTALADDRESS as long,",
						"          DLVMODE as string,",
						"          DLVTERM as string,",
						"          SALESCATEGORY as long,",
						"          RETURNDISPOSITIONCODEID as string,",
						"          SALESGROUP as string,",
						"          SALESID as string,",
						"          SHIPCARRIERID as string,",
						"          TAXGROUP as string,",
						"          TAXITEMGROUP as string,",
						"          MCSATHENACATALOG as string,",
						"          SALESUNIT as string,",
						"          CREATEDBY as string,",
						"          LINEDISC as decimal(38,6),",
						"          LINEPERCENT as decimal(38,6),",
						"          RETURNSTATUS as long,",
						"          SALESSTATUS as long,",
						"          SHIPCARRIERDLVTYPE as long,",
						"          DELIVERYTYPE as long,",
						"          COMPLETE as long,",
						"          ORDERBLOCKED as long,",
						"          SCRAP as long,",
						"          STOCKEDPRODUCT as long,",
						"          CONFIRMEDDLV as timestamp,",
						"          RECEIPTDATECONFIRMED as timestamp,",
						"          SHIPPINGDATECONFIRMED as timestamp,",
						"          TPX_MANUFACTUREDATE as timestamp,",
						"          TPX_RELATEDORDERDATE as timestamp,",
						"          RECEIPTDATEREQUESTED as timestamp,",
						"          RETURNARRIVALDATE as timestamp,",
						"          RETURNCLOSEDDATE as timestamp,",
						"          RETURNDEADLINE as timestamp,",
						"          CREATEDDATETIME as timestamp,",
						"          SHIPPINGDATEREQUESTED as timestamp,",
						"          LINENUM as decimal(38,16),",
						"          TPX_PRODUCTIONTIME as long,",
						"          TPX_REGISTRYNUMBER as string,",
						"          INVENTTRANSIDRETURN as string,",
						"          EXPECTEDRETQTY as decimal(38,6),",
						"          QTYORDERED as decimal(38,6),",
						"          SALESQTY as decimal(38,6),",
						"          SALESPRICE as decimal(38,6),",
						"          PRICEUNIT as decimal(38,12),",
						"          COSTPRICE as decimal(38,6),",
						"          LINEAMOUNT as decimal(38,6),",
						"          REMAINSALESPHYSICAL as decimal(38,6),",
						"          REMAINSALESFINANCIAL as decimal(38,6),",
						"          TPX_KITITEMID as string,",
						"          MCSTAGID as string,",
						"          TPXORIGRECEIPTDATECONFIRMED as timestamp,",
						"          MCSALTSERIALNO as string,",
						"          MULTILNDISC as string,",
						"          MULTILNPERCENT as string,",
						"          MODIFIEDDATETIME as timestamp,",
						"          DEFAULTDIMENSION_BUSINESS_UNIT as string,",
						"          DEFAULTDIMENSION_MODIFIEDDATETIME as timestamp,",
						"          SALESTABLE_SMMCAMPAIGNID as string,",
						"          SALESTABLE_COMMISSIONGROUP as string,",
						"          SALESTABLE_INVOICEACCOUNT as string,",
						"          SALESTABLE_MARKUPGROUP as string,",
						"          SALESTABLE_PAYMMODE as string,",
						"          SALESTABLE_PAYMENT as string,",
						"          SALESTABLE_RETURNREASONCODEID as string,",
						"          SALESTABLE_LINEDISC as string,",
						"          SALESTABLE_SALESORIGINID as string,",
						"          SALESTABLE_SALESPOOLID as string,",
						"          SALESTABLE_PRICEGROUPID as string,",
						"          SALESTABLE_INVENTSITEID as string,",
						"          SALESTABLE_MODIFIEDBY as string,",
						"          SALESTABLE_CREATEDBY as string,",
						"          SALESTABLE_INVENTLOCATIONID as string,",
						"          SALESTABLE_WORKERSALESRESPONSIBLE as long,",
						"          SALESTABLE_WORKERSALESTAKER as long,",
						"          SALESTABLE_DEADLINE as timestamp,",
						"          SALESTABLE_DELIVERYDATE as timestamp,",
						"          SALESTABLE_DOCUMENTSTATUS as long,",
						"          SALESTABLE_RETURNSTATUS as long,",
						"          SALESTABLE_SALESSTATUS as long,",
						"          SALESTABLE_SALESTYPE as long,",
						"          SALESTABLE_ATAGENT as long,",
						"          SALESTABLE_SHIPCARRIERBLINDSHIPMENT as long,",
						"          SALESTABLE_SHIPCARRIEREXPEDITEDSHIPMENT as long,",
						"          SALESTABLE_ORDERBLOCKED as long,",
						"          SALESTABLE_MCRORDERSTOPPED as long,",
						"          SALESTABLE_SHIPCARRIERFUELSURCHARGE as long,",
						"          SALESTABLE_CREATEDDATETIME as timestamp,",
						"          SALESTABLE_RECEIPTDATEREQUESTED as timestamp,",
						"          SALESTABLE_SHIPPINGDATEREQUESTED as timestamp,",
						"          SALESTABLE_RECEIPTDATECONFIRMED as timestamp,",
						"          SALESTABLE_NDS_SUSALLOWCHG as long,",
						"          SALESTABLE_SHIPCARRIERRESIDENTIAL as long,",
						"          SALESTABLE_TPXORIGRECEIPTDATECONFIRMED as timestamp,",
						"          SALESTABLE_MODIFIEDDATETIME as timestamp,",
						"          INVENTDIM1_CONFIGID as string,",
						"          INVENTDIM1_MODIFIEDDATETIME as timestamp,",
						"          INVENTDIMCOMBINATION_PDMSTATUS as string,",
						"          INVENTDIMCOMBINATION_MODIFIEDDATETIME as timestamp,",
						"          TAMTRADEPROMOTION_PROMOTIONID as string,",
						"          TAMTRADEPROMOTION_MODIFIEDDATETIME as timestamp,",
						"          MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT as long,",
						"          CUSTPACKINGSLIPTRANS_FIRSTLARGEITEMSHIPDATE as timestamp,",
						"          CUSTPACKINGSLIPTRANS_FIRSTLARGEITEMSHIPPEDQTY as decimal(38,6),",
						"          CUSTPACKINGSLIPTRANS_SHIPPEDQTY as decimal(38,6),",
						"          CUSTPACKINGSLIPTRANS_MODIFIEDDATETIME as timestamp,",
						"          SALESLINE2_CREATEDDATETIME as timestamp,",
						"          SALESLINE2_INVENTDIMID as string,",
						"          SALESLINE2_SALESID as string,",
						"          SALESLINE2_MODIFIEDDATETIME as timestamp,",
						"          INVENTDIM2_TIMEZONE as long,",
						"          INVENTDIM2_INVENTDIM_MODIFIEDDATETIME as timestamp,",
						"          INVENTDIM2_INVENTSITE_MODIFIEDDATETIME as timestamp,",
						"          DATAAREA1_TIMEZONE as long,",
						"          TIMEZONEINFO1_TIMEBIAS as long,",
						"          DATAAREA2_TIMEZONE as long,",
						"          TIMEZONEINFO2_TIMEBIAS as long,",
						"          DATAAREA3_TIMEZONE as long,",
						"          TIMEZONEINFO3_TIMEBIAS as long,",
						"          MCRSALESLINEPRICEOVERRIDE1_RECID as long,",
						"          MCRSALESLINEPRICEOVERRIDE2_REASONCODE as string,",
						"          TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION as string,",
						"          TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS as string,",
						"          TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER as string,",
						"          TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER as string,",
						"          TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE as string,",
						"          TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE as string,",
						"          TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE as string,",
						"          TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE as string,",
						"          TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE as string,",
						"          RETAILTRANSACTIONDISCOUNTTRANS_DISCOUNTORIGINTYPE as long,",
						"          TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_RETAILTRANSACTIONTYPE as string,",
						"          RETAILPERIODICDISCOUNT_NAME as string,",
						"          RETAILPERIODICDISCOUNT_MODIFIEDDATETIME as timestamp,",
						"          RETAILTRANSACTIONTABLE_DISCAMOUNT as decimal(38,6),",
						"          RETAILTRANSACTIONTABLE_MODIFIEDDATETIME as timestamp,",
						"          RETAILDISCOUNTCODE_DISCOUNTCODE as string,",
						"          RETAILPERIODICDISCOUNTLINE_DISCPCT as decimal(38,6),",
						"          TIMEXTENDERENUMTABLE10_ENUMVALUELABEL_DISCOUNTORIGINTYPE as string,",
						"          TIMEXTENDERENUMTABLE11_ENUMVALUELABEL_PERIODICDISCOUNTTYPE as string,",
						"          PDMSTATUS_NAME as string,",
						"          PRODDATE as timestamp,",
						"          LATEST_MODIFIEDDATETIME as timestamp,",
						"          HK_SOURCE_NAME as string,",
						"          HK_JOB_RUN_ID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> salesLineParquet",
						"salesLineParquet sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          DATAAREAID,",
						"          INVENTTRANSID,",
						"          RECID,",
						"          CUSTACCOUNT,",
						"          CURRENCYCODE,",
						"          CUSTGROUP,",
						"          DEFAULTDIMENSION,",
						"          TRANSACTIONCODE,",
						"          INVENTDIMID,",
						"          ITEMID,",
						"          MCSALTITEMNO,",
						"          TPX_RETURNREASONCODEID,",
						"          DELIVERYPOSTALADDRESS,",
						"          SHIPCARRIERPOSTALADDRESS,",
						"          DLVMODE,",
						"          DLVTERM,",
						"          SALESCATEGORY,",
						"          RETURNDISPOSITIONCODEID,",
						"          SALESGROUP,",
						"          SALESID,",
						"          SHIPCARRIERID,",
						"          TAXGROUP,",
						"          TAXITEMGROUP,",
						"          MCSATHENACATALOG,",
						"          SALESUNIT,",
						"          CREATEDBY,",
						"          LINEDISC,",
						"          LINEPERCENT,",
						"          RETURNSTATUS,",
						"          SALESSTATUS,",
						"          SHIPCARRIERDLVTYPE,",
						"          DELIVERYTYPE,",
						"          COMPLETE,",
						"          ORDERBLOCKED,",
						"          SCRAP,",
						"          STOCKEDPRODUCT,",
						"          CONFIRMEDDLV,",
						"          RECEIPTDATECONFIRMED,",
						"          SHIPPINGDATECONFIRMED,",
						"          TPX_MANUFACTUREDATE,",
						"          TPX_RELATEDORDERDATE,",
						"          RECEIPTDATEREQUESTED,",
						"          RETURNARRIVALDATE,",
						"          RETURNCLOSEDDATE,",
						"          RETURNDEADLINE,",
						"          CREATEDDATETIME,",
						"          SHIPPINGDATEREQUESTED,",
						"          LINENUM,",
						"          TPX_PRODUCTIONTIME,",
						"          TPX_REGISTRYNUMBER,",
						"          INVENTTRANSIDRETURN,",
						"          EXPECTEDRETQTY,",
						"          QTYORDERED,",
						"          SALESQTY,",
						"          SALESPRICE,",
						"          PRICEUNIT,",
						"          COSTPRICE,",
						"          LINEAMOUNT,",
						"          REMAINSALESPHYSICAL,",
						"          REMAINSALESFINANCIAL,",
						"          TPX_KITITEMID,",
						"          MCSTAGID,",
						"          TPXORIGRECEIPTDATECONFIRMED,",
						"          MCSALTSERIALNO,",
						"          MULTILNDISC,",
						"          MULTILNPERCENT,",
						"          MODIFIEDDATETIME,",
						"          DEFAULTDIMENSION_BUSINESS_UNIT,",
						"          DEFAULTDIMENSION_MODIFIEDDATETIME,",
						"          SALESTABLE_SMMCAMPAIGNID,",
						"          SALESTABLE_COMMISSIONGROUP,",
						"          SALESTABLE_INVOICEACCOUNT,",
						"          SALESTABLE_MARKUPGROUP,",
						"          SALESTABLE_PAYMMODE,",
						"          SALESTABLE_PAYMENT,",
						"          SALESTABLE_RETURNREASONCODEID,",
						"          SALESTABLE_LINEDISC,",
						"          SALESTABLE_SALESORIGINID,",
						"          SALESTABLE_SALESPOOLID,",
						"          SALESTABLE_PRICEGROUPID,",
						"          SALESTABLE_INVENTSITEID,",
						"          SALESTABLE_MODIFIEDBY,",
						"          SALESTABLE_CREATEDBY,",
						"          SALESTABLE_INVENTLOCATIONID,",
						"          SALESTABLE_WORKERSALESRESPONSIBLE,",
						"          SALESTABLE_WORKERSALESTAKER,",
						"          SALESTABLE_DEADLINE,",
						"          SALESTABLE_DELIVERYDATE,",
						"          SALESTABLE_DOCUMENTSTATUS,",
						"          SALESTABLE_RETURNSTATUS,",
						"          SALESTABLE_SALESSTATUS,",
						"          SALESTABLE_SALESTYPE,",
						"          SALESTABLE_ATAGENT,",
						"          SALESTABLE_SHIPCARRIERBLINDSHIPMENT,",
						"          SALESTABLE_SHIPCARRIEREXPEDITEDSHIPMENT,",
						"          SALESTABLE_ORDERBLOCKED,",
						"          SALESTABLE_MCRORDERSTOPPED,",
						"          SALESTABLE_SHIPCARRIERFUELSURCHARGE,",
						"          SALESTABLE_CREATEDDATETIME,",
						"          SALESTABLE_RECEIPTDATEREQUESTED,",
						"          SALESTABLE_SHIPPINGDATEREQUESTED,",
						"          SALESTABLE_RECEIPTDATECONFIRMED,",
						"          SALESTABLE_NDS_SUSALLOWCHG,",
						"          SALESTABLE_SHIPCARRIERRESIDENTIAL,",
						"          SALESTABLE_TPXORIGRECEIPTDATECONFIRMED,",
						"          SALESTABLE_MODIFIEDDATETIME,",
						"          INVENTDIM1_CONFIGID,",
						"          INVENTDIM1_MODIFIEDDATETIME,",
						"          INVENTDIMCOMBINATION_PDMSTATUS,",
						"          INVENTDIMCOMBINATION_MODIFIEDDATETIME,",
						"          TAMTRADEPROMOTION_PROMOTIONID,",
						"          TAMTRADEPROMOTION_MODIFIEDDATETIME,",
						"          MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT,",
						"          CUSTPACKINGSLIPTRANS_FIRSTLARGEITEMSHIPDATE,",
						"          CUSTPACKINGSLIPTRANS_FIRSTLARGEITEMSHIPPEDQTY,",
						"          CUSTPACKINGSLIPTRANS_SHIPPEDQTY,",
						"          CUSTPACKINGSLIPTRANS_MODIFIEDDATETIME,",
						"          SALESLINE2_CREATEDDATETIME,",
						"          SALESLINE2_INVENTDIMID,",
						"          SALESLINE2_SALESID,",
						"          SALESLINE2_MODIFIEDDATETIME,",
						"          INVENTDIM2_TIMEZONE,",
						"          INVENTDIM2_INVENTDIM_MODIFIEDDATETIME,",
						"          INVENTDIM2_INVENTSITE_MODIFIEDDATETIME,",
						"          DATAAREA1_TIMEZONE,",
						"          TIMEZONEINFO1_TIMEBIAS,",
						"          DATAAREA2_TIMEZONE,",
						"          TIMEZONEINFO2_TIMEBIAS,",
						"          DATAAREA3_TIMEZONE,",
						"          TIMEZONEINFO3_TIMEBIAS,",
						"          MCRSALESLINEPRICEOVERRIDE1_RECID,",
						"          MCRSALESLINEPRICEOVERRIDE2_REASONCODE,",
						"          TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION,",
						"          TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS,",
						"          TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER,",
						"          TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER,",
						"          TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE,",
						"          TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE,",
						"          TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE,",
						"          TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE,",
						"          TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE,",
						"          RETAILTRANSACTIONDISCOUNTTRANS_DISCOUNTORIGINTYPE,",
						"          TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_RETAILTRANSACTIONTYPE,",
						"          RETAILPERIODICDISCOUNT_NAME,",
						"          RETAILPERIODICDISCOUNT_MODIFIEDDATETIME,",
						"          RETAILTRANSACTIONTABLE_DISCAMOUNT,",
						"          RETAILTRANSACTIONTABLE_MODIFIEDDATETIME,",
						"          RETAILDISCOUNTCODE_DISCOUNTCODE,",
						"          RETAILPERIODICDISCOUNTLINE_DISCPCT,",
						"          TIMEXTENDERENUMTABLE10_ENUMVALUELABEL_DISCOUNTORIGINTYPE,",
						"          TIMEXTENDERENUMTABLE11_ENUMVALUELABEL_PERIODICDISCOUNTTYPE,",
						"          LATEST_MODIFIEDDATETIME,",
						"          HK_SOURCE_NAME,",
						"          HK_JOB_RUN_ID,",
						"          PDMSTATUS_NAME,",
						"          PRODDATE",
						"     )) ~> salesLine"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_load_fact_tax_transactions')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_parquet",
								"type": "DatasetReference"
							},
							"name": "SrcTaxTrans"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference"
							},
							"name": "TaxTrans"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          HK_SOURCE_NAME as string,",
						"          HK_JOB_RUN_ID as string,",
						"          RECID as long,",
						"          CURRENCYCODE as string,",
						"          TAXCODE as string,",
						"          TAXGROUP as string,",
						"          TRANSDATE as timestamp,",
						"          INVENTTRANSID as string,",
						"          INVOICEID as string,",
						"          JOURNALNUM as string,",
						"          DATAAREAID as string,",
						"          VOUCHER as string,",
						"          TAXAMOUNT as string,",
						"          TAXAMOUNTCUR as string,",
						"          TAXBASEAMOUNT as string,",
						"          TAXBASEAMOUNTCUR as string,",
						"          LATEST_MODIFIEDDATETIME as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> SrcTaxTrans",
						"SrcTaxTrans sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true) ~> TaxTrans"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_load_fact_transportation_load')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_parquet",
								"type": "DatasetReference"
							},
							"name": "srcWhsLoadLine"
						},
						{
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference"
							},
							"name": "srcWhsLoadLineExt"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference"
							},
							"name": "whsLoadLineExt"
						},
						{
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference"
							},
							"name": "whsLoadLine"
						}
					],
					"transformations": [
						{
							"name": "joinLoadLineExt"
						},
						{
							"name": "setActiveFlag"
						},
						{
							"name": "pullDistinctEntries"
						},
						{
							"name": "upsertWhsLoadLineExt"
						},
						{
							"name": "filterWhsLoadline"
						}
					],
					"scriptLines": [
						"parameters{",
						"     df_prev_max_timestamp as string",
						"}",
						"source(output(",
						"          DATAAREAID as string,",
						"          LOADID as string,",
						"          ORDERNUM as string,",
						"          ITEMID as string,",
						"          QTY as decimal(38,16),",
						"          MODIFIEDDATETIME as timestamp,",
						"          MCSRNAEVENTLINE_ACTUALPIECES as decimal(38,16),",
						"          MCSRNAEVENTLINE_UNITVOLUME as decimal(38,6),",
						"          MCSRNAEVENTLINE_INVENTTABLE_MODIFIEDDATETIME as timestamp,",
						"          MCSRNAEVENTLINE_SALESLINE_MODIFIEDDATETIME as timestamp,",
						"          INVENTTABLE_UNITVOLUME as decimal(32,16),",
						"          INVENTTABLE_MODIFIEDDATETIME as timestamp,",
						"          SALESTABLE_SALESID as string,",
						"          SALESTABLE_CUSTACCOUNT as string,",
						"          SALESTABLE_DELIVERYPOSTALADDRESS as long,",
						"          SALESTABLE_SHIPPINGDATECONFIRMED as timestamp,",
						"          SALESTABLE_MODIFIEDDATETIME as timestamp,",
						"          WHSLOADTABLE_EBCCARRIERID as string,",
						"          WHSLOADTABLE_INVENTSITEID as string,",
						"          WHSLOADTABLE_EBCTRAILERID as string,",
						"          WHSLOADTABLE_LOADSCHEDSHIPUTCDATETIME as timestamp,",
						"          WHSLOADTABLE_LOADSTATUS as integer,",
						"          WHSLOADTABLE_MODIFIEDDATETIME as timestamp,",
						"          WHSLOADTABLE_ENTITYKEY as integer,",
						"          MCSROADNETSTAGINGTABLE_MODIFIEDDATETIME as timestamp,",
						"          MCSRNAROUTESTOP_STOPCOUNT as integer,",
						"          MCSRNAROUTESTOP_MILEAGE as decimal(38,16),",
						"          MCSRNAEVENTHEADER_ACTUALMILES as decimal(38,16),",
						"          MCSRNAEVENTHEADER_ACTUALSTOPCOUNT as integer,",
						"          MCSTRAILERS_CUBICVOLUME as integer,",
						"          TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_SALESTYPE as string,",
						"          TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_LOADSTATUS as string,",
						"          WHSLOADLINE_EXT_HASH_KEY as string,",
						"          WHS_EXT_RANK as long,",
						"          LAST_MODIFIEDDATETIME as timestamp,",
						"          HK_JOB_RUN_ID as string,",
						"          HK_SOURCE_NAME as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> srcWhsLoadLine",
						"source(output(",
						"          HK_SOURCE_NAME as string,",
						"          HK_JOB_RUN_ID as string,",
						"          HK_CREATED_TIMESTAMP as timestamp,",
						"          HK_WAREHOUSE_ID as string,",
						"          HK_WHSLOADLINE_EXT_HASH_KEY as string,",
						"          DATAAREAID as string,",
						"          LOADID as string,",
						"          ORDERNUM as string,",
						"          ITEMID as string,",
						"          MCSRNAEVENTLINE_ACTUALPIECES as decimal(25,16),",
						"          MCSRNAEVENTLINE_UNITVOLUME as decimal(25,16),",
						"          MCSRNAROUTESTOP_STOPCOUNT as decimal(38,0),",
						"          MCSRNAROUTESTOP_MILEAGE as decimal(25,16),",
						"          MCSRNAEVENTHEADER_ACTUALMILES as decimal(25,16),",
						"          MCSRNAEVENTHEADER_ACTUALSTOPCOUNT as decimal(38,0),",
						"          MCSTRAILERS_CUBICVOLUME as decimal(38,0)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table') ~> srcWhsLoadLineExt",
						"srcWhsLoadLine, srcWhsLoadLineExt join(srcWhsLoadLine@DATAAREAID == srcWhsLoadLineExt@DATAAREAID",
						"     && srcWhsLoadLine@LOADID == srcWhsLoadLineExt@LOADID",
						"     && srcWhsLoadLine@ORDERNUM == srcWhsLoadLineExt@ORDERNUM",
						"     && srcWhsLoadLine@ITEMID == srcWhsLoadLineExt@ITEMID,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinLoadLineExt",
						"joinLoadLineExt derive(ACTIVE_FLAG = iif((srcWhsLoadLine@DATAAREAID == srcWhsLoadLineExt@DATAAREAID && \r",
						"srcWhsLoadLine@LOADID == srcWhsLoadLineExt@LOADID && \r",
						"srcWhsLoadLine@ORDERNUM == srcWhsLoadLineExt@ORDERNUM &&\r",
						" srcWhsLoadLine@ITEMID == srcWhsLoadLineExt@ITEMID &&\r",
						" WHSLOADLINE_EXT_HASH_KEY == HK_WHSLOADLINE_EXT_HASH_KEY && \r",
						" LAST_MODIFIEDDATETIME < toTimestamp($df_prev_max_timestamp)) , 'R',\r",
						"iif((srcWhsLoadLine@DATAAREAID == srcWhsLoadLineExt@DATAAREAID &&\r",
						"srcWhsLoadLine@LOADID == srcWhsLoadLineExt@LOADID && \r",
						"srcWhsLoadLine@ORDERNUM == srcWhsLoadLineExt@ORDERNUM &&\r",
						" srcWhsLoadLine@ITEMID == srcWhsLoadLineExt@ITEMID &&\r",
						" WHSLOADLINE_EXT_HASH_KEY == HK_WHSLOADLINE_EXT_HASH_KEY && LAST_MODIFIEDDATETIME >= toTimestamp($df_prev_max_timestamp))\r",
						" || (srcWhsLoadLine@DATAAREAID == srcWhsLoadLineExt@DATAAREAID && \r",
						" srcWhsLoadLine@LOADID == srcWhsLoadLineExt@LOADID && \r",
						"srcWhsLoadLine@ORDERNUM == srcWhsLoadLineExt@ORDERNUM &&\r",
						" srcWhsLoadLine@ITEMID == srcWhsLoadLineExt@ITEMID &&\r",
						" WHSLOADLINE_EXT_HASH_KEY != HK_WHSLOADLINE_EXT_HASH_KEY), 'U',\r",
						"'I'))) ~> setActiveFlag",
						"setActiveFlag filter(WHS_EXT_RANK == 1 && ACTIVE_FLAG != 'R') ~> pullDistinctEntries",
						"pullDistinctEntries alterRow(updateIf(ACTIVE_FLAG=='U'),",
						"     insertIf(ACTIVE_FLAG=='I')) ~> upsertWhsLoadLineExt",
						"setActiveFlag filter(ACTIVE_FLAG != 'R') ~> filterWhsLoadline",
						"upsertWhsLoadLineExt sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:true,",
						"     upsertable:false,",
						"     keys:['DATAAREAID','LOADID','ORDERNUM','ITEMID'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          DATAAREAID = srcWhsLoadLine@DATAAREAID,",
						"          LOADID = srcWhsLoadLine@LOADID,",
						"          ORDERNUM = srcWhsLoadLine@ORDERNUM,",
						"          ITEMID = srcWhsLoadLine@ITEMID,",
						"          MCSRNAEVENTLINE_ACTUALPIECES = srcWhsLoadLine@MCSRNAEVENTLINE_ACTUALPIECES,",
						"          MCSRNAEVENTLINE_UNITVOLUME = srcWhsLoadLine@MCSRNAEVENTLINE_UNITVOLUME,",
						"          MCSRNAROUTESTOP_STOPCOUNT = srcWhsLoadLine@MCSRNAROUTESTOP_STOPCOUNT,",
						"          MCSRNAROUTESTOP_MILEAGE = srcWhsLoadLine@MCSRNAROUTESTOP_MILEAGE,",
						"          MCSRNAEVENTHEADER_ACTUALMILES = srcWhsLoadLine@MCSRNAEVENTHEADER_ACTUALMILES,",
						"          MCSRNAEVENTHEADER_ACTUALSTOPCOUNT = srcWhsLoadLine@MCSRNAEVENTHEADER_ACTUALSTOPCOUNT,",
						"          MCSTRAILERS_CUBICVOLUME = srcWhsLoadLine@MCSTRAILERS_CUBICVOLUME,",
						"          HK_WHSLOADLINE_EXT_HASH_KEY = WHSLOADLINE_EXT_HASH_KEY,",
						"          HK_SOURCE_NAME = srcWhsLoadLine@HK_SOURCE_NAME,",
						"          HK_JOB_RUN_ID = srcWhsLoadLine@HK_JOB_RUN_ID",
						"     )) ~> whsLoadLineExt",
						"filterWhsLoadline sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          DATAAREAID = srcWhsLoadLine@DATAAREAID,",
						"          LOADID = srcWhsLoadLine@LOADID,",
						"          ORDERNUM = srcWhsLoadLine@ORDERNUM,",
						"          ITEMID = srcWhsLoadLine@ITEMID,",
						"          QTY,",
						"          MODIFIEDDATETIME,",
						"          MCSRNAEVENTLINE_ACTUALPIECES = srcWhsLoadLine@MCSRNAEVENTLINE_ACTUALPIECES,",
						"          MCSRNAEVENTLINE_UNITVOLUME = srcWhsLoadLine@MCSRNAEVENTLINE_UNITVOLUME,",
						"          MCSRNAEVENTLINE_INVENTTABLE_MODIFIEDDATETIME,",
						"          MCSRNAEVENTLINE_SALESLINE_MODIFIEDDATETIME,",
						"          INVENTTABLE_UNITVOLUME,",
						"          INVENTTABLE_MODIFIEDDATETIME,",
						"          SALESTABLE_SALESID,",
						"          SALESTABLE_CUSTACCOUNT,",
						"          SALESTABLE_DELIVERYPOSTALADDRESS,",
						"          SALESTABLE_SHIPPINGDATECONFIRMED,",
						"          SALESTABLE_MODIFIEDDATETIME,",
						"          WHSLOADTABLE_EBCCARRIERID,",
						"          WHSLOADTABLE_INVENTSITEID,",
						"          WHSLOADTABLE_EBCTRAILERID,",
						"          WHSLOADTABLE_LOADSCHEDSHIPUTCDATETIME,",
						"          WHSLOADTABLE_LOADSTATUS,",
						"          WHSLOADTABLE_MODIFIEDDATETIME,",
						"          WHSLOADTABLE_ENTITYKEY,",
						"          MCSROADNETSTAGINGTABLE_MODIFIEDDATETIME,",
						"          MCSRNAROUTESTOP_STOPCOUNT = srcWhsLoadLine@MCSRNAROUTESTOP_STOPCOUNT,",
						"          MCSRNAROUTESTOP_MILEAGE = srcWhsLoadLine@MCSRNAROUTESTOP_MILEAGE,",
						"          MCSRNAEVENTHEADER_ACTUALMILES = srcWhsLoadLine@MCSRNAEVENTHEADER_ACTUALMILES,",
						"          MCSRNAEVENTHEADER_ACTUALSTOPCOUNT = srcWhsLoadLine@MCSRNAEVENTHEADER_ACTUALSTOPCOUNT,",
						"          MCSTRAILERS_CUBICVOLUME = srcWhsLoadLine@MCSTRAILERS_CUBICVOLUME,",
						"          TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_SALESTYPE,",
						"          TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_LOADSTATUS,",
						"          LATEST_MODIFIEDDATETIME = LAST_MODIFIEDDATETIME,",
						"          HK_JOB_RUN_ID = srcWhsLoadLine@HK_JOB_RUN_ID,",
						"          HK_SOURCE_NAME = srcWhsLoadLine@HK_SOURCE_NAME",
						"     )) ~> whsLoadLine"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pp_ax_cogs_itemcost_to_fact_cost_of_goods_sold')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "raw_to_curate_sp_call",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "load_fact_cost_of_goods_sold",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_snowflake",
							"type": "LinkedServiceReference",
							"parameters": {
								"ls_DbName": {
									"value": "@pipeline().globalParameters.snow_auditDb",
									"type": "Expression"
								},
								"ls_Env": {
									"value": "@pipeline().globalParameters.environment",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('CALL ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb,'.CONTROL.SP_TASK_INITIALIZE(','''',pipeline().RunId,'''',',','''',pipeline().globalParameters.environment,'''',',','''',pipeline().parameters.p_tgt_curate_table_nm,'''',',',pipeline().parameters.p_src_code,')')",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "stored_procedure_failure_notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pp_adf_pipeline_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subscription": {
									"value": "@pipeline().globalParameters.subscriptionId",
									"type": "Expression"
								},
								"resourceGroup": {
									"value": "@pipeline().globalParameters.resourceGroup",
									"type": "Expression"
								},
								"runId": {
									"value": "@coalesce(pipeline().RunId, -1)",
									"type": "Expression"
								},
								"name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('raw_to_curate_sp_call').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('raw_to_curate_sp_call').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('raw_to_curate_sp_call').Duration",
									"type": "Expression"
								},
								"teamWebhookUrl": {
									"value": "@pipeline().globalParameters.teamsWebhookUrl",
									"type": "Expression"
								},
								"notificationTime": {
									"value": "@utcNow()",
									"type": "Expression"
								},
								"taskName": {
									"value": "@pipeline().parameters.p_tgt_curate_table_nm",
									"type": "Expression"
								},
								"taskStepNumber": {
									"value": "@pipeline().parameters.p_src_code",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pipeline_execution_notification",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@if(equals(activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE'],'TRUE'),bool('TRUE'), bool('FALSE'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "pp_stored_procedure_failure_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@toUpper('failed')",
												"type": "Expression"
											},
											"message": {
												"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": {
												"value": "@pipeline().parameters.p_tgt_curate_table_nm",
												"type": "Expression"
											},
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "curate_load_failure",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "pp_stored_procedure_failure_notification",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "stored_procedure_success_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('raw_to_curate_sp_call').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@concat(pipeline().parameters.p_tgt_curate_table_nm, ' is successfully loaded')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": {
												"value": "@pipeline().parameters.p_tgt_curate_table_nm",
												"type": "Expression"
											},
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "load_fact_cost_of_goods_sold",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "set_last_modifieddatetime_Cogs_ItemCosts",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set_last_modified_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_load_fact_cost_of_goods_sold",
								"type": "DataFlowReference",
								"parameters": {
									"df_last_mod_tmstmp_cogs_itemcosts": {
										"value": "'@{variables('v_last_mod_tmstmp_cogs_itemcosts')}'",
										"type": "Expression"
									},
									"df_pipeline_job_id": {
										"value": "'@{coalesce(pipeline().RunId, -1)}'",
										"type": "Expression"
									},
									"df_prev_max_timestamp": {
										"value": "'@{variables('v_prev_max_timestamp')}'",
										"type": "Expression"
									},
									"df_src_nm": {
										"value": "'@{pipeline().parameters.p_src_nm}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"srcCogsItemCosts": {
										"p_src_directory": {
											"value": "@pipeline().parameters.p_src_directory",
											"type": "Expression"
										},
										"p_src_file_name": {
											"value": "@pipeline().parameters.p_src_file_nm",
											"type": "Expression"
										},
										"p_src_root_system": {
											"value": "@pipeline().globalParameters.rootDir",
											"type": "Expression"
										},
										"p_sheet_name": {
											"value": "@pipeline().parameters.p_sheet_nm",
											"type": "Expression"
										}
									},
									"cogs": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_tgt_raw_table_nm",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_rawDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IR-Snowflake-NALA",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "get_last_modifieddatetime_Cogs_ItemCosts",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_excel",
								"type": "DatasetReference",
								"parameters": {
									"p_src_directory": {
										"value": "@pipeline().parameters.p_src_directory",
										"type": "Expression"
									},
									"p_src_file_name": {
										"value": "@pipeline().parameters.p_src_file_nm",
										"type": "Expression"
									},
									"p_src_root_system": {
										"value": "@pipeline().globalParameters.rootDir",
										"type": "Expression"
									},
									"p_sheet_name": {
										"value": "@pipeline().parameters.p_sheet_nm",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "set_last_modifieddatetime_Cogs_ItemCosts",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get_last_modifieddatetime_Cogs_ItemCosts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_last_mod_tmstmp_cogs_itemcosts",
							"value": {
								"value": "@coalesce(activity('get_last_modifieddatetime_Cogs_ItemCosts').output.lastModified,'1950-01-01 00:00:00')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "load_fact_cost_of_goods_sold_failure_notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "load_fact_cost_of_goods_sold",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pp_adf_pipeline_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subscription": {
									"value": "@pipeline().globalParameters.subscriptionId",
									"type": "Expression"
								},
								"resourceGroup": {
									"value": "@pipeline().globalParameters.resourceGroup",
									"type": "Expression"
								},
								"runId": {
									"value": "@coalesce(pipeline().RunId, -1)",
									"type": "Expression"
								},
								"name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('load_fact_cost_of_goods_sold').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('load_fact_cost_of_goods_sold').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('load_fact_cost_of_goods_sold').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('load_fact_cost_of_goods_sold').Duration",
									"type": "Expression"
								},
								"teamWebhookUrl": {
									"value": "@pipeline().globalParameters.teamsWebhookUrl",
									"type": "Expression"
								},
								"notificationTime": {
									"value": "@utcNow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "lkp_raw_last_modified_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"query": {
									"value": "@concat('select max(to_varchar(LATEST_MODIFIEDDATETIME::timestamp, ''','yyyy-mm-dd hh24:mi:ss',''')) as max_date from ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_rawDb,'.',pipeline().parameters.p_tgt_raw_schema_nm, '.', pipeline().parameters.p_tgt_raw_table_nm)",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference",
								"parameters": {
									"p_tgt_table_name": {
										"value": "@pipeline().parameters.p_tgt_raw_table_nm",
										"type": "Expression"
									},
									"p_tgt_schema_name": {
										"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
										"type": "Expression"
									},
									"p_ls_DbName": {
										"value": "@pipeline().globalParameters.snow_rawDb",
										"type": "Expression"
									},
									"p_ls_Env": {
										"value": "@pipeline().globalParameters.environment",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "set_last_modified_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "lkp_raw_last_modified_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_prev_max_timestamp",
							"value": {
								"value": "@coalesce(activity('lkp_raw_last_modified_date').output.firstRow.max_date, '1950-01-01 00:00:00')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_tgt_raw_table_nm": {
						"type": "string",
						"defaultValue": "COGS"
					},
					"p_tgt_raw_schema_nm": {
						"type": "string",
						"defaultValue": "AX_NALA"
					},
					"p_src_directory": {
						"type": "string",
						"defaultValue": "business_files"
					},
					"p_src_file_nm": {
						"type": "string",
						"defaultValue": "COGS.xlsx"
					},
					"p_src_nm": {
						"type": "string",
						"defaultValue": "AXNALA"
					},
					"p_tgt_curate_table_nm": {
						"type": "string",
						"defaultValue": "FACT_COST_OF_GOODS_SOLD"
					},
					"p_tgt_curate_schema_nm": {
						"type": "string",
						"defaultValue": "GLOBAL"
					},
					"p_sheet_nm": {
						"type": "string",
						"defaultValue": "ItemCosts"
					},
					"p_src_code": {
						"type": "string",
						"defaultValue": "1"
					}
				},
				"variables": {
					"v_prev_max_timestamp": {
						"type": "String"
					},
					"v_last_mod_tmstmp_cogs_itemcosts": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-03-12T01:27:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_load_fact_cost_of_goods_sold')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pp_ax_corpallocationmapping_to_dim_corporate_allocation_mapping')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "raw_to_curate_sp_call",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "load_dim_corporate_allocate_mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_snowflake",
							"type": "LinkedServiceReference",
							"parameters": {
								"ls_DbName": {
									"value": "@pipeline().globalParameters.snow_auditDb",
									"type": "Expression"
								},
								"ls_Env": {
									"value": "@pipeline().globalParameters.environment",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('CALL ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb,'.CONTROL.SP_TASK_INITIALIZE(','''',pipeline().RunId,'''',',','''',pipeline().globalParameters.environment,'''',',','''',pipeline().parameters.p_tgt_curate_table_nm,'''',',',pipeline().parameters.p_src_code,')')",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "stored_procedure_failure_notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pp_adf_pipeline_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subscription": {
									"value": "@pipeline().globalParameters.subscriptionId",
									"type": "Expression"
								},
								"resourceGroup": {
									"value": "@pipeline().globalParameters.resourceGroup",
									"type": "Expression"
								},
								"runId": {
									"value": "@coalesce(pipeline().RunId, -1)",
									"type": "Expression"
								},
								"name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('raw_to_curate_sp_call').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('raw_to_curate_sp_call').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('raw_to_curate_sp_call').Duration",
									"type": "Expression"
								},
								"teamWebhookUrl": {
									"value": "@pipeline().globalParameters.teamsWebhookUrl",
									"type": "Expression"
								},
								"notificationTime": {
									"value": "@utcNow()",
									"type": "Expression"
								},
								"taskName": {
									"value": "@pipeline().parameters.p_tgt_curate_table_nm",
									"type": "Expression"
								},
								"taskStepNumber": {
									"value": "@pipeline().parameters.p_src_code",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pipeline_execution_notification",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@if(equals(activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE'],'TRUE'),bool('TRUE'), bool('FALSE'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "pp_stored_procedure_failure_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@toUpper('failed')",
												"type": "Expression"
											},
											"message": {
												"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": {
												"value": "@pipeline().parameters.p_tgt_curate_table_nm",
												"type": "Expression"
											},
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "curate_load_failure",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "pp_stored_procedure_failure_notification",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "stored_procedure_success_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('raw_to_curate_sp_call').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@concat(pipeline().parameters.p_tgt_curate_table_nm, ' is successfully loaded')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": {
												"value": "@pipeline().parameters.p_tgt_curate_table_nm",
												"type": "Expression"
											},
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "lkp_raw_last_modified_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"query": {
									"value": "@concat('select max(to_varchar(LATEST_MODIFIEDDATETIME::timestamp, ''','yyyy-mm-dd hh24:mi:ss',''')) as max_date from ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_rawDb,'.',pipeline().parameters.p_tgt_raw_schema_nm, '.', pipeline().parameters.p_tgt_raw_table_nm)",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference",
								"parameters": {
									"p_tgt_table_name": {
										"value": "@pipeline().parameters.p_tgt_raw_table_nm",
										"type": "Expression"
									},
									"p_tgt_schema_name": {
										"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
										"type": "Expression"
									},
									"p_ls_DbName": {
										"value": "@pipeline().globalParameters.snow_rawDb",
										"type": "Expression"
									},
									"p_ls_Env": {
										"value": "@pipeline().globalParameters.environment",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "set_last_modified_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "lkp_raw_last_modified_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_prv_max_upd_timestamp",
							"value": {
								"value": "@coalesce(activity('lkp_raw_last_modified_date').output.firstRow.max_date, '1950-01-01 00:00:00')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "load_dim_corporate_allocate_mapping",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "set_last_mod_tmstmp_CorpAllocationMapping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set_last_modified_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_load_dim_corporate_allocation_mapping",
								"type": "DataFlowReference",
								"parameters": {
									"df_prev_max_timestamp": {
										"value": "'@{variables('v_prv_max_upd_timestamp')}'",
										"type": "Expression"
									},
									"df_last_mod_tmstmp_corpallocationmapping": {
										"value": "'@{variables('v_last_mod_tmstmp_corpallocationmapping')}'",
										"type": "Expression"
									},
									"df_pipeline_job_id": {
										"value": "'@{coalesce(pipeline().RunId, -1)}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"srcCorporateAllocationMapping": {
										"p_src_directory": {
											"value": "@pipeline().parameters.p_src_directory",
											"type": "Expression"
										},
										"p_src_file_name": {
											"value": "@pipeline().parameters.p_src_file_nm",
											"type": "Expression"
										},
										"p_src_root_system": {
											"value": "@pipeline().globalParameters.rootDir",
											"type": "Expression"
										},
										"p_sheet_name": {
											"value": "@pipeline().parameters.p_sheet_nm",
											"type": "Expression"
										}
									},
									"corpAllocationMapping": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_tgt_raw_table_nm",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_rawDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IR-Snowflake-NALA",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "get_last_modifieddatetime_CorpAllocationMapping",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_excel",
								"type": "DatasetReference",
								"parameters": {
									"p_src_directory": {
										"value": "@pipeline().parameters.p_src_directory",
										"type": "Expression"
									},
									"p_src_file_name": {
										"value": "@pipeline().parameters.p_src_file_nm",
										"type": "Expression"
									},
									"p_src_root_system": {
										"value": "@pipeline().globalParameters.rootDir",
										"type": "Expression"
									},
									"p_sheet_name": {
										"value": "@pipeline().parameters.p_sheet_nm",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "set_last_mod_tmstmp_CorpAllocationMapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get_last_modifieddatetime_CorpAllocationMapping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_last_mod_tmstmp_corpallocationmapping",
							"value": {
								"value": "@coalesce(activity('get_last_modifieddatetime_CorpAllocationMapping').output.lastModified,'1950-01-01 00:00:00')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "load_dim_corporate_allocation_failure_notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "load_dim_corporate_allocate_mapping",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pp_adf_pipeline_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subscription": {
									"value": "@pipeline().globalParameters.subscriptionId",
									"type": "Expression"
								},
								"resourceGroup": {
									"value": "@pipeline().globalParameters.resourceGroup",
									"type": "Expression"
								},
								"runId": {
									"value": "@coalesce(pipeline().RunId, -1)",
									"type": "Expression"
								},
								"name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('load_dim_corporate_allocate_mapping').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('load_dim_corporate_allocate_mapping').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('load_dim_corporate_allocate_mapping').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('load_dim_corporate_allocate_mapping').Duration",
									"type": "Expression"
								},
								"teamWebhookUrl": {
									"value": "@pipeline().globalParameters.teamsWebhookUrl",
									"type": "Expression"
								},
								"notificationTime": {
									"value": "@utcNow()",
									"type": "Expression"
								},
								"taskName": {
									"value": "@pipeline().parameters.p_tgt_curate_table_nm",
									"type": "Expression"
								},
								"taskStepNumber": {
									"value": "@pipeline().parameters.p_src_code",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_tgt_raw_table_nm": {
						"type": "string",
						"defaultValue": "CORPALLOCATIONMAPPING"
					},
					"p_tgt_raw_schema_nm": {
						"type": "string",
						"defaultValue": "AX_NALA"
					},
					"p_src_directory": {
						"type": "string",
						"defaultValue": "business_files"
					},
					"p_src_file_nm": {
						"type": "string",
						"defaultValue": "CorporateAllocationMappingFile.xlsx"
					},
					"p_src_nm": {
						"type": "string",
						"defaultValue": "AXNALA"
					},
					"p_tgt_curate_table_nm": {
						"type": "string",
						"defaultValue": "DIM_CORPORATE_ALLOCATION_MAPPING"
					},
					"p_tgt_curate_schema_nm": {
						"type": "string",
						"defaultValue": "GLOBAL"
					},
					"p_sheet_nm": {
						"type": "string",
						"defaultValue": "CorpAllocationMapping"
					},
					"p_src_code": {
						"type": "string",
						"defaultValue": "1"
					}
				},
				"variables": {
					"v_prv_max_upd_timestamp": {
						"type": "String"
					},
					"v_last_mod_tmstmp_corpallocationmapping": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-03-12T01:27:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pp_ax_custinvoicetrans_to_fact_sales_invoices')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_last_modifieddatetime_cogs_itemcosts",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_excel",
								"type": "DatasetReference",
								"parameters": {
									"p_src_directory": {
										"value": "@pipeline().parameters.p_src_directory",
										"type": "Expression"
									},
									"p_src_file_name": {
										"value": "@pipeline().parameters.p_src_file_nm",
										"type": "Expression"
									},
									"p_src_root_system": {
										"value": "@pipeline().globalParameters.rootDir",
										"type": "Expression"
									},
									"p_sheet_name": {
										"value": "@pipeline().parameters.p_src_file_sheet",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "set_last_mod_tmstmp_cogs_itemcosts",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get_last_modifieddatetime_cogs_itemcosts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_last_mod_tmstmp_cogsitemcosts",
							"value": {
								"value": "@coalesce(activity('get_last_modifieddatetime_cogs_itemcosts').output.lastModified,'1950-01-01 00:00:00')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "switch_nala_retail_d365",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "set_last_mod_tmstmp_cogs_itemcosts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.p_src_code",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1",
									"activities": [
										{
											"name": "custinvoicetrans_to_adls_nala",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"additionalColumns": [
														{
															"name": "HK_JOB_RUN_ID",
															"value": {
																"value": "@coalesce(pipeline().RunId, -1)",
																"type": "Expression"
															}
														},
														{
															"name": "HK_SOURCE_NAME",
															"value": {
																"value": "@pipeline().parameters.p_src_nm",
																"type": "Expression"
															}
														}
													],
													"sqlReaderQuery": {
														"value": "SELECT cit1.RECID \n,cit1.DATAAREAID \n,cit1.ITEMID \n,cit1.CURRENCYCODE \n,cit1.DEFAULTDIMENSION \n,cit1.TRANSACTIONCODE \n,cit1.INVENTDIMID \n,cit1.DELIVERYPOSTALADDRESS \n,cit1.MCRDLVMODE \n,cit1.SALESCATEGORY \n,cit1.RETURNDISPOSITIONCODEID \n,cit1.SALESGROUP \n,cit1.ORIGSALESID \n,cit1.TAXGROUP \n,cit1.TAXITEMGROUP \n,cit1.SALESUNIT \n,cit1.DLVDATE \n,cit1.INVOICEDATE \n,cit1.RETURNARRIVALDATE \n,cit1.RETURNCLOSEDDATE \n,cit1.INVENTTRANSID \n,cit1.INVOICEID \n,cit1.LINENUM \n,cit1.INVENTQTY \n,cit1.QTY \n,cit1.QTYPHYSICAL \n,cit1.PRICEUNIT \n,cit1.SALESPRICE \n,cit1.COMMISSAMOUNTCUR \n,cit1.COMMISSAMOUNTMST \n,cit1.LINEAMOUNT \n,cit1.LINEAMOUNTMST \n,cit1.TAXAMOUNT \n,cit1.TAXAMOUNTMST \n,cit1.DISCPERCENT \n,cit1.DISCAMOUNT \n,cit1.LINEDISC \n,cit1.LINEPERCENT \n,cit1.SUMLINEDISC \n,cit1.SUMLINEDISCMST \n,cit1.MODIFIEDDATETIME \n,def1.BUSINESS_UNIT as DEFAULTDIMENSION_BUSINESS_UNIT \n,def1.DEFAULTDIMENSION_MODIFIEDDATETIME \n,st1.SMMCAMPAIGNID as SALESTABLE_SMMCAMPAIGNID \n,st1.COMMISSIONGROUP as SALESTABLE_COMMISSIONGROUP \n,st1.INVOICEACCOUNT as SALESTABLE_INVOICEACCOUNT \n,st1.MARKUPGROUP as SALESTABLE_MARKUPGROUP \n,st1.RETURNREASONCODEID as SALESTABLE_RETURNREASONCODEID \n,st1.LINEDISC as SALESTABLE_LINEDISC \n,st1.SALESPOOLID as SALESTABLE_SALESPOOLID \n,st1.PRICEGROUPID as SALESTABLE_PRICEGROUPID \n,st1.WORKERSALESRESPONSIBLE as SALESTABLE_WORKERSALESRESPONSIBLE \n,st1.ATAGENT as SALESTABLE_ATAGENT \n,st1.SHIPCARRIERBLINDSHIPMENT as SALESTABLE_SHIPCARRIERBLINDSHIPMENT \n,st1.SHIPCARRIEREXPEDITEDSHIPMENT as SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT \n,st1.ORDERBLOCKED as SALESTABLE_ORDERBLOCKED \n,st1.MCRORDERSTOPPED as SALESTABLE_MCRORDERSTOPPED \n,st1.SHIPCARRIERFUELSURCHARGE as SALESTABLE_SHIPCARRIERFUELSURCHARGE \n,st1.INVENTSITEID as SALESTABLE_INVENTSITEID \n,st1.MODIFIEDDATETIME as SALESTABLE_MODIFIEDDATETIME \n,cij1.ORDERACCOUNT as CUSTINVOICEJOUR_ORDERACCOUNT \n,cij1.CUSTGROUP as CUSTINVOICEJOUR_CUSTGROUP \n,cij1.INVOICEPOSTALADDRESS as CUSTINVOICEJOUR_INVOICEPOSTALADDRESS \n,cij1.DLVTERM as CUSTINVOICEJOUR_DLVTERM \n,cij1.PAYMENT as CUSTINVOICEJOUR_PAYMENT \n,cij1.RETURNREASONCODEID as CUSTINVOICEJOUR_RETURNREASONCODEID \n,cij1.SALESORIGINID as CUSTINVOICEJOUR_SALESORIGINID \n,cij1.INVENTLOCATIONID as CUSTINVOICEJOUR_INVENTLOCATIONID \n,cij1.WORKERSALESTAKER as CUSTINVOICEJOUR_WORKERSALESTAKER \n,cij1.DOCUMENTDATE as CUSTINVOICEJOUR_DOCUMENTDATE \n,cij1.DUEDATE as CUSTINVOICEJOUR_DUEDATE \n,cij1.LEDGERVOUCHER as CUSTINVOICEJOUR_LEDGERVOUCHER \n,cij1.PURCHASEORDER as CUSTINVOICEJOUR_PURCHASEORDER\n,cij1.SALESTYPE as CUSTINVOICEJOUR_SALESTYPE\n,cij1.JOURNALNUM as CUSTINVOICEJOUR_JOURNALNUM\n,cij1.JOURNALNAME as CUSTINVOICEJOUR_JOURNALNAME\n,cij1.MODIFIEDDATETIME as CUSTINVOICEJOUR_MODIFIEDDATETIME \n,id1.CONFIGID as INVENTDIM1_CONFIGID \n,id1.INVENTSITEID as INVENTDIM1_INVENTSITEID\n,id1.MODIFIEDDATETIME as INVENTDIM1_MODIFIEDDATETIME \n,CAST(idc1.PDMSTATUS AS varchar) as INVENTDIMCOMBINATION_PDMSTATUS \n,idc1.MODIFIEDDATETIME as INVENTDIMCOMBINATION_MODIFIEDDATETIME \n,sl1.TPX_RETURNREASONCODEID as SALESLINE1_TPX_RETURNREASONCODEID \n,sl1.LINEDISC as SALESLINE1_LINEDISC \n,sl1.LINEPERCENT as SALESLINE1_LINEPERCENT \n,sl1.COMPLETE as SALESLINE1_COMPLETE \n,sl1.ORDERBLOCKED as SALESLINE1_ORDERBLOCKED \n,sl1.SCRAP as SALESLINE1_SCRAP \n,sl1.STOCKEDPRODUCT as SALESLINE1_STOCKEDPRODUCT \n,sl1.TPX_MANUFACTUREDATE as SALESLINE1_TPX_MANUFACTUREDATE \n,sl1.TPX_RELATEDORDERDATE as SALESLINE1_TPX_RELATEDORDERDATE \n,sl1.CREATEDDATETIME as SALESLINE1_CREATEDDATETIME \n,sl1.TPX_PRODUCTIONTIME as SALESLINE1_TPX_PRODUCTIONTIME \n,sl1.TPX_REGISTRYNUMBER as SALESLINE1_TPX_REGISTRYNUMBER \n,sl1.MODIFIEDDATETIME as SALESLINE1_MODIFIEDDATETIME \n,tet1.ENUMVALUELABEL as TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS \n,tet2.ENUMVALUELABEL as TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER \n,tet3.ENUMVALUELABEL as TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER \n,tet4.ENUMVALUELABEL as TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE \n,tet5.ENUMVALUELABEL as TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE \n,tet6.ENUMVALUELABEL as TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE \n,tet7.ENUMVALUELABEL as TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE \n,tet8.ENUMVALUELABEL as TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE\n,tet9.ENUMVALUELABEL as TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE  \n,mslds1.DROPSHIPMENT as MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT \n,sl2.CREATEDDATETIME as SALESLINE2_CREATEDDATETIME \n,sl2.INVENTDIMID as SALESLINE2_INVENTDIMID \n,sl2.SALESID as SALESLINE2_SALESID \n,sl2.MODIFIEDDATETIME as SALESLINE2_MODIFIEDDATETIME \n,da1.TIMEZONE as DATAAREA1_TIMEZONE \n,tzi1.TIMEBIAS as TIMEZONEINFO1_TIMEBIAS \n,da3.TIMEZONE as DATAAREA3_TIMEZONE \n,tzi3.TIMEBIAS as TIMEZONEINFO3_TIMEBIAS \n,null as INVENTITEMPRICE1_STANDARDCOST \n,null as INVENTITEMPRICE1_MODIFIEDDATETIME \n,null as INVENTITEMPRICE2_STANDARDCOST \n,null as INVENTITEMPRICE2_MODIFIEDDATETIME \n,null as INVENTITEMPRICE3_STANDARDCOST \n,null as INVENTITEMPRICE3_MODIFIEDDATETIME \n,null as INVENTITEMPRICE4_STANDARDCOST \n,null as INVENTITEMPRICE4_MODIFIEDDATETIME \n,null as INVENTITEMPRICE6_STANDARDCOST \n,null as INVENTITEMPRICE6_MODIFIEDDATETIME \n,null as INVENTITEMPRICE7_STANDARDCOST \n,null as INVENTITEMPRICE7_MODIFIEDDATETIME \n,null as INVENTITEMPRICE8_STANDARDCOST \n,null as INVENTITEMPRICE8_MODIFIEDDATETIME \n,null as INVENTITEMPRICE9_STANDARDCOST \n,null as INVENTITEMPRICE9_MODIFIEDDATETIME\n ,mslpo1.RECID as MCRSALESLINEPRICEOVERRIDE1_RECID \n ,mslpo1.REASONCODE as MCRSALESLINEPRICEOVERRIDE2_REASONCODE \n ,tport1.DESCRIPTION as TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION \n ,ps1.NAME as PDMSTATUS_NAME\n ,(SELECT MAX(LastUpdateDate) \n FROM (VALUES (sl1.MODIFIEDDATETIME),\n  (isnull(def1.DEFAULTDIMENSION_MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(st1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(cij1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(id1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(idc1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(sl1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(sl2.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(id2.INVENTDIM_MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(id2.INVENTSITE_MODIFIEDDATETIME, '1950-01-01'))\n ) AS UpdateDate(LastUpdateDate)) AS LATEST_MODIFIEDDATETIME \nFROM dbo.CUSTINVOICETRANS cit1\nleft join (select distinct sl10.DEFAULTDIMENSION\n                                                                , max(\n                                                                                case when da1.NAME = 'BusinessUnit' then davsi1.DISPLAYVALUE\n                                                                                                else null\n                                                                                                end\n                                                                                ) over (partition by sl10.DEFAULTDIMENSION) as BUSINESS_UNIT\n                                                                , max(\n                                                                                (select max(i) from (values (davsi1.MODIFIEDDATETIME), (dav1.MODIFIEDDATETIME), (da1.MODIFIEDDATETIME), (desc1.DESC_MODIFIEDDATETIME)) AS T(i))\n                                                                                ) over (partition by sl10.DEFAULTDIMENSION) as DEFAULTDIMENSION_MODIFIEDDATETIME\n                                                from (select distinct DEFAULTDIMENSION from dbo.SALESLINE) sl10\n                                                left join dbo.DIMENSIONATTRIBUTEVALUESETITEM davsi1 on\n                                                                sl10.DEFAULTDIMENSION = davsi1.DIMENSIONATTRIBUTEVALUESET\n                                                left join dbo.DIMENSIONATTRIBUTEVALUE dav1 on\n                                                                davsi1.DIMENSIONATTRIBUTEVALUE = dav1.RECID\n                                                left join dbo.DIMENSIONATTRIBUTE da1 on\n                                                                dav1.DIMENSIONATTRIBUTE = da1.RECID\n                                                left join (select dft1.VALUE, da2.NAME, dft1.DESCRIPTION\n                                                                                                                , (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME\n                                                                                                from dbo.DIMENSIONFINANCIALTAG dft1\n                                                                                                left join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on\n                                                                                                                dft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n                                                                                                left join dbo.DIMENSIONATTRIBUTE da2 on\n                                                                                                                dadc1.DIMENSIONATTRIBUTE = da2.RECID) desc1 on\n                                                                davsi1.DISPLAYVALUE = desc1.VALUE and\n                                                                da1.NAME = desc1.NAME\n                                                ) def1 on\n                cit1.DEFAULTDIMENSION = def1.DEFAULTDIMENSION\nleft join dbo.SALESTABLE st1 on\n                cit1.DATAAREAID = st1.DATAAREAID and\n                cit1.ORIGSALESID = st1.SALESID\nleft join (select distinct cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, '') as NUMBERSEQUENCEGROUP, cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID\n\t\t\t, max(cij10.ORDERACCOUNT) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as ORDERACCOUNT\n\t\t\t, max(cij10.CUSTGROUP) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as CUSTGROUP\n\t\t\t, max(cij10.INVOICEPOSTALADDRESS) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as INVOICEPOSTALADDRESS\n\t\t\t, max(cij10.DLVTERM) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as DLVTERM\n\t\t\t, max(cij10.PAYMENT) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as PAYMENT\n\t\t\t, max(cij10.RETURNREASONCODEID) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as RETURNREASONCODEID\n\t\t\t, max(cij10.SALESORIGINID) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as SALESORIGINID\n\t\t\t, max(cij10.INVENTLOCATIONID) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as INVENTLOCATIONID\n\t\t\t, max(cij10.WORKERSALESTAKER) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as WORKERSALESTAKER\n\t\t\t, max(cij10.DOCUMENTDATE) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as DOCUMENTDATE\n\t\t\t, max(cij10.DUEDATE) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as DUEDATE\n\t\t\t, max(cij10.LEDGERVOUCHER) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as LEDGERVOUCHER\n\t\t\t, max(cij10.PURCHASEORDER) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as PURCHASEORDER\n\t\t\t, max(cij10.SALESTYPE) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as SALESTYPE\n\t\t\t\n\t\t\t, max(cij10.JOURNALNUM) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as JOURNALNUM\n\t\t\t, max(ljta10.JOURNALNAME) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as JOURNALNAME\n\t\t\t\n\t\t\t, max(cij10.IsManbase) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as IsManbase\n\t\t\t\n\t\t\t, max((select max(i) from (values (cij10.MODIFIEDDATETIME), (ljta10.MODIFIEDDATETIME)) AS T(i))) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as MODIFIEDDATETIME\n\t\tfrom (select cij100.RECID, cij100.DATAAREAID, cij100.NUMBERSEQUENCEGROUP, cij100.SALESID, cij100.INVOICEDATE, cij100.INVOICEID\n\t\t\t\t\t, cij100.ORDERACCOUNT, cij100.CUSTGROUP, cij100.INVOICEPOSTALADDRESS, cij100.DLVTERM, cij100.PAYMENT, cij100.RETURNREASONCODEID, cij100.SALESORIGINID, cij100.INVENTLOCATIONID, cij100.WORKERSALESTAKER, cij100.DOCUMENTDATE, cij100.DUEDATE, cij100.LEDGERVOUCHER, cij100.PURCHASEORDER, cij100.SALESTYPE\n\t\t\t\t\t, cij100.IsManbase\n\t\t\t\t\t, case when max(cij100.IsManbase) over (partition by cij100.DATAAREAID, isnull(cij100.NUMBERSEQUENCEGROUP, ''), cij100.SALESID, cij100.INVOICEDATE, cij100.INVOICEID) = 1 and cij100.IsManbase = 0 then ''\n\t\t\t\t\t\telse cij100.JOURNALNUM\n\t\t\t\t\t\tend as JOURNALNUM\n\t\t\t\t\t, cij100.MODIFIEDDATETIME\n\t\t\t\tfrom (select cij1000.RECID, cij1000.DATAAREAID, cij1000.NUMBERSEQUENCEGROUP, cij1000.SALESID, cij1000.INVOICEDATE, cij1000.INVOICEID\n\t\t\t\t\t, cij1000.ORDERACCOUNT, cij1000.CUSTGROUP, cij1000.INVOICEPOSTALADDRESS, cij1000.DLVTERM, cij1000.PAYMENT, cij1000.RETURNREASONCODEID, cij1000.SALESORIGINID, cij1000.INVENTLOCATIONID, cij1000.WORKERSALESTAKER, cij1000.DOCUMENTDATE, cij1000.DUEDATE, cij1000.LEDGERVOUCHER, cij1000.PURCHASEORDER, cij1000.SALESTYPE\n\t\t\t\t\t, case --Sealy --Manbase journals moved from Manbase into AX (not AX originated)\n\t\t\t\t\t\t\twhen cij1000.DATAAREAID = '415' and isnull(ljta1000.JOURNALNAME, '') like 'MB%' then 1\n\t\t\t\t\t\t\t--From Manbase, but eluded journal name filter   --From Manbase, but eluded journal name filter\n\t\t\t\t\t\t\twhen left(cij1000.INVOICEID, 4) = '415F' or left(cij1000.INVOICEID, 5) = 'TC415' then 1\n\t\t\t\t\t\t\t--And, at last, specific cutover date for old Manbase into AX history\n\t\t\t\t\t\t\twhen convert(date, cij1000.INVOICEDATE) = '2020-03-29' then 1\n\t\t\t\t\t\telse 0\n\t\t\t\t\t\tend as IsManbase\n\t\t\t\t\t, ljt1000.JOURNALNUM\n\t\t\t\t\t, (select max(i) from (values (cij1000.MODIFIEDDATETIME), (ljt1000.MODIFIEDDATETIME), (ljta1000.MODIFIEDDATETIME)) AS T(i)) as MODIFIEDDATETIME\n\t\t\t\tfrom dbo.CUSTINVOICEJOUR cij1000\n\t\t\t\tleft join (select DATAAREAID, INVOICE, JOURNALNUM, MODIFIEDDATETIME\n\t\t\t\t\t\t\tfrom dbo.LEDGERJOURNALTRANS) ljt1000 on\n\t\t\t\t\tcij1000.DATAAREAID = ljt1000.DATAAREAID and\n\t\t\t\t\tcij1000.INVOICEID = ljt1000.INVOICE\n\t\t\t\tleft join (select DATAAREAID, JOURNALNUM, JOURNALNAME, MODIFIEDDATETIME\n\t\t\t\t\t\t\tfrom dbo.LEDGERJOURNALTABLE) ljta1000 on\n\t\t\t\t\tljt1000.DATAAREAID = ljta1000.DATAAREAID and\n\t\t\t\t\tljt1000.JOURNALNUM = ljta1000.JOURNALNUM) cij100\n\t\t\t) cij10\n\tleft join (select DATAAREAID, JOURNALNUM\n\t\t\t\t\t, max(JOURNALNAME) as JOURNALNAME\n\t\t\t\t\t, max(MODIFIEDDATETIME) as MODIFIEDDATETIME\n\t\t\t\tfrom dbo.LEDGERJOURNALTABLE\n\t\t\t\tgroup by DATAAREAID, JOURNALNUM) ljta10 on\n\t\tcij10.DATAAREAID = ljta10.DATAAREAID and\n\t\tcij10.JOURNALNUM = ljta10.JOURNALNUM) cij1 on\n\tcit1.DATAAREAID = cij1.DATAAREAID and\n\tisnull(cit1.NUMBERSEQUENCEGROUP, '') = isnull(cij1.NUMBERSEQUENCEGROUP, '') and\n\tcit1.SALESID = cij1.SALESID and\n\tcit1.INVOICEDATE = cij1.INVOICEDATE and\n\tcit1.INVOICEID = cij1.INVOICEID\nleft join dbo.INVENTDIM id1 on\n                cit1.DATAAREAID = id1.DATAAREAID and\n                cit1.INVENTDIMID = id1.INVENTDIMID\nleft join (select idc10.DATAAREAID, idc10.ITEMID, id10.CONFIGID, idc10.PDMSTATUS\n                                                , max(id10.MODIFIEDDATETIME) as MODIFIEDDATETIME\n                                from dbo.INVENTDIMCOMBINATION idc10\n                                left join dbo.INVENTDIM id10 on\n                                                idc10.DATAAREAID = id10.DATAAREAID and\n                                                idc10.INVENTDIMID = id10.INVENTDIMID\n                                group by idc10.DATAAREAID, idc10.ITEMID, id10.CONFIGID, idc10.PDMSTATUS) idc1 on\n                cit1.DATAAREAID = idc1.DATAAREAID and\n                id1.CONFIGID = idc1.CONFIGID and\n                cit1.ITEMID = idc1.ITEMID\nleft join dbo.SALESLINE sl1 on\n                cit1.DATAAREAID = sl1.DATAAREAID and\n                cit1.INVENTTRANSID = sl1.INVENTTRANSID\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'DocumentStatus'\n                                group by ENUMNAME, ENUMVALUE) tet1 on\n                st1.DOCUMENTSTATUS = tet1.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'ReturnStatusHeader'\n                                group by ENUMNAME, ENUMVALUE) tet2 on\n                st1.RETURNSTATUS = tet2.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'SalesStatus'\n                                group by ENUMNAME, ENUMVALUE) tet3 on\n                '3' = tet3.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'ReturnStatusLine'\n                                group by ENUMNAME, ENUMVALUE) tet4 on\n                sl1.RETURNSTATUS = tet4.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'SalesStatus'\n                                group by ENUMNAME, ENUMVALUE) tet5 on\n                '3' = tet5.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'SalesType'\n                                group by ENUMNAME, ENUMVALUE) tet6 on\n                cij1.SALESTYPE = tet6.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'ShipCarrierDlvType'\n                                group by ENUMNAME, ENUMVALUE) tet7 on\n                sl1.SHIPCARRIERDLVTYPE = tet7.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'TradeLineDlvType'\n                                group by ENUMNAME, ENUMVALUE) tet8 on\n                sl1.DELIVERYTYPE = tet8.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'CostingVersionPriceType'\n                                group by ENUMNAME, ENUMVALUE) tet9 on\n                0 = tet9.ENUMVALUE\nleft join dbo.MCRSALESLINEDROPSHIPMENT mslds1 on\n                sl1.DATAAREAID = mslds1.DATAAREAID and\n                sl1.RECID = mslds1.SALESLINE\nleft join (select distinct DATAAREAID, INVENTTRANSID\n                                                , max(CREATEDDATETIME) over (partition by DATAAREAID, INVENTTRANSID) as CREATEDDATETIME\n                                                , max(INVENTDIMID) over (partition by DATAAREAID, INVENTTRANSID) as INVENTDIMID\n                                                , max(SALESID) over (partition by DATAAREAID, INVENTTRANSID) as SALESID\n                                                , max(MODIFIEDDATETIME) over (partition by DATAAREAID, INVENTTRANSID) as MODIFIEDDATETIME\n                                from dbo.SALESLINE) sl2 on\n                sl1.DATAAREAID = sl2.DATAAREAID and\n                sl1.INVENTTRANSIDRETURN = sl2.INVENTTRANSID\nleft join (select id20.DATAAREAID, id20.INVENTDIMID\n                                                , max(is20.TIMEZONE) over (partition by id20.DATAAREAID, id20.INVENTDIMID) as TIMEZONE\n                                                , max(id20.MODIFIEDDATETIME) over (partition by id20.DATAAREAID, id20.INVENTDIMID) as INVENTDIM_MODIFIEDDATETIME\n                                                , max(is20.MODIFIEDDATETIME) over (partition by id20.DATAAREAID, id20.INVENTDIMID) as INVENTSITE_MODIFIEDDATETIME\n                                from dbo.INVENTDIM id20\n                                left join dbo.INVENTSITE is20 on\n                                                id20.DATAAREAID = is20.DATAAREAID and\n                                                id20.INVENTSITEID = is20.SITEID) id2 on\n                sl2.DATAAREAID = id2.DATAAREAID and\n                sl2.INVENTDIMID = id2.INVENTDIMID\nleft join dbo.DATAAREA da1 on\n                sl2.DATAAREAID = da1.ID\nleft join dbo.TIMEZONEINFO tzi1 on\n                sl2.CREATEDDATETIME >= tzi1.STARTDATE and\n                sl2.CREATEDDATETIME < tzi1.ENDDATE and\n                isnull(id2.TIMEZONE, da1.TIMEZONE) = tzi1.TIMEZONEID\nleft join dbo.DATAAREA da3 on\n                sl1.DATAAREAID = da3.ID\nleft join dbo.TIMEZONEINFO tzi3 on\n                sl1.CREATEDDATETIME >= tzi3.STARTDATE and\n                sl1.CREATEDDATETIME < tzi3.ENDDATE and\n                da3.TIMEZONE = tzi3.TIMEZONEID\nleft join dbo.MCRSALESLINEPRICEOVERRIDE mslpo1 on\n                sl1.RECID = mslpo1.SALESLINE\nleft join dbo.MCRSALESLINEPRICEOVERRIDE mslpo2 on\n                mslpo1.RECID = mslpo2.RECID\nleft join dbo.TPXPRICEOVERRIDEREASONTABLE tport1 on\n                mslpo1.DATAAREAID = tport1.DATAAREAID and\n                mslpo1.REASONCODE = tport1.SUBCODEID and\n                mslpo1.PARTITION = tport1.PARTITION\nleft join dbo.PDMSTATUS ps1 on\n                idc1.PDMSTATUS = ps1.RECID\nwhere cit1.RECID is not null\nand cit1.DATAAREAID is not null\nand cit1.ITEMID is not null\nand isnull(cij1.IsManbase, 0) = 0\noption(recompile, maxdop 16)",
														"type": "Expression"
													},
													"queryTimeout": "20:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": true,
												"stagingSettings": {
													"linkedServiceName": {
														"referenceName": "ls_blob_storage",
														"type": "LinkedServiceReference"
													},
													"path": {
														"value": "@pipeline().globalParameters.rootDir",
														"type": "Expression"
													}
												},
												"parallelCopies": 32,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"name": "RECID",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "RECID",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "ITEMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ITEMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CURRENCYCODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CURRENCYCODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "TRANSACTIONCODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TRANSACTIONCODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVENTDIMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTDIMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DELIVERYPOSTALADDRESS",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DELIVERYPOSTALADDRESS",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "MCRDLVMODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "MCRDLVMODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESCATEGORY",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "SALESCATEGORY",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "RETURNDISPOSITIONCODEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "RETURNDISPOSITIONCODEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "ORIGSALESID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ORIGSALESID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TAXGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TAXGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TAXITEMGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TAXITEMGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESUNIT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESUNIT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DLVDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DLVDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVOICEDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVOICEDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "RETURNARRIVALDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "RETURNARRIVALDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "RETURNCLOSEDDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "RETURNCLOSEDDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTTRANSID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTTRANSID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVOICEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVOICEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LINENUM",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "LINENUM",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTQTY",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "INVENTQTY",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "QTY",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "QTY",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "QTYPHYSICAL",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "QTYPHYSICAL",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "PRICEUNIT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "PRICEUNIT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "SALESPRICE",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "SALESPRICE",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "COMMISSAMOUNTCUR",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "COMMISSAMOUNTCUR",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "COMMISSAMOUNTMST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "COMMISSAMOUNTMST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "LINEAMOUNT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "LINEAMOUNT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "LINEAMOUNTMST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "LINEAMOUNTMST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "TAXAMOUNT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "TAXAMOUNT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "TAXAMOUNTMST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "TAXAMOUNTMST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "DISCPERCENT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "DISCPERCENT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "DISCAMOUNT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "DISCAMOUNT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "LINEDISC",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "LINEDISC",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "LINEPERCENT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "LINEPERCENT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "SUMLINEDISC",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "SUMLINEDISC",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "SUMLINEDISCMST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "SUMLINEDISCMST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_BUSINESS_UNIT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_BUSINESS_UNIT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SMMCAMPAIGNID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_SMMCAMPAIGNID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_COMMISSIONGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_COMMISSIONGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_INVOICEACCOUNT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_INVOICEACCOUNT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_MARKUPGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_MARKUPGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_RETURNREASONCODEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_RETURNREASONCODEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_LINEDISC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_LINEDISC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SALESPOOLID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_SALESPOOLID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_PRICEGROUPID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_PRICEGROUPID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_WORKERSALESRESPONSIBLE",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "SALESTABLE_WORKERSALESRESPONSIBLE",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_ATAGENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_ATAGENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SHIPCARRIERBLINDSHIPMENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_SHIPCARRIERBLINDSHIPMENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_ORDERBLOCKED",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_ORDERBLOCKED",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_MCRORDERSTOPPED",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_MCRORDERSTOPPED",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SHIPCARRIERFUELSURCHARGE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_SHIPCARRIERFUELSURCHARGE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_INVENTSITEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_INVENTSITEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESTABLE_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_ORDERACCOUNT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_ORDERACCOUNT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_CUSTGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_CUSTGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_INVOICEPOSTALADDRESS",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_INVOICEPOSTALADDRESS",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_DLVTERM",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_DLVTERM",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_PAYMENT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_PAYMENT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_RETURNREASONCODEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_RETURNREASONCODEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_SALESORIGINID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_SALESORIGINID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_INVENTLOCATIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_INVENTLOCATIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_WORKERSALESTAKER",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_WORKERSALESTAKER",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_DOCUMENTDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_DOCUMENTDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_DUEDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_DUEDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_LEDGERVOUCHER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_LEDGERVOUCHER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_PURCHASEORDER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_PURCHASEORDER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_SALESTYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_SALESTYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_JOURNALNUM",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_JOURNALNUM",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_JOURNALNAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_JOURNALNAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTDIM1_CONFIGID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTDIM1_CONFIGID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVENTDIM1_INVENTSITEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTDIM1_INVENTSITEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVENTDIM1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTDIM1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTDIMCOMBINATION_PDMSTATUS",
																"type": "String",
																"physicalType": "varchar"
															},
															"sink": {
																"name": "INVENTDIMCOMBINATION_PDMSTATUS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVENTDIMCOMBINATION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTDIMCOMBINATION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_TPX_RETURNREASONCODEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESLINE1_TPX_RETURNREASONCODEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_LINEDISC",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "SALESLINE1_LINEDISC",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_LINEPERCENT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "SALESLINE1_LINEPERCENT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_COMPLETE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE1_COMPLETE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_ORDERBLOCKED",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE1_ORDERBLOCKED",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_SCRAP",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE1_SCRAP",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_STOCKEDPRODUCT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE1_STOCKEDPRODUCT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_TPX_MANUFACTUREDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESLINE1_TPX_MANUFACTUREDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_TPX_RELATEDORDERDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESLINE1_TPX_RELATEDORDERDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_CREATEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESLINE1_CREATEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_TPX_PRODUCTIONTIME",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE1_TPX_PRODUCTIONTIME",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_TPX_REGISTRYNUMBER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESLINE1_TPX_REGISTRYNUMBER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESLINE1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE2_CREATEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESLINE2_CREATEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESLINE2_INVENTDIMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESLINE2_INVENTDIMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESLINE2_SALESID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESLINE2_SALESID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESLINE2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESLINE2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DATAAREA1_TIMEZONE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "DATAAREA1_TIMEZONE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "TIMEZONEINFO1_TIMEBIAS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TIMEZONEINFO1_TIMEBIAS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "DATAAREA3_TIMEZONE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "DATAAREA3_TIMEZONE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "TIMEZONEINFO3_TIMEBIAS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TIMEZONEINFO3_TIMEBIAS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE1_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 6,
																"precision": 38
															},
															"sink": {
																"name": "INVENTITEMPRICE1_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTITEMPRICE1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE2_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 6,
																"precision": 38
															},
															"sink": {
																"name": "INVENTITEMPRICE2_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTITEMPRICE2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE3_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 6,
																"precision": 38
															},
															"sink": {
																"name": "INVENTITEMPRICE3_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE3_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTITEMPRICE3_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE4_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 6,
																"precision": 38
															},
															"sink": {
																"name": "INVENTITEMPRICE4_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE4_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTITEMPRICE4_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE6_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 6,
																"precision": 38
															},
															"sink": {
																"name": "INVENTITEMPRICE6_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE6_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTITEMPRICE6_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE7_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 6,
																"precision": 38
															},
															"sink": {
																"name": "INVENTITEMPRICE7_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE7_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTITEMPRICE7_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE8_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 6,
																"precision": 38
															},
															"sink": {
																"name": "INVENTITEMPRICE8_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE8_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTITEMPRICE8_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE9_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 6,
																"precision": 38
															},
															"sink": {
																"name": "INVENTITEMPRICE9_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE9_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTITEMPRICE9_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "MCRSALESLINEPRICEOVERRIDE1_RECID",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "MCRSALESLINEPRICEOVERRIDE1_RECID",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "MCRSALESLINEPRICEOVERRIDE2_REASONCODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "MCRSALESLINEPRICEOVERRIDE2_REASONCODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PDMSTATUS_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "PDMSTATUS_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															},
															"sink": {
																"name": "HK_JOB_RUN_ID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "HK_SOURCE_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														}
													],
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": true
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sql_server",
													"type": "DatasetReference",
													"parameters": {
														"p_src_table_name": {
															"value": "@pipeline().parameters.p_src_table_nm",
															"type": "Expression"
														},
														"p_src_schema_name": {
															"value": "@pipeline().parameters.p_src_schema_nm",
															"type": "Expression"
														},
														"p_ls_serverName": {
															"value": "@pipeline().globalParameters.nala_sql_serverName",
															"type": "Expression"
														},
														"p_ls_dbName": {
															"value": "@pipeline().globalParameters.nala_sql_dbName",
															"type": "Expression"
														},
														"p_ls_sqlUsername": {
															"value": "@pipeline().globalParameters.sql_userName",
															"type": "Expression"
														},
														"p_ls_sqlPassword": {
															"value": "@pipeline().globalParameters.sql_password",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_parquet",
													"type": "DatasetReference",
													"parameters": {
														"p_directory": {
															"value": "@pipeline().parameters.p_temp_directory",
															"type": "Expression"
														},
														"p_root_system": {
															"value": "@pipeline().globalParameters.rootDir",
															"type": "Expression"
														},
														"p_file_name": {
															"value": "@pipeline().parameters.p_temp_file_nm",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "nala_raw_load_failure_notification_1",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "custinvoicetrans_to_adls_nala",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('custinvoicetrans_to_adls_nala').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@replace(replace(replace(activity('custinvoicetrans_to_adls_nala').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('custinvoicetrans_to_adls_nala').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('custinvoicetrans_to_adls_nala').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "sql_nala_load_to_raw_fail_1",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "nala_raw_load_failure_notification_1",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": {
													"value": "@activity('custinvoicetrans_to_adls_nala').Error['message']",
													"type": "Expression"
												},
												"errorCode": "500"
											}
										},
										{
											"name": "custinvoicetrans_standardcost_nala_to_raw",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"additionalColumns": [
														{
															"name": "HK_JOB_RUN_ID",
															"value": {
																"value": "@coalesce(pipeline().RunId, -1)",
																"type": "Expression"
															}
														},
														{
															"name": "HK_SOURCE_NAME",
															"value": {
																"value": "@pipeline().parameters.p_src_nm",
																"type": "Expression"
															}
														},
														{
															"name": "LAST_MODIFIEDDATE",
															"value": {
																"value": "@pipeline().TriggerTime",
																"type": "Expression"
															}
														}
													],
													"sqlReaderQuery": {
														"value": "select cit1.STANDARDCOST_SOURCE\n, cit1.RECID\n, cit1.DATAAREAID\n, cit1.ITEMID\n, cit1.CONFIGID as INVENTDIM_CONFIGID\n, cit1.INVENTSITEID as INVENTDIM_INVENTSITEID\n, cit1.MODIFIEDDATETIME as INVENTITEMPRICE_MODIFIEDDATETIME\n, cit1.ACTIVATIONDATE as INVENTITEMPRICE_ACTIVATIONDATE\n, cit1.CREATEDDATETIME as INVENTITEMPRICE_CREATEDDATETIME\n, cit1.STANDARDCOST as INVENTITEMPRICE_STANDARDCOST\nfrom (select iip1.STANDARDCOST_SOURCE, iip1.RECID, iip1.DATAAREAID, iip1.ITEMID, iip1.CONFIGID, iip1.INVENTSITEID, iip1.MODIFIEDDATETIME, iip1.ACTIVATIONDATE, iip1.CREATEDDATETIME, iip1.STANDARDCOST\n\tfrom (select 'iip1' as STANDARDCOST_SOURCE, cit11.RECID, cit11.DATAAREAID, cit11.ITEMID, id11.CONFIGID, id11.INVENTSITEID, iip11.MODIFIEDDATETIME, iip11.ACTIVATIONDATE, iip11.CREATEDDATETIME\n\t\t\t, ((iip11.PRICE / isnull(nullif(iip11.PRICEUNIT, 0), 1)) + (iip11.MARKUP / isnull(nullif(iip11.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by cit11.RECID, cit11.DATAAREAID, cit11.ITEMID, id11.CONFIGID, id11.INVENTSITEID order by iip11.ACTIVATIONDATE desc, iip11.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.CUSTINVOICETRANS cit11\n\t\tinner join dbo.INVENTDIM id11 on\n\t\t\tcit11.DATAAREAID = id11.DATAAREAID and\n\t\t\tcit11.INVENTDIMID = id11.INVENTDIMID\n\t\tinner join (select iip111.DATAAREAID, iip111.ITEMID, id111.CONFIGID, id111.INVENTSITEID, iip111.MODIFIEDDATETIME, iip111.ACTIVATIONDATE, iip111.CREATEDDATETIME\n\t\t\t\t\t\t, iip111.PRICE, iip111.PRICEUNIT, iip111.MARKUP, iip111.PRICEQTY\n\t\t\t\t\tfrom dbo.INVENTITEMPRICE iip111\n\t\t\t\t\tinner join dbo.INVENTDIM id111 on\n\t\t\t\t\t\tiip111.DATAAREAID = id111.DATAAREAID and\n\t\t\t\t\t\tiip111.INVENTDIMID = id111.INVENTDIMID\n\t\t\t\t\twhere iip111.PRICETYPE = 0) iip11 on\n\t\t\tcit11.DATAAREAID = iip11.DATAAREAID and\n\t\t\tcit11.ITEMID = iip11.ITEMID and\n\t\t\tid11.CONFIGID = iip11.CONFIGID and\n\t\t\tid11.INVENTSITEID = iip11.INVENTSITEID and\n\t\t\tcit11.INVOICEDATE >= iip11.ACTIVATIONDATE) iip1\n\twhere iip1.ROW_NUM = 1\n\tunion all\n\tselect iip2.STANDARDCOST_SOURCE, iip2.RECID, iip2.DATAAREAID, iip2.ITEMID, null as CONFIGID, iip2.INVENTSITEID, iip2.MODIFIEDDATETIME, iip2.ACTIVATIONDATE, iip2.CREATEDDATETIME, iip2.STANDARDCOST\n\tfrom (select 'iip2' as STANDARDCOST_SOURCE, cit21.RECID, cit21.DATAAREAID, cit21.ITEMID, id21.INVENTSITEID, iip21.MODIFIEDDATETIME, iip21.ACTIVATIONDATE, iip21.CREATEDDATETIME\n\t\t\t, ((iip21.PRICE / isnull(nullif(iip21.PRICEUNIT, 0), 1)) + (iip21.MARKUP / isnull(nullif(iip21.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by cit21.RECID, cit21.DATAAREAID, cit21.ITEMID, id21.INVENTSITEID order by iip21.ACTIVATIONDATE desc, iip21.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.CUSTINVOICETRANS cit21\n\t\tinner join dbo.INVENTDIM id21 on\n\t\t\tcit21.DATAAREAID = id21.DATAAREAID and\n\t\t\tcit21.INVENTDIMID = id21.INVENTDIMID\n\t\tinner join (select iip211.DATAAREAID, iip211.ITEMID, id211.INVENTSITEID, iip211.MODIFIEDDATETIME, iip211.ACTIVATIONDATE, iip211.CREATEDDATETIME\n\t\t\t\t\t\t, iip211.PRICE, iip211.PRICEUNIT, iip211.MARKUP, iip211.PRICEQTY\n\t\t\t\t\tfrom dbo.INVENTITEMPRICE iip211\n\t\t\t\t\tinner join dbo.INVENTDIM id211 on\n\t\t\t\t\t\tiip211.DATAAREAID = id211.DATAAREAID and\n\t\t\t\t\t\tiip211.INVENTDIMID = id211.INVENTDIMID\n\t\t\t\t\twhere iip211.PRICETYPE = 0) iip21 on\n\t\t\tcit21.DATAAREAID = iip21.DATAAREAID and\n\t\t\tcit21.ITEMID = iip21.ITEMID and\n\t\t\tid21.INVENTSITEID = iip21.INVENTSITEID and\n\t\t\tcit21.INVOICEDATE >= iip21.ACTIVATIONDATE) iip2\n\twhere iip2.ROW_NUM = 1\n\tunion all\n\tselect iip3.STANDARDCOST_SOURCE, iip3.RECID, iip3.DATAAREAID, iip3.ITEMID, iip3.CONFIGID, null as INVENTSITEID, iip3.MODIFIEDDATETIME, iip3.ACTIVATIONDATE, iip3.CREATEDDATETIME, iip3.STANDARDCOST\n\tfrom (select 'iip3' as STANDARDCOST_SOURCE, cit31.RECID, cit31.DATAAREAID, cit31.ITEMID, id31.CONFIGID, iip31.MODIFIEDDATETIME, iip31.ACTIVATIONDATE, iip31.CREATEDDATETIME\n\t\t\t, ((iip31.PRICE / isnull(nullif(iip31.PRICEUNIT, 0), 1)) + (iip31.MARKUP / isnull(nullif(iip31.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by cit31.RECID, cit31.DATAAREAID, cit31.ITEMID, id31.CONFIGID order by iip31.ACTIVATIONDATE desc, iip31.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.CUSTINVOICETRANS cit31\n\t\tinner join dbo.INVENTDIM id31 on\n\t\t\tcit31.DATAAREAID = id31.DATAAREAID and\n\t\t\tcit31.INVENTDIMID = id31.INVENTDIMID\n\t\tinner join (select iip311.DATAAREAID, iip311.ITEMID, id311.CONFIGID, iip311.MODIFIEDDATETIME, iip311.ACTIVATIONDATE, iip311.CREATEDDATETIME\n\t\t\t\t\t\t, iip311.PRICE, iip311.PRICEUNIT, iip311.MARKUP, iip311.PRICEQTY\n\t\t\t\t\tfrom dbo.INVENTITEMPRICE iip311\n\t\t\t\t\tinner join dbo.INVENTDIM id311 on\n\t\t\t\t\t\tiip311.DATAAREAID = id311.DATAAREAID and\n\t\t\t\t\t\tiip311.INVENTDIMID = id311.INVENTDIMID\n\t\t\t\t\twhere iip311.PRICETYPE = 0) iip31 on\n\t\t\tcit31.DATAAREAID = iip31.DATAAREAID and\n\t\t\tcit31.ITEMID = iip31.ITEMID and\n\t\t\tid31.CONFIGID = iip31.CONFIGID and\n\t\t\tcit31.INVOICEDATE >= iip31.ACTIVATIONDATE) iip3\n\twhere iip3.ROW_NUM = 1\n\tunion all\n\tselect iip4.STANDARDCOST_SOURCE, iip4.RECID, iip4.DATAAREAID, iip4.ITEMID, null as CONFIGID, null as INVENTSITEID, iip4.MODIFIEDDATETIME, iip4.ACTIVATIONDATE, iip4.CREATEDDATETIME, iip4.STANDARDCOST\n\tfrom (select 'iip4' as STANDARDCOST_SOURCE, cit41.RECID, cit41.DATAAREAID, cit41.ITEMID, iip41.MODIFIEDDATETIME, iip41.ACTIVATIONDATE, iip41.CREATEDDATETIME\n\t\t\t, ((iip41.PRICE / isnull(nullif(iip41.PRICEUNIT, 0), 1)) + (iip41.MARKUP / isnull(nullif(iip41.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by cit41.RECID, cit41.DATAAREAID, cit41.ITEMID order by iip41.ACTIVATIONDATE desc, iip41.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.CUSTINVOICETRANS cit41\n\t\tinner join dbo.INVENTDIM id41 on\n\t\t\tcit41.DATAAREAID = id41.DATAAREAID and\n\t\t\tcit41.INVENTDIMID = id41.INVENTDIMID\n\t\tinner join (select iip411.DATAAREAID, iip411.ITEMID, iip411.MODIFIEDDATETIME, iip411.ACTIVATIONDATE, iip411.CREATEDDATETIME\n\t\t\t\t\t\t, iip411.PRICE, iip411.PRICEUNIT, iip411.MARKUP, iip411.PRICEQTY\n\t\t\t\t\tfrom dbo.INVENTITEMPRICE iip411\n\t\t\t\t\tinner join dbo.INVENTDIM id411 on\n\t\t\t\t\t\tiip411.DATAAREAID = id411.DATAAREAID and\n\t\t\t\t\t\tiip411.INVENTDIMID = id411.INVENTDIMID\n\t\t\t\t\twhere iip411.PRICETYPE = 0) iip41 on\n\t\t\tcit41.DATAAREAID = iip41.DATAAREAID and\n\t\t\tcit41.ITEMID = iip41.ITEMID and\n\t\t\tcit41.INVOICEDATE >= iip41.ACTIVATIONDATE) iip4\n\twhere iip4.ROW_NUM = 1\n\tunion all\n\tselect iip6.STANDARDCOST_SOURCE, null as RECID, iip6.DATAAREAID, iip6.ITEMID, iip6.CONFIGID, iip6.INVENTSITEID, iip6.MODIFIEDDATETIME, iip6.ACTIVATIONDATE, iip6.CREATEDDATETIME, iip6.STANDARDCOST\n\tfrom (select 'iip6' as STANDARDCOST_SOURCE, iip21.DATAAREAID, iip21.ITEMID, id21.CONFIGID, id21.INVENTSITEID, iip21.MODIFIEDDATETIME, iip21.ACTIVATIONDATE, iip21.CREATEDDATETIME\n\t\t\t, ((iip21.PRICE / isnull(nullif(iip21.PRICEUNIT, 0), 1)) + (iip21.MARKUP / isnull(nullif(iip21.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by iip21.DATAAREAID, iip21.ITEMID, id21.CONFIGID, id21.INVENTSITEID order by iip21.ACTIVATIONDATE desc, iip21.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.INVENTITEMPRICE iip21\n\t\tinner join dbo.INVENTDIM id21 on\n\t\t\tiip21.DATAAREAID = id21.DATAAREAID and\n\t\t\tiip21.INVENTDIMID = id21.INVENTDIMID\n\t\twhere iip21.PRICETYPE = 0) iip6\n\twhere iip6.ROW_NUM = 1\n\tunion all\n\tselect iip7.STANDARDCOST_SOURCE, null as RECID, iip7.DATAAREAID, iip7.ITEMID, null as CONFIGID, iip7.INVENTSITEID, iip7.MODIFIEDDATETIME, iip7.ACTIVATIONDATE, iip7.CREATEDDATETIME, iip7.STANDARDCOST\n\tfrom (select 'iip7' as STANDARDCOST_SOURCE, iip22.DATAAREAID, iip22.ITEMID, id22.INVENTSITEID, iip22.MODIFIEDDATETIME, iip22.ACTIVATIONDATE, iip22.CREATEDDATETIME\n\t\t\t, ((iip22.PRICE / isnull(nullif(iip22.PRICEUNIT, 0), 1)) + (iip22.MARKUP / isnull(nullif(iip22.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by iip22.DATAAREAID, iip22.ITEMID, id22.INVENTSITEID order by iip22.ACTIVATIONDATE desc, iip22.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.INVENTITEMPRICE iip22\n\t\tinner join dbo.INVENTDIM id22 on\n\t\t\tiip22.DATAAREAID = id22.DATAAREAID and\n\t\t\tiip22.INVENTDIMID = id22.INVENTDIMID\n\t\twhere iip22.PRICETYPE = 0) iip7\n\twhere iip7.ROW_NUM = 1\n\tunion all\n\tselect iip8.STANDARDCOST_SOURCE, null as RECID, iip8.DATAAREAID, iip8.ITEMID, iip8.CONFIGID, null as INVENTSITEID, iip8.MODIFIEDDATETIME, iip8.ACTIVATIONDATE, iip8.CREATEDDATETIME, iip8.STANDARDCOST\n\tfrom (select 'iip8' as STANDARDCOST_SOURCE, iip23.DATAAREAID, iip23.ITEMID, id23.CONFIGID, iip23.MODIFIEDDATETIME, iip23.ACTIVATIONDATE, iip23.CREATEDDATETIME\n\t\t\t, ((iip23.PRICE / isnull(nullif(iip23.PRICEUNIT, 0), 1)) + (iip23.MARKUP / isnull(nullif(iip23.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by iip23.DATAAREAID, iip23.ITEMID, id23.CONFIGID order by iip23.ACTIVATIONDATE desc, iip23.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.INVENTITEMPRICE iip23\n\t\tinner join dbo.INVENTDIM id23 on\n\t\t\tiip23.DATAAREAID = id23.DATAAREAID and\n\t\t\tiip23.INVENTDIMID = id23.INVENTDIMID\n\t\twhere iip23.PRICETYPE = 0) iip8\n\twhere iip8.ROW_NUM = 1\n\tunion all\n\tselect iip9.STANDARDCOST_SOURCE, null as RECID, iip9.DATAAREAID, iip9.ITEMID, null as CONFIGID, null as INVENTSITEID, iip9.MODIFIEDDATETIME, iip9.ACTIVATIONDATE, iip9.CREATEDDATETIME, iip9.STANDARDCOST\n\tfrom (select 'iip9' as STANDARDCOST_SOURCE, iip24.DATAAREAID, iip24.ITEMID, iip24.MODIFIEDDATETIME, iip24.ACTIVATIONDATE, iip24.CREATEDDATETIME\n\t\t\t, ((iip24.PRICE / isnull(nullif(iip24.PRICEUNIT, 0), 1)) + (iip24.MARKUP / isnull(nullif(iip24.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by iip24.DATAAREAID, iip24.ITEMID order by iip24.ACTIVATIONDATE desc, iip24.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.INVENTITEMPRICE iip24\n\t\twhere iip24.PRICETYPE = 0) iip9\n\twhere iip9.ROW_NUM = 1\n\t) cit1\noption(recompile, maxdop 16)",
														"type": "Expression"
													},
													"queryTimeout": "20:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "SnowflakeSink",
													"preCopyScript": {
														"value": "@concat('TRUNCATE TABLE ',pipeline().parameters.p_tgt_raw_schema_nm,'.',pipeline().parameters.p_tgt_raw_table_nm_2)",
														"type": "Expression"
													},
													"importSettings": {
														"type": "SnowflakeImportCopyCommand"
													}
												},
												"enableStaging": true,
												"stagingSettings": {
													"linkedServiceName": {
														"referenceName": "ls_blob_storage",
														"type": "LinkedServiceReference"
													},
													"path": {
														"value": "@pipeline().globalParameters.rootDir",
														"type": "Expression"
													}
												},
												"parallelCopies": 32,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															},
															"sink": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "STANDARDCOST_SOURCE",
																"type": "String"
															},
															"sink": {
																"name": "STANDARDCOST_SOURCE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "RECID",
																"type": "Int64"
															},
															"sink": {
																"name": "RECID",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "DATAAREAID",
																"type": "String"
															},
															"sink": {
																"name": "DATAAREAID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "ITEMID",
																"type": "String"
															},
															"sink": {
																"name": "ITEMID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "INVENTDIM_CONFIGID",
																"type": "String"
															},
															"sink": {
																"name": "INVENTDIM_CONFIGID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "INVENTDIM_INVENTSITEID",
																"type": "String"
															},
															"sink": {
																"name": "INVENTDIM_INVENTSITEID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "INVENTITEMPRICE_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE_ACTIVATIONDATE",
																"type": "DateTime"
															},
															"sink": {
																"name": "INVENTITEMPRICE_ACTIVATIONDATE",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE_CREATEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "INVENTITEMPRICE_CREATEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE_STANDARDCOST",
																"type": "Decimal"
															},
															"sink": {
																"name": "INVENTITEMPRICE_STANDARDCOST",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "LAST_MODIFIEDDATE",
																"type": "String"
															},
															"sink": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														}
													]
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sql_server",
													"type": "DatasetReference",
													"parameters": {
														"p_src_table_name": {
															"value": "@pipeline().parameters.p_src_table_nm",
															"type": "Expression"
														},
														"p_src_schema_name": {
															"value": "@pipeline().parameters.p_src_schema_nm",
															"type": "Expression"
														},
														"p_ls_serverName": {
															"value": "@pipeline().globalParameters.nala_sql_serverName",
															"type": "Expression"
														},
														"p_ls_dbName": {
															"value": "@pipeline().globalParameters.nala_sql_dbName",
															"type": "Expression"
														},
														"p_ls_sqlUsername": {
															"value": "@pipeline().globalParameters.sql_userName",
															"type": "Expression"
														},
														"p_ls_sqlPassword": {
															"value": "@pipeline().globalParameters.sql_password",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_snowflake",
													"type": "DatasetReference",
													"parameters": {
														"p_tgt_table_name": {
															"value": "@pipeline().parameters.p_tgt_raw_table_nm_2",
															"type": "Expression"
														},
														"p_tgt_schema_name": {
															"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
															"type": "Expression"
														},
														"p_ls_DbName": {
															"value": "@pipeline().globalParameters.snow_rawDb",
															"type": "Expression"
														},
														"p_ls_Env": {
															"value": "@pipeline().globalParameters.environment",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "nala_raw_load_failure_notification_2",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "custinvoicetrans_standardcost_nala_to_raw",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('custinvoicetrans_standardcost_nala_to_raw').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@replace(replace(replace(activity('custinvoicetrans_standardcost_nala_to_raw').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('custinvoicetrans_standardcost_nala_to_raw').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('custinvoicetrans_standardcost_nala_to_raw').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "sql_nala_load_to_raw_fail_2",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "nala_raw_load_failure_notification_2",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": {
													"value": "@activity('custinvoicetrans_standardcost_nala_to_raw').Error['message']",
													"type": "Expression"
												},
												"errorCode": "500"
											}
										},
										{
											"name": "salesline_cogs_fifo_nala_to_raw",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"additionalColumns": [
														{
															"name": "HK_JOB_RUN_ID",
															"value": {
																"value": "@coalesce(pipeline().RunId, -1)",
																"type": "Expression"
															}
														},
														{
															"name": "HK_SOURCE_NAME",
															"value": {
																"value": "@pipeline().parameters.p_src_nm",
																"type": "Expression"
															}
														},
														{
															"name": "LAST_MODIFIEDDATE",
															"value": {
																"value": "@pipeline().TriggerTime",
																"type": "Expression"
															}
														}
													],
													"sqlReaderQuery": {
														"value": "SELECT\nsl1.DATAAREAID AS SALESLINE1_DATAAREAID\n,sl1.INVENTTRANSID AS SALESLINE1_INVENTTRANSID\n,sl1.CURRENCYCODE AS SALESLINE1_CURRENCYCODE\n,sl1.SALESSTATUS AS SALESLINE1_SALESSTATUS\n,sl1.COSTPRICE AS SALESLINE1_COSTPRICE\n,sl1.SALESQTY AS SALESLINE1_SALESQTY\n,sl1.CREATEDDATETIME AS SALESLINE1_CREATEDDATETIME\n,isnull(sl1.MODIFIEDDATETIME, '1950-01-01') AS SALESLINE1_MODIFIEDDATETIME\n,dpt1.RECID AS DIRPARTYTABLE1_RECID\n,dpt1.DATAAREA AS DIRPARTYTABLE1_DATAAREA\n, isnull(dpt1.MODIFIEDDATETIME, '1950-01-01') AS DIRPARTY1_MODIFIEDDATETIME\n,l1.PRIMARYFORLEGALENTITY AS LEDGER1_PRIMARYFORLEGALENTITY\n,l1.ACCOUNTINGCURRENCY AS LEDGER1_ACCOUNTINGCURRENCY\n,l1.DEFAULTEXCHANGERATETYPE AS LEDGER1_DEFAULTEXCHANGERATETYPE\n, isnull(l1.MODIFIEDDATETIME, '1950-01-01') AS LEDGER1_MODIFIEDDATETIME\n,it1.DATAAREAID AS INVENTTRANS1_DATAAREAID\n,it1.INVENTTRANSID AS INVENTTRANS1_INVENTTRANSID\n,it1.KITPARENTINVENTTRANSID AS INVENTTRANS1_KITPARENTINVENTTRANSID\n,it1.KITBOMLEVEL AS INVENTTRANS1_KITBOMLEVEL\n,it1.COSTAMOUNTPOSTED AS INVENTTRANS1_COSTAMOUNTPOSTED\n,it1.COSTAMOUNTADJUSTMENT AS INVENTTRANS1_COSTAMOUNTADJUSTMENT\n,it1.KITIDENTIFIER AS INVENTTRANS1_KITIDENTIFIER\n, isnull(it1.MODIFIEDDATETIME, '1950-01-01') AS INVENTTRANS1_MODIFIEDDATETIME\n,er1.FROMCURRENCYCODE AS EXCHANGERATE1_FROMCURRENCYCODE\n,er1.TOCURRENCYCODE AS EXCHANGERATE1_TOCURRENCYCODE\n,er1.DATAAREA AS EXCHANGERATE1_DATAAREA\n,er1.NORM AS EXCHANGERATE1_NORM\n,er1.EXCHANGERATE AS EXCHANGERATE1_EXCHANGERATE\n,er1.EXCHRATE AS EXCHANGERATE1_EXCHRATE\n,er1.VALIDFROM AS EXCHANGERATE1_VALIDFROM\n,er1.VALIDTO AS EXCHANGERATE1_VALIDTO\n, isnull(er1.MODIFIEDDATETIME, '1950-01-01') AS EXCHANGERATE1_MODIFIEDDATETIME\n,(SELECT MAX(LastUpdateDate) \n FROM (VALUES (sl1.MODIFIEDDATETIME)\n\t, (ISNULL(l1.MODIFIEDDATETIME, '1950-01-01'))\n\t, (ISNULL(it1.MODIFIEDDATETIME, '1950-01-01'))\n\t, (ISNULL(er1.MODIFIEDDATETIME, '1950-01-01'))\n ) AS UpdateDate(LastUpdateDate)) AS LATEST_MODIFIEDDATETIME\nFROM dbo.SALESLINE sl1\ninner join dbo.DIRPARTYTABLE dpt1 on\n\tsl1.partition = dpt1.PARTITION\n\tAND sl1.DATAAREAID = dpt1.DATAAREA\ninner join dbo.[LEDGER] l1 ON\n\tl1.PARTITION = dpt1.PARTITION\n\tAND dpt1.RECID = l1.PRIMARYFORLEGALENTITY  --14,877,027\nLEFT join (SELECT it10.DATAAREAID, it10.INVENTTRANSID, it10.KITPARENTINVENTTRANSID, it10.KITBOMLEVEL, it10.KITIDENTIFIER, it10.PARTITION\n\t\t\t\t, sum(it10.COSTAMOUNTPOSTED) as COSTAMOUNTPOSTED\n\t\t\t\t, sum(it10.COSTAMOUNTADJUSTMENT) as COSTAMOUNTADJUSTMENT\n\t\t\t\t, max(it10.MODIFIEDDATETIME) as MODIFIEDDATETIME\n\t\t\tFROM (SELECT it100.DATAAREAID, ito100.INVENTTRANSID,it100.PARTITION --this inner select : 17,355,272 00:03:55, moddt>=2025.01.01\n\t\t\t\t\t, CASE WHEN kpit100.KITINVENTTRANSID IS NULL THEN NULL\n\t\t\t\t\t\tELSE ISNULL(kpit100.KITPARENTINVENTTRANSID, '')\n\t\t\t\t\t\tEND AS KITPARENTINVENTTRANSID\n\t\t\t\t\t, CASE WHEN kpit100.KITINVENTTRANSID IS NULL THEN NULL\n\t\t\t\t\t\tELSE ISNULL(kpit100.KITBOMLEVEL, 0)\n\t\t\t\t\t\tEND AS KITBOMLEVEL\n\t\t\t\t\t, CASE WHEN kpit100.KITINVENTTRANSID IS NOT NULL AND ISNULL(kpit100.KITBOMLEVEL, 0) = 0 THEN 'Kit'\n\t\t\t\t\t\t\tWHEN kpit100.KITINVENTTRANSID IS NOT NULL AND ISNULL(kpit100.KITBOMLEVEL, 0) != 0 THEN 'KitComponent'\n\t\t\t\t\t\tELSE NULL\n\t\t\t\t\t\tEND AS KITIDENTIFIER\n\t\t\t\t\t, it100.COSTAMOUNTPOSTED, it100.COSTAMOUNTADJUSTMENT\n\t\t\t\t\t, (SELECT MAX(i) FROM (VALUES (it100.MODIFIEDDATETIME), (ito100.MODIFIEDDATETIME)) AS T(i)) AS MODIFIEDDATETIME\n\t\t\t\tFROM dbo.INVENTTRANS it100\n\t\t\t\tINNER JOIN (SELECT DATAAREAID, RECID, PARTITION\n\t\t\t\t\t\t\t\t,INVENTTRANSID --,MAX(INVENTTRANSID) AS INVENTTRANSID  --\n\t\t\t\t\t\t\t\t,MODIFIEDDATETIME --, MAX(MODIFIEDDATETIME) AS MODIFIEDDATETIME  --\n\t\t\t\t\t\t\tFROM dbo.INVENTTRANSORIGIN\n\t\t\t\t\t\t\t--GROUP BY DATAAREAID, RECID\n\t\t\t\t\t\t\t) ito100 ON\n\t\t\t\t\t\t\tit100.PARTITION = ito100.PARTITION\n\t\t\t\t\t\t\t\tAND it100.DATAAREAID = ito100.DATAAREAID\n\t\t\t\t\t\t\t\tAND it100.INVENTTRANSORIGIN = ito100.RECID\n\t\t\t\tLEFT JOIN (SELECT DATAAREAID, KITINVENTTRANSID, PARTITION\n\t\t\t\t\t\t\t\t, MAX(KITPARRENTINVENTTRANSID) AS KITPARENTINVENTTRANSID\n\t\t\t\t\t\t\t\t, MAX(KITBOMLEVEL) AS KITBOMLEVEL\n\t\t\t\t\t\t\tFROM dbo.KITSALESLINE\n\t\t\t\t\t\t\tGROUP BY DATAAREAID, KITINVENTTRANSID,PARTITION\n\t\t\t\t\t\t\t) kpit100 ON\n\t\t\t\t\t\t\t\tito100.PARTITION = kpit100.PARTITION\n\t\t\t\t\t\t\t\tAND ito100.DATAAREAID = kpit100.DATAAREAID\n\t\t\t\t\t\t\t\tAND ito100.INVENTTRANSID = kpit100.KITINVENTTRANSID\n\nWHERE it100.modifieddatetime >= CAST(DATEPART(YEAR,DATEADD(YEAR,-5,GETDATE())) AS CHAR(4))+'-01-01'\n\n\t\t\t\t) it10\n\t\t\tgroup by it10.DATAAREAID, it10.INVENTTRANSID, it10.KITPARENTINVENTTRANSID, it10.KITBOMLEVEL, it10.KITIDENTIFIER, it10.PARTITION\n\n\t\t\tunion all\n\n\t\t\tselect it20.DATAAREAID, it20.INVENTTRANSID, it20.KITPARENTINVENTTRANSID, it20.KITBOMLEVEL, it20.KITIDENTIFIER, it20.partition\n\t\t\t\t, sum(it20.COSTAMOUNTPOSTED) as COSTAMOUNTPOSTED\n\t\t\t\t, sum(it20.COSTAMOUNTADJUSTMENT) as COSTAMOUNTADJUSTMENT\n\t\t\t\t, max(it20.MODIFIEDDATETIME) as MODIFIEDDATETIME\n\t\t\tfrom (select it200.DATAAREAID, kpit200.KITPARENTINVENTTRANSID as INVENTTRANSID, it200.PARTITION\n\t\t\t\t\t, case when isnull(kpit200.KITBOMLEVEL - 1, 0) = 0 then ''\n\t\t\t\t\t\telse isnull(kpit200.KITPARENTINVENTTRANSID, '')\n\t\t\t\t\t\tend as KITPARENTINVENTTRANSID\n\t\t\t\t\t, isnull(kpit200.KITBOMLEVEL - 1, 0) as KITBOMLEVEL\n\t\t\t\t\t, case when isnull(kpit200.KITBOMLEVEL - 1, 0) = 0 then 'Kit'\n\t\t\t\t\t\telse 'KitComponent'\n\t\t\t\t\t\tend as KITIDENTIFIER\n\t\t\t\t\t, it200.COSTAMOUNTPOSTED, it200.COSTAMOUNTADJUSTMENT\n\t\t\t\t\t, (select max(i) from (values (it200.MODIFIEDDATETIME), (ito200.MODIFIEDDATETIME)) AS T(i)) as MODIFIEDDATETIME\n\t\t\t\tfrom dbo.INVENTTRANS it200\n\t\t\t\tinner join (select DATAAREAID, RECID, partition\n\t\t\t\t\t\t\t\t,INVENTTRANSID --, max(INVENTTRANSID) as INVENTTRANSID\n\t\t\t\t\t\t\t\t,MODIFIEDDATETIME --, max(MODIFIEDDATETIME) as MODIFIEDDATETIME\n\t\t\t\t\t\t\tfrom dbo.INVENTTRANSORIGIN\n\t\t\t\t\t\t\t--group by DATAAREAID, RECID, partition\n\t\t\t\t\t\t\t) ito200 \n\t\t\t\t\t\t\t\tON it200.PARTITION = ito200.partition\n\t\t\t\t\t\t\t\t\tAND it200.DATAAREAID = ito200.DATAAREAID\n\t\t\t\t\t\t\t\t\tAND it200.INVENTTRANSORIGIN = ito200.RECID\n\t\t\t\tinner join (select DATAAREAID, KITINVENTTRANSID, partition\n\t\t\t\t\t\t\t\t, max(KITPARRENTINVENTTRANSID) as KITPARENTINVENTTRANSID\n\t\t\t\t\t\t\t\t, max(KITBOMLEVEL) as KITBOMLEVEL\n\t\t\t\t\t\t\tfrom dbo.KITSALESLINE\n\t\t\t\t\t\t\tgroup by DATAAREAID, KITINVENTTRANSID, partition) kpit200 on\n\t\t\t\t\tito200.partition = kpit200.partition\n\t\t\t\t\tAND ito200.DATAAREAID = kpit200.DATAAREAID\n\t\t\t\t\tAND ito200.INVENTTRANSID = kpit200.KITINVENTTRANSID\n\nWHERE it200.modifieddatetime >= CAST(DATEPART(YEAR,DATEADD(YEAR,-5,GETDATE())) AS CHAR(4))+'-01-01'\n\n\t\t\t\t) it20\n\t\t\tgroup by it20.DATAAREAID, it20.INVENTTRANSID, it20.KITPARENTINVENTTRANSID, it20.KITBOMLEVEL, it20.KITIDENTIFIER, it20.PARTITION\n\t\t\t) it1 ON\n            sl1.PARTITION = it1.PARTITION\n\t\t\t\tAND sl1.DATAAREAID = it1.DATAAREAID \n\t\t\t\tAND sl1.INVENTTRANSID = it1.INVENTTRANSID\n\n\nLEFT join (select ercp10.FROMCURRENCYCODE\n\t\t\t\t, ercp10.TOCURRENCYCODE\n\t\t\t\t, ercp10.DATAAREA\n\t\t\t\t, ercp10.NORM\n\t\t\t\t, er10.EXCHANGERATE\n\t\t\t\t, case when ercp10.NORM = 0 then er10.EXCHANGERATE / 100\n\t\t\t\t\t\twhen ercp10.NORM = 1 then 100 / er10.EXCHANGERATE\n\t\t\t\t\tend as EXCHRATE\n\t\t\t\t, er10.VALIDFROM\n\t\t\t\t, er10.VALIDTO\n\t\t\t\t, (select max(i) from (values (ercp10.MODIFIEDDATETIME), (er10.MODIFIEDDATETIME)) AS T(i)) as MODIFIEDDATETIME\n\t\t\tfrom (select ercp100.FROMCURRENCYCODE\n\t\t\t\t\t, ercp100.TOCURRENCYCODE\n\t\t\t\t\t, ercp100.RECID\n\t\t\t\t\t, ercp100.EXCHANGERATETYPE\n\t\t\t\t\t, ercp100.NORM\n\t\t\t\t\t, dpt100.DATAAREA\n\t\t\t\t\t, (select max(i) from (values (ercp100.MODIFIEDDATETIME), (l100.MODIFIEDDATETIME), (dpt100.MODIFIEDDATETIME)) AS T(i)) as MODIFIEDDATETIME\n\t\t\t\tfrom (select FROMCURRENCYCODE\n\t\t\t\t\t\t, TOCURRENCYCODE\n\t\t\t\t\t\t, RECID\n\t\t\t\t\t\t, EXCHANGERATETYPE\n\t\t\t\t\t\t, 0 as NORM\n\t\t\t\t\t\t, MODIFIEDDATETIME\n\t\t\t\t\tfrom dbo.EXCHANGERATECURRENCYPAIR\n\t\t\t\t\tunion\n\t\t\t\t\tselect TOCURRENCYCODE\n\t\t\t\t\t\t, FROMCURRENCYCODE\n\t\t\t\t\t\t, RECID\n\t\t\t\t\t\t, EXCHANGERATETYPE\n\t\t\t\t\t\t, 1 as NORM\n\t\t\t\t\t\t, MODIFIEDDATETIME\n\t\t\t\t\tfrom dbo.EXCHANGERATECURRENCYPAIR\n\t\t\t\t\t) ercp100\n\t\t\t\tinner join dbo.LEDGER l100 on\n\t\t\t\t\tercp100.EXCHANGERATETYPE = l100.DEFAULTEXCHANGERATETYPE and\n\t\t\t\t\tercp100.FROMCURRENCYCODE = l100.ACCOUNTINGCURRENCY\n\t\t\t\tinner join dbo.DIRPARTYTABLE dpt100 on\n\t\t\t\t\tl100.PRIMARYFORLEGALENTITY = dpt100.RECID\n\t\t\t\t) ercp10\n\t\t\tinner join dbo.EXCHANGERATE er10 on\n\t\t\t\tercp10.RECID = er10.EXCHANGERATECURRENCYPAIR\n\t\t\t) er1 on\n\tsl1.CURRENCYCODE = er1.TOCURRENCYCODE and\n\tsl1.CREATEDDATETIME between er1.VALIDFROM and er1.VALIDTO and\n\tsl1.DATAAREAID = er1.DATAAREA\nWHERE sl1.MODIFIEDDATETIME >= CAST(DATEPART(YEAR,DATEADD(YEAR,-5,GETDATE())) AS CHAR(4))+'-01-01'\n\tOR ISNULL(l1.MODIFIEDDATETIME, '1950-01-01') >= CAST(DATEPART(YEAR,DATEADD(YEAR,-5,GETDATE())) AS CHAR(4))+'-01-01'\n\tOR ISNULL(it1.MODIFIEDDATETIME, '1950-01-01') >= CAST(DATEPART(YEAR,DATEADD(YEAR,-5,GETDATE())) AS CHAR(4))+'-01-01'\n\t--OR ISNULL(er1.MODIFIEDDATETIME, '1950-01-01') >= CAST(DATEPART(YEAR,DATEADD(YEAR,-5,GETDATE())) AS CHAR(4))+'-01-01'\noption(recompile, maxdop 16)\n\n",
														"type": "Expression"
													},
													"queryTimeout": "20:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "SnowflakeSink",
													"preCopyScript": {
														"value": "@concat('TRUNCATE TABLE ',pipeline().parameters.p_tgt_raw_schema_nm,'.',pipeline().parameters.p_tgt_raw_table_nm_3)",
														"type": "Expression"
													},
													"importSettings": {
														"type": "SnowflakeImportCopyCommand"
													}
												},
												"enableStaging": true,
												"stagingSettings": {
													"linkedServiceName": {
														"referenceName": "ls_blob_storage",
														"type": "LinkedServiceReference"
													},
													"path": {
														"value": "@pipeline().globalParameters.rootDir",
														"type": "Expression"
													}
												},
												"parallelCopies": 32,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															},
															"sink": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_DATAAREAID",
																"type": "String"
															},
															"sink": {
																"name": "SALESLINE1_DATAAREAID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_INVENTTRANSID",
																"type": "String"
															},
															"sink": {
																"name": "SALESLINE1_INVENTTRANSID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_CURRENCYCODE",
																"type": "String"
															},
															"sink": {
																"name": "SALESLINE1_CURRENCYCODE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_SALESSTATUS",
																"type": "Int32"
															},
															"sink": {
																"name": "SALESLINE1_SALESSTATUS",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_COSTPRICE",
																"type": "Decimal"
															},
															"sink": {
																"name": "SALESLINE1_COSTPRICE",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_SALESQTY",
																"type": "Decimal"
															},
															"sink": {
																"name": "SALESLINE1_SALESQTY",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_CREATEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "SALESLINE1_CREATEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "SALESLINE1_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE1_RECID",
																"type": "Int64"
															},
															"sink": {
																"name": "DIRPARTYTABLE1_RECID",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE1_DATAAREA",
																"type": "String"
															},
															"sink": {
																"name": "DIRPARTYTABLE1_DATAAREA",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "DIRPARTY1_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "DIRPARTYTABLE1_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "LEDGER1_PRIMARYFORLEGALENTITY",
																"type": "Int64"
															},
															"sink": {
																"name": "LEDGER1_PRIMARYFORLEGALENTITY",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "LEDGER1_ACCOUNTINGCURRENCY",
																"type": "String"
															},
															"sink": {
																"name": "LEDGER1_ACCOUNTINGCURRENCY",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "LEDGER1_DEFAULTEXCHANGERATETYPE",
																"type": "Int64"
															},
															"sink": {
																"name": "LEDGER1_DEFAULTEXCHANGERATETYPE",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "LEDGER1_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "LEDGER1_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "INVENTTRANS1_DATAAREAID",
																"type": "String"
															},
															"sink": {
																"name": "INVENTTRANS1_DATAAREAID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "INVENTTRANS1_INVENTTRANSID",
																"type": "String"
															},
															"sink": {
																"name": "INVENTTRANS1_INVENTTRANSID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "INVENTTRANS1_KITPARENTINVENTTRANSID",
																"type": "String"
															},
															"sink": {
																"name": "INVENTTRANS1_KITPARENTINVENTTRANSID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "INVENTTRANS1_KITBOMLEVEL",
																"type": "Int32"
															},
															"sink": {
																"name": "INVENTTRANS1_KITBOMLEVEL",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "INVENTTRANS1_COSTAMOUNTPOSTED",
																"type": "Decimal"
															},
															"sink": {
																"name": "INVENTTRANS1_COSTAMOUNTPOSTED",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "INVENTTRANS1_COSTAMOUNTADJUSTMENT",
																"type": "Decimal"
															},
															"sink": {
																"name": "INVENTTRANS1_COSTAMOUNTADJUSTMENT",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "INVENTTRANS1_KITIDENTIFIER",
																"type": "String"
															},
															"sink": {
																"name": "INVENTTRANS1_KITIDENTIFIER",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "INVENTTRANS1_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "INVENTTRANS1_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "EXCHANGERATE1_FROMCURRENCYCODE",
																"type": "String"
															},
															"sink": {
																"name": "EXCHANGERATE1_FROMCURRENCYCODE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "EXCHANGERATE1_TOCURRENCYCODE",
																"type": "String"
															},
															"sink": {
																"name": "EXCHANGERATE1_TOCURRENCYCODE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "EXCHANGERATE1_DATAAREA",
																"type": "String"
															},
															"sink": {
																"name": "EXCHANGERATE1_DATAAREA",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "EXCHANGERATE1_NORM",
																"type": "Int32"
															},
															"sink": {
																"name": "EXCHANGERATE1_NORM",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "EXCHANGERATE1_EXCHANGERATE",
																"type": "Decimal"
															},
															"sink": {
																"name": "EXCHANGERATE1_EXCHANGERATE",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "EXCHANGERATE1_EXCHRATE",
																"type": "Decimal"
															},
															"sink": {
																"name": "EXCHANGERATE1_EXCHRATE",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "EXCHANGERATE1_VALIDFROM",
																"type": "DateTime"
															},
															"sink": {
																"name": "EXCHANGERATE1_VALIDFROM",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "EXCHANGERATE1_VALIDTO",
																"type": "DateTime"
															},
															"sink": {
																"name": "EXCHANGERATE1_VALIDTO",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "EXCHANGERATE1_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "EXCHANGERATE1_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														}
													]
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sql_server",
													"type": "DatasetReference",
													"parameters": {
														"p_src_table_name": "n/a",
														"p_src_schema_name": "n/a",
														"p_ls_serverName": {
															"value": "@pipeline().globalParameters.nala_sql_serverName",
															"type": "Expression"
														},
														"p_ls_dbName": {
															"value": "@pipeline().globalParameters.nala_sql_dbName",
															"type": "Expression"
														},
														"p_ls_sqlUsername": {
															"value": "@pipeline().globalParameters.sql_userName",
															"type": "Expression"
														},
														"p_ls_sqlPassword": {
															"value": "@pipeline().globalParameters.sql_password",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_snowflake",
													"type": "DatasetReference",
													"parameters": {
														"p_tgt_table_name": {
															"value": "@pipeline().parameters.p_tgt_raw_table_nm_3",
															"type": "Expression"
														},
														"p_tgt_schema_name": {
															"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
															"type": "Expression"
														},
														"p_ls_DbName": {
															"value": "@pipeline().globalParameters.snow_rawDb",
															"type": "Expression"
														},
														"p_ls_Env": {
															"value": "@pipeline().globalParameters.environment",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "nala_raw_load_failure_notification_3",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "salesline_cogs_fifo_nala_to_raw",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('salesline_cogs_fifo_nala_to_raw').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@replace(replace(replace(activity('salesline_cogs_fifo_nala_to_raw').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('salesline_cogs_fifo_nala_to_raw').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('salesline_cogs_fifo_nala_to_raw').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "sql_nala_load_to_raw_fail_3",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "nala_raw_load_failure_notification_3",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": {
													"value": "@activity('salesline_cogs_fifo_nala_to_raw').Error['message']",
													"type": "Expression"
												},
												"errorCode": "500"
											}
										}
									]
								},
								{
									"value": "2",
									"activities": [
										{
											"name": "custinvoicetrans_to_adls_retail",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"additionalColumns": [
														{
															"name": "HK_JOB_RUN_ID",
															"value": {
																"value": "@coalesce(pipeline().RunId, -1)",
																"type": "Expression"
															}
														},
														{
															"name": "HK_SOURCE_NAME",
															"value": {
																"value": "@pipeline().parameters.p_src_nm",
																"type": "Expression"
															}
														}
													],
													"sqlReaderQuery": {
														"value": "SELECT cit1.RECID \n,cit1.DATAAREAID \n,cit1.ITEMID \n,cit1.CURRENCYCODE \n,cit1.DEFAULTDIMENSION \n,cit1.TRANSACTIONCODE \n,cit1.INVENTDIMID \n,cit1.DELIVERYPOSTALADDRESS \n,cit1.MCRDLVMODE \n,cit1.SALESCATEGORY \n,cit1.RETURNDISPOSITIONCODEID \n,cit1.SALESGROUP \n,cit1.ORIGSALESID \n,cit1.TAXGROUP \n,cit1.TAXITEMGROUP \n,cit1.SALESUNIT \n,cit1.DLVDATE \n,cit1.INVOICEDATE \n,cit1.RETURNARRIVALDATE \n,cit1.RETURNCLOSEDDATE \n,cit1.INVENTTRANSID \n,cit1.INVOICEID \n,cit1.LINENUM \n,cit1.INVENTQTY \n,cit1.QTY \n,cit1.QTYPHYSICAL \n,cit1.PRICEUNIT \n,cit1.SALESPRICE \n,cit1.COMMISSAMOUNTCUR \n,cit1.COMMISSAMOUNTMST \n,cit1.LINEAMOUNT \n,cit1.LINEAMOUNTMST \n,cit1.TAXAMOUNT \n,cit1.TAXAMOUNTMST \n,cit1.DISCPERCENT \n,cit1.DISCAMOUNT \n,cit1.LINEDISC \n,cit1.LINEPERCENT \n,cit1.SUMLINEDISC \n,cit1.SUMLINEDISCMST \n,cit1.MODIFIEDDATETIME \n,def1.BUSINESS_UNIT as DEFAULTDIMENSION_BUSINESS_UNIT \n,def1.DEFAULTDIMENSION_MODIFIEDDATETIME \n,st1.SMMCAMPAIGNID as SALESTABLE_SMMCAMPAIGNID \n,st1.COMMISSIONGROUP as SALESTABLE_COMMISSIONGROUP \n,st1.INVOICEACCOUNT as SALESTABLE_INVOICEACCOUNT \n,st1.MARKUPGROUP as SALESTABLE_MARKUPGROUP \n,st1.RETURNREASONCODEID as SALESTABLE_RETURNREASONCODEID \n,st1.LINEDISC as SALESTABLE_LINEDISC \n,st1.SALESPOOLID as SALESTABLE_SALESPOOLID \n,st1.PRICEGROUPID as SALESTABLE_PRICEGROUPID \n,st1.WORKERSALESRESPONSIBLE as SALESTABLE_WORKERSALESRESPONSIBLE \n,null as SALESTABLE_ATAGENT \n,st1.SHIPCARRIERBLINDSHIPMENT as SALESTABLE_SHIPCARRIERBLINDSHIPMENT \n,st1.SHIPCARRIEREXPEDITEDSHIPMENT as SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT \n,null as SALESTABLE_ORDERBLOCKED \n,st1.MCRORDERSTOPPED as SALESTABLE_MCRORDERSTOPPED \n,st1.SHIPCARRIERFUELSURCHARGE as SALESTABLE_SHIPCARRIERFUELSURCHARGE \n,st1.INVENTSITEID as SALESTABLE_INVENTSITEID \n,st1.MODIFIEDDATETIME as SALESTABLE_MODIFIEDDATETIME \n,cij1.ORDERACCOUNT as CUSTINVOICEJOUR_ORDERACCOUNT \n,cij1.CUSTGROUP as CUSTINVOICEJOUR_CUSTGROUP \n,cij1.INVOICEPOSTALADDRESS as CUSTINVOICEJOUR_INVOICEPOSTALADDRESS \n,cij1.DLVTERM as CUSTINVOICEJOUR_DLVTERM \n,cij1.PAYMENT as CUSTINVOICEJOUR_PAYMENT \n,cij1.RETURNREASONCODEID as CUSTINVOICEJOUR_RETURNREASONCODEID \n,cij1.SALESORIGINID as CUSTINVOICEJOUR_SALESORIGINID \n,cij1.INVENTLOCATIONID as CUSTINVOICEJOUR_INVENTLOCATIONID \n,cij1.WORKERSALESTAKER as CUSTINVOICEJOUR_WORKERSALESTAKER \n,cij1.DOCUMENTDATE as CUSTINVOICEJOUR_DOCUMENTDATE \n,cij1.DUEDATE as CUSTINVOICEJOUR_DUEDATE \n,cij1.LEDGERVOUCHER as CUSTINVOICEJOUR_LEDGERVOUCHER \n,cij1.PURCHASEORDER as CUSTINVOICEJOUR_PURCHASEORDER \n,cij1.SALESTYPE as CUSTINVOICEJOUR_SALESTYPE\n,cij1.JOURNALNUM as CUSTINVOICEJOUR_JOURNALNUM\n,cij1.JOURNALNAME as CUSTINVOICEJOUR_JOURNALNAME\n,cij1.MODIFIEDDATETIME as CUSTINVOICEJOUR_MODIFIEDDATETIME \n,id1.CONFIGID as INVENTDIM1_CONFIGID \n,id1.INVENTSITEID as INVENTDIM1_INVENTSITEID\n,id1.MODIFIEDDATETIME as INVENTDIM1_MODIFIEDDATETIME \n,null as INVENTDIMCOMBINATION_PDMSTATUS \n,idc1.MODIFIEDDATETIME as INVENTDIMCOMBINATION_MODIFIEDDATETIME \n,null as SALESLINE1_TPX_RETURNREASONCODEID \n,sl1.LINEDISC as SALESLINE1_LINEDISC \n,sl1.LINEPERCENT as SALESLINE1_LINEPERCENT \n,sl1.COMPLETE as SALESLINE1_COMPLETE \n,null as SALESLINE1_ORDERBLOCKED \n,sl1.SCRAP as SALESLINE1_SCRAP \n,sl1.STOCKEDPRODUCT as SALESLINE1_STOCKEDPRODUCT \n,null as SALESLINE1_TPX_MANUFACTUREDATE \n,null as SALESLINE1_TPX_RELATEDORDERDATE \n,sl1.CREATEDDATETIME as SALESLINE1_CREATEDDATETIME \n,null as SALESLINE1_TPX_PRODUCTIONTIME \n,null as SALESLINE1_TPX_REGISTRYNUMBER \n,sl1.MODIFIEDDATETIME as SALESLINE1_MODIFIEDDATETIME \n,tet1.ENUMVALUELABEL as TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS \n,tet2.ENUMVALUELABEL as TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER \n,tet3.ENUMVALUELABEL as TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER \n,tet4.ENUMVALUELABEL as TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE \n,tet5.ENUMVALUELABEL as TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE \n,tet6.ENUMVALUELABEL as TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE \n,tet7.ENUMVALUELABEL as TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE \n,tet8.ENUMVALUELABEL as TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE\n,tet9.ENUMVALUELABEL as TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE  \n,mslds1.DROPSHIPMENT as MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT \n,sl2.CREATEDDATETIME as SALESLINE2_CREATEDDATETIME \n,sl2.INVENTDIMID as SALESLINE2_INVENTDIMID \n,sl2.SALESID as SALESLINE2_SALESID \n,sl2.MODIFIEDDATETIME as SALESLINE2_MODIFIEDDATETIME \n,da1.TIMEZONE as DATAAREA1_TIMEZONE \n,tzi1.TIMEBIAS as TIMEZONEINFO1_TIMEBIAS \n,da3.TIMEZONE as DATAAREA3_TIMEZONE \n,tzi3.TIMEBIAS as TIMEZONEINFO3_TIMEBIAS \n,null as INVENTITEMPRICE1_STANDARDCOST \n,null as INVENTITEMPRICE1_MODIFIEDDATETIME \n,null as INVENTITEMPRICE2_STANDARDCOST \n,null as INVENTITEMPRICE2_MODIFIEDDATETIME \n,null as INVENTITEMPRICE3_STANDARDCOST \n,null as INVENTITEMPRICE3_MODIFIEDDATETIME \n,null as INVENTITEMPRICE4_STANDARDCOST \n,null as INVENTITEMPRICE4_MODIFIEDDATETIME \n,null as INVENTITEMPRICE6_STANDARDCOST \n,null as INVENTITEMPRICE6_MODIFIEDDATETIME \n,null as INVENTITEMPRICE7_STANDARDCOST \n,null as INVENTITEMPRICE7_MODIFIEDDATETIME \n,null as INVENTITEMPRICE8_STANDARDCOST \n,null as INVENTITEMPRICE8_MODIFIEDDATETIME \n,null as INVENTITEMPRICE9_STANDARDCOST \n,null as INVENTITEMPRICE9_MODIFIEDDATETIME\n ,mslpo1.RECID as MCRSALESLINEPRICEOVERRIDE1_RECID \n ,mslpo1.REASONCODE as MCRSALESLINEPRICEOVERRIDE2_REASONCODE \n ,null as TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION \n ,null as PDMSTATUS_NAME\n ,(SELECT MAX(LastUpdateDate) \n FROM (VALUES (sl1.MODIFIEDDATETIME),\n  (isnull(def1.DEFAULTDIMENSION_MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(st1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(cij1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(id1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(idc1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(sl1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(sl2.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(id2.INVENTDIM_MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(id2.INVENTSITE_MODIFIEDDATETIME, '1950-01-01'))\n ) AS UpdateDate(LastUpdateDate)) AS LATEST_MODIFIEDDATETIME\nFROM CUSTINVOICETRANS cit1\nleft join (select distinct sl10.DEFAULTDIMENSION\n\t\t\t\t, max(\n\t\t\t\t\tcase when da1.NAME = 'BusinessUnit' then davsi1.DISPLAYVALUE\n\t\t\t\t\t\telse null\n\t\t\t\t\t\tend\n\t\t\t\t\t) over (partition by sl10.DEFAULTDIMENSION) as BUSINESS_UNIT\n\t\t\t\t, max(\n\t\t\t\t\t(select max(i) from (values (davsi1.MODIFIEDDATETIME), (dav1.MODIFIEDDATETIME), (da1.MODIFIEDDATETIME), (desc1.DESC_MODIFIEDDATETIME)) AS T(i))\n\t\t\t\t\t) over (partition by sl10.DEFAULTDIMENSION) as DEFAULTDIMENSION_MODIFIEDDATETIME\n\t\t\tfrom (select distinct DEFAULTDIMENSION from dbo.SALESLINE) sl10\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEVALUESETITEM davsi1 on\n\t\t\t\tsl10.DEFAULTDIMENSION = davsi1.DIMENSIONATTRIBUTEVALUESET\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEVALUE dav1 on\n\t\t\t\tdavsi1.DIMENSIONATTRIBUTEVALUE = dav1.RECID\n\t\t\tleft join dbo.DIMENSIONATTRIBUTE da1 on\n\t\t\t\tdav1.DIMENSIONATTRIBUTE = da1.RECID\n\t\t\tleft join (select dft1.VALUE, da2.NAME, dft1.DESCRIPTION\n\t\t\t\t\t\t\t, (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME\n\t\t\t\t\t\tfrom dbo.DIMENSIONFINANCIALTAG dft1\n\t\t\t\t\t\tleft join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on\n\t\t\t\t\t\t\tdft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n\t\t\t\t\t\tleft join dbo.DIMENSIONATTRIBUTE da2 on\n\t\t\t\t\t\t\tdadc1.DIMENSIONATTRIBUTE = da2.RECID) desc1 on\n\t\t\t\tdavsi1.DISPLAYVALUE = desc1.VALUE and\n\t\t\t\tda1.NAME = desc1.NAME\n\t\t\t) def1 on\n\tcit1.DEFAULTDIMENSION = def1.DEFAULTDIMENSION\nleft join dbo.SALESTABLE st1 on\n\tcit1.DATAAREAID = st1.DATAAREAID and\n\tcit1.ORIGSALESID = st1.SALESID\nleft join (select distinct cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, '') as NUMBERSEQUENCEGROUP, cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID\n\t\t\t, max(cij10.ORDERACCOUNT) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as ORDERACCOUNT\n\t\t\t, max(cij10.CUSTGROUP) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as CUSTGROUP\n\t\t\t, max(cij10.INVOICEPOSTALADDRESS) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as INVOICEPOSTALADDRESS\n\t\t\t, max(cij10.DLVTERM) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as DLVTERM\n\t\t\t, max(cij10.PAYMENT) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as PAYMENT\n\t\t\t, max(cij10.RETURNREASONCODEID) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as RETURNREASONCODEID\n\t\t\t, max(cij10.SALESORIGINID) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as SALESORIGINID\n\t\t\t, max(cij10.INVENTLOCATIONID) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as INVENTLOCATIONID\n\t\t\t, max(cij10.WORKERSALESTAKER) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as WORKERSALESTAKER\n\t\t\t, max(cij10.DOCUMENTDATE) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as DOCUMENTDATE\n\t\t\t, max(cij10.DUEDATE) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as DUEDATE\n\t\t\t, max(cij10.LEDGERVOUCHER) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as LEDGERVOUCHER\n\t\t\t, max(cij10.PURCHASEORDER) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as PURCHASEORDER\n\t\t\t, max(cij10.SALESTYPE) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as SALESTYPE\n\t\t\t\n\t\t\t, max(cij10.JOURNALNUM) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as JOURNALNUM\n\t\t\t, max(ljta10.JOURNALNAME) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as JOURNALNAME\n\t\t\t\n\t\t\t, max(cij10.IsManbase) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as IsManbase\n\t\t\t\n\t\t\t, max((select max(i) from (values (cij10.MODIFIEDDATETIME), (ljta10.MODIFIEDDATETIME)) AS T(i))) over (partition by cij10.DATAAREAID, isnull(cij10.NUMBERSEQUENCEGROUP, ''), cij10.SALESID, cij10.INVOICEDATE, cij10.INVOICEID) as MODIFIEDDATETIME\n\t\tfrom (select cij100.RECID, cij100.DATAAREAID, cij100.NUMBERSEQUENCEGROUP, cij100.SALESID, cij100.INVOICEDATE, cij100.INVOICEID\n\t\t\t\t\t, cij100.ORDERACCOUNT, cij100.CUSTGROUP, cij100.INVOICEPOSTALADDRESS, cij100.DLVTERM, cij100.PAYMENT, cij100.RETURNREASONCODEID, cij100.SALESORIGINID, cij100.INVENTLOCATIONID, cij100.WORKERSALESTAKER, cij100.DOCUMENTDATE, cij100.DUEDATE, cij100.LEDGERVOUCHER, cij100.PURCHASEORDER, cij100.SALESTYPE\n\t\t\t\t\t, cij100.IsManbase\n\t\t\t\t\t, case when max(cij100.IsManbase) over (partition by cij100.DATAAREAID, isnull(cij100.NUMBERSEQUENCEGROUP, ''), cij100.SALESID, cij100.INVOICEDATE, cij100.INVOICEID) = 1 and cij100.IsManbase = 0 then ''\n\t\t\t\t\t\telse cij100.JOURNALNUM\n\t\t\t\t\t\tend as JOURNALNUM\n\t\t\t\t\t, cij100.MODIFIEDDATETIME\n\t\t\t\tfrom (select cij1000.RECID, cij1000.DATAAREAID, cij1000.NUMBERSEQUENCEGROUP, cij1000.SALESID, cij1000.INVOICEDATE, cij1000.INVOICEID\n\t\t\t\t\t, cij1000.ORDERACCOUNT, cij1000.CUSTGROUP, cij1000.INVOICEPOSTALADDRESS, cij1000.DLVTERM, cij1000.PAYMENT, cij1000.RETURNREASONCODEID, cij1000.SALESORIGINID, cij1000.INVENTLOCATIONID, cij1000.WORKERSALESTAKER, cij1000.DOCUMENTDATE, cij1000.DUEDATE, cij1000.LEDGERVOUCHER, cij1000.PURCHASEORDER, cij1000.SALESTYPE\n\t\t\t\t\t, case --Sealy --Manbase journals moved from Manbase into AX (not AX originated)\n\t\t\t\t\t\t\twhen cij1000.DATAAREAID = '415' and isnull(ljta1000.JOURNALNAME, '') like 'MB%' then 1\n\t\t\t\t\t\t\t--From Manbase, but eluded journal name filter   --From Manbase, but eluded journal name filter\n\t\t\t\t\t\t\twhen left(cij1000.INVOICEID, 4) = '415F' or left(cij1000.INVOICEID, 5) = 'TC415' then 1\n\t\t\t\t\t\t\t--And, at last, specific cutover date for old Manbase into AX history\n\t\t\t\t\t\t\twhen convert(date, cij1000.INVOICEDATE) = '2020-03-29' then 1\n\t\t\t\t\t\telse 0\n\t\t\t\t\t\tend as IsManbase\n\t\t\t\t\t, ljt1000.JOURNALNUM\n\t\t\t\t\t, (select max(i) from (values (cij1000.MODIFIEDDATETIME), (ljt1000.MODIFIEDDATETIME), (ljta1000.MODIFIEDDATETIME)) AS T(i)) as MODIFIEDDATETIME\n\t\t\t\tfrom dbo.CUSTINVOICEJOUR cij1000\n\t\t\t\tleft join (select DATAAREAID, INVOICE, JOURNALNUM, MODIFIEDDATETIME\n\t\t\t\t\t\t\tfrom dbo.LEDGERJOURNALTRANS) ljt1000 on\n\t\t\t\t\tcij1000.DATAAREAID = ljt1000.DATAAREAID and\n\t\t\t\t\tcij1000.INVOICEID = ljt1000.INVOICE\n\t\t\t\tleft join (select DATAAREAID, JOURNALNUM, JOURNALNAME, MODIFIEDDATETIME\n\t\t\t\t\t\t\tfrom dbo.LEDGERJOURNALTABLE) ljta1000 on\n\t\t\t\t\tljt1000.DATAAREAID = ljta1000.DATAAREAID and\n\t\t\t\t\tljt1000.JOURNALNUM = ljta1000.JOURNALNUM) cij100\n\t\t\t) cij10\n\tleft join (select DATAAREAID, JOURNALNUM\n\t\t\t\t\t, max(JOURNALNAME) as JOURNALNAME\n\t\t\t\t\t, max(MODIFIEDDATETIME) as MODIFIEDDATETIME\n\t\t\t\tfrom dbo.LEDGERJOURNALTABLE\n\t\t\t\tgroup by DATAAREAID, JOURNALNUM) ljta10 on\n\t\tcij10.DATAAREAID = ljta10.DATAAREAID and\n\t\tcij10.JOURNALNUM = ljta10.JOURNALNUM) cij1 on\n\tcit1.DATAAREAID = cij1.DATAAREAID and\n\tisnull(cit1.NUMBERSEQUENCEGROUP, '') = isnull(cij1.NUMBERSEQUENCEGROUP, '') and\n\tcit1.SALESID = cij1.SALESID and\n\tcit1.INVOICEDATE = cij1.INVOICEDATE and\n\tcit1.INVOICEID = cij1.INVOICEID\nleft join dbo.INVENTDIM id1 on\n\tcit1.DATAAREAID = id1.DATAAREAID and\n\tcit1.INVENTDIMID = id1.INVENTDIMID\nleft join (select idc10.DATAAREAID, idc10.ITEMID, id10.CONFIGID\n\t\t\t, max(id10.MODIFIEDDATETIME) as MODIFIEDDATETIME\n\t\tfrom dbo.INVENTDIMCOMBINATION idc10\n\t\tleft join dbo.INVENTDIM id10 on\n\t\t\tidc10.DATAAREAID = id10.DATAAREAID and\n\t\t\tidc10.INVENTDIMID = id10.INVENTDIMID\n\t\tgroup by idc10.DATAAREAID, idc10.ITEMID, id10.CONFIGID) idc1 on\n\tcit1.DATAAREAID = idc1.DATAAREAID and\n\tid1.CONFIGID = idc1.CONFIGID and\n\tcit1.ITEMID = idc1.ITEMID\nleft join dbo.SALESLINE sl1 on\n\tcit1.DATAAREAID = sl1.DATAAREAID and\n\tcit1.INVENTTRANSID = sl1.INVENTTRANSID\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'DocumentStatus'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet1 on\n\tst1.DOCUMENTSTATUS = tet1.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'ReturnStatusHeader'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet2 on\n\tst1.RETURNSTATUS = tet2.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'SalesStatus'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet3 on\n\t'3' = tet3.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'ReturnStatusLine'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet4 on\n\tsl1.RETURNSTATUS = tet4.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'SalesStatus'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet5 on\n\t'3' = tet5.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'SalesType'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet6 on\n\tcij1.SALESTYPE = tet6.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'ShipCarrierDlvType'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet7 on\n\tsl1.SHIPCARRIERDLVTYPE = tet7.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'TradeLineDlvType'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet8 on\n\tsl1.DELIVERYTYPE = tet8.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n                                                , max(ENUMVALUELABEL) as ENUMVALUELABEL\n                                from dbo.TIMEXTENDERENUMTABLE\n                                where ENUMNAME = 'CostingVersionPriceType'\n                                group by ENUMNAME, ENUMVALUE) tet9 on\n                0 = tet9.ENUMVALUE    \nleft join dbo.MCRSALESLINEDROPSHIPMENT mslds1 on\n\tsl1.DATAAREAID = mslds1.DATAAREAID and\n\tsl1.RECID = mslds1.SALESLINE\nleft join (select distinct DATAAREAID, INVENTTRANSID\n\t\t\t, max(CREATEDDATETIME) over (partition by DATAAREAID, INVENTTRANSID) as CREATEDDATETIME\n\t\t\t, max(INVENTDIMID) over (partition by DATAAREAID, INVENTTRANSID) as INVENTDIMID\n\t\t\t, max(SALESID) over (partition by DATAAREAID, INVENTTRANSID) as SALESID\n\t\t\t, max(MODIFIEDDATETIME) over (partition by DATAAREAID, INVENTTRANSID) as MODIFIEDDATETIME\n\t\tfrom dbo.SALESLINE) sl2 on\n\tsl1.DATAAREAID = sl2.DATAAREAID and\n\tsl1.INVENTTRANSIDRETURN = sl2.INVENTTRANSID\nleft join (select id20.DATAAREAID, id20.INVENTDIMID\n\t\t\t, max(is20.TIMEZONE) over (partition by id20.DATAAREAID, id20.INVENTDIMID) as TIMEZONE\n\t\t\t, max(id20.MODIFIEDDATETIME) over (partition by id20.DATAAREAID, id20.INVENTDIMID) as INVENTDIM_MODIFIEDDATETIME\n\t\t\t, max(is20.MODIFIEDDATETIME) over (partition by id20.DATAAREAID, id20.INVENTDIMID) as INVENTSITE_MODIFIEDDATETIME\n\t\tfrom dbo.INVENTDIM id20\n\t\tleft join dbo.INVENTSITE is20 on\n\t\t\tid20.DATAAREAID = is20.DATAAREAID and\n\t\t\tid20.INVENTSITEID = is20.SITEID) id2 on\n\tsl2.DATAAREAID = id2.DATAAREAID and\n\tsl2.INVENTDIMID = id2.INVENTDIMID\nleft join dbo.DATAAREA da1 on\n\tsl2.DATAAREAID = da1.ID\nleft join dbo.TIMEZONEINFO tzi1 on\n\tsl2.CREATEDDATETIME >= tzi1.STARTDATE and\n\tsl2.CREATEDDATETIME < tzi1.ENDDATE and\n\tisnull(id2.TIMEZONE, da1.TIMEZONE) = tzi1.TIMEZONEID\nleft join dbo.DATAAREA da3 on\n\tsl1.DATAAREAID = da3.ID\nleft join dbo.TIMEZONEINFO tzi3 on\n\tsl1.CREATEDDATETIME >= tzi3.STARTDATE and\n\tsl1.CREATEDDATETIME < tzi3.ENDDATE and\n\tda3.TIMEZONE = tzi3.TIMEZONEID\nleft join dbo.MCRSALESLINEPRICEOVERRIDE mslpo1 on\n\tsl1.RECID = mslpo1.SALESLINE\nleft join dbo.MCRSALESLINEPRICEOVERRIDE mslpo2 on\n\tmslpo1.RECID = mslpo2.RECID\nwhere cit1.RECID is not null\nand cit1.DATAAREAID is not null\nand cit1.ITEMID is not null\nand isnull(cij1.IsManbase, 0) = 0\noption(recompile, maxdop 16)",
														"type": "Expression"
													},
													"queryTimeout": "20:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"name": "RECID",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "RECID",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "ITEMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ITEMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CURRENCYCODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CURRENCYCODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "TRANSACTIONCODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TRANSACTIONCODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVENTDIMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTDIMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DELIVERYPOSTALADDRESS",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DELIVERYPOSTALADDRESS",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "MCRDLVMODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "MCRDLVMODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESCATEGORY",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "SALESCATEGORY",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "RETURNDISPOSITIONCODEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "RETURNDISPOSITIONCODEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "ORIGSALESID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ORIGSALESID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TAXGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TAXGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TAXITEMGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TAXITEMGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESUNIT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESUNIT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DLVDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DLVDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVOICEDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVOICEDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "RETURNARRIVALDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "RETURNARRIVALDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "RETURNCLOSEDDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "RETURNCLOSEDDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTTRANSID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTTRANSID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVOICEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVOICEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LINENUM",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "LINENUM",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTQTY",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "INVENTQTY",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "QTY",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "QTY",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "QTYPHYSICAL",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "QTYPHYSICAL",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "PRICEUNIT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "PRICEUNIT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "SALESPRICE",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "SALESPRICE",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "COMMISSAMOUNTCUR",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "COMMISSAMOUNTCUR",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "COMMISSAMOUNTMST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "COMMISSAMOUNTMST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "LINEAMOUNT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "LINEAMOUNT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "LINEAMOUNTMST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "LINEAMOUNTMST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "TAXAMOUNT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "TAXAMOUNT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "TAXAMOUNTMST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "TAXAMOUNTMST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "DISCPERCENT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "DISCPERCENT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "DISCAMOUNT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "DISCAMOUNT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "LINEDISC",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "LINEDISC",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "LINEPERCENT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "LINEPERCENT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "SUMLINEDISC",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "SUMLINEDISC",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "SUMLINEDISCMST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "SUMLINEDISCMST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_BUSINESS_UNIT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_BUSINESS_UNIT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SMMCAMPAIGNID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_SMMCAMPAIGNID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_COMMISSIONGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_COMMISSIONGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_INVOICEACCOUNT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_INVOICEACCOUNT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_MARKUPGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_MARKUPGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_RETURNREASONCODEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_RETURNREASONCODEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_LINEDISC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_LINEDISC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SALESPOOLID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_SALESPOOLID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_PRICEGROUPID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_PRICEGROUPID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_WORKERSALESRESPONSIBLE",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "SALESTABLE_WORKERSALESRESPONSIBLE",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_ATAGENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_ATAGENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SHIPCARRIERBLINDSHIPMENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_SHIPCARRIERBLINDSHIPMENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_ORDERBLOCKED",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_ORDERBLOCKED",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_MCRORDERSTOPPED",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_MCRORDERSTOPPED",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SHIPCARRIERFUELSURCHARGE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_SHIPCARRIERFUELSURCHARGE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_INVENTSITEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_INVENTSITEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESTABLE_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_ORDERACCOUNT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_ORDERACCOUNT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_CUSTGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_CUSTGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_INVOICEPOSTALADDRESS",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_INVOICEPOSTALADDRESS",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_DLVTERM",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_DLVTERM",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_PAYMENT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_PAYMENT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_RETURNREASONCODEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_RETURNREASONCODEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_SALESORIGINID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_SALESORIGINID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_INVENTLOCATIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_INVENTLOCATIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_WORKERSALESTAKER",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_WORKERSALESTAKER",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_DOCUMENTDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_DOCUMENTDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_DUEDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_DUEDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_LEDGERVOUCHER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_LEDGERVOUCHER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_PURCHASEORDER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_PURCHASEORDER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_SALESTYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_SALESTYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_JOURNALNUM",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_JOURNALNUM",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_JOURNALNAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_JOURNALNAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTDIM1_CONFIGID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTDIM1_CONFIGID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVENTDIM1_INVENTSITEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTDIM1_INVENTSITEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVENTDIM1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTDIM1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTDIMCOMBINATION_PDMSTATUS",
																"type": "String",
																"physicalType": "varchar"
															},
															"sink": {
																"name": "INVENTDIMCOMBINATION_PDMSTATUS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVENTDIMCOMBINATION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTDIMCOMBINATION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_TPX_RETURNREASONCODEID",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE1_TPX_RETURNREASONCODEID",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_LINEDISC",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "SALESLINE1_LINEDISC",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_LINEPERCENT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "SALESLINE1_LINEPERCENT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_COMPLETE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE1_COMPLETE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_ORDERBLOCKED",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE1_ORDERBLOCKED",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_SCRAP",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE1_SCRAP",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_STOCKEDPRODUCT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE1_STOCKEDPRODUCT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_TPX_MANUFACTUREDATE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE1_TPX_MANUFACTUREDATE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_TPX_RELATEDORDERDATE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE1_TPX_RELATEDORDERDATE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_CREATEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESLINE1_CREATEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_TPX_PRODUCTIONTIME",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE1_TPX_PRODUCTIONTIME",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_TPX_REGISTRYNUMBER",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE1_TPX_REGISTRYNUMBER",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESLINE1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE2_CREATEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESLINE2_CREATEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESLINE2_INVENTDIMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESLINE2_INVENTDIMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESLINE2_SALESID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESLINE2_SALESID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESLINE2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESLINE2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DATAAREA1_TIMEZONE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "DATAAREA1_TIMEZONE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "TIMEZONEINFO1_TIMEBIAS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TIMEZONEINFO1_TIMEBIAS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "DATAAREA3_TIMEZONE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "DATAAREA3_TIMEZONE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "TIMEZONEINFO3_TIMEBIAS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TIMEZONEINFO3_TIMEBIAS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE1_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 6,
																"precision": 38
															},
															"sink": {
																"name": "INVENTITEMPRICE1_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTITEMPRICE1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE2_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 6,
																"precision": 38
															},
															"sink": {
																"name": "INVENTITEMPRICE2_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTITEMPRICE2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE3_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 6,
																"precision": 38
															},
															"sink": {
																"name": "INVENTITEMPRICE3_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE3_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTITEMPRICE3_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE4_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 6,
																"precision": 38
															},
															"sink": {
																"name": "INVENTITEMPRICE4_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE4_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTITEMPRICE4_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE6_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 6,
																"precision": 38
															},
															"sink": {
																"name": "INVENTITEMPRICE6_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE6_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTITEMPRICE6_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE7_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 6,
																"precision": 38
															},
															"sink": {
																"name": "INVENTITEMPRICE7_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE7_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTITEMPRICE7_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE8_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 6,
																"precision": 38
															},
															"sink": {
																"name": "INVENTITEMPRICE8_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE8_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTITEMPRICE8_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE9_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 6,
																"precision": 38
															},
															"sink": {
																"name": "INVENTITEMPRICE9_STANDARDCOST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE9_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTITEMPRICE9_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "MCRSALESLINEPRICEOVERRIDE1_RECID",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "MCRSALESLINEPRICEOVERRIDE1_RECID",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "MCRSALESLINEPRICEOVERRIDE2_REASONCODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "MCRSALESLINEPRICEOVERRIDE2_REASONCODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "PDMSTATUS_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "PDMSTATUS_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															},
															"sink": {
																"name": "HK_JOB_RUN_ID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "HK_SOURCE_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														}
													],
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": true
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sql_server",
													"type": "DatasetReference",
													"parameters": {
														"p_src_table_name": {
															"value": "@pipeline().parameters.p_src_table_nm",
															"type": "Expression"
														},
														"p_src_schema_name": {
															"value": "@pipeline().parameters.p_src_schema_nm",
															"type": "Expression"
														},
														"p_ls_serverName": {
															"value": "@pipeline().globalParameters.retail_sql_serverName",
															"type": "Expression"
														},
														"p_ls_dbName": {
															"value": "@pipeline().globalParameters.retail_sql_dbName",
															"type": "Expression"
														},
														"p_ls_sqlUsername": {
															"value": "@pipeline().globalParameters.sql_userName",
															"type": "Expression"
														},
														"p_ls_sqlPassword": {
															"value": "@pipeline().globalParameters.sql_password",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_parquet",
													"type": "DatasetReference",
													"parameters": {
														"p_directory": {
															"value": "@pipeline().parameters.p_temp_directory",
															"type": "Expression"
														},
														"p_root_system": {
															"value": "@pipeline().globalParameters.rootDir",
															"type": "Expression"
														},
														"p_file_name": {
															"value": "@pipeline().parameters.p_temp_file_nm",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "retail_raw_load_failure_notification_1",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "custinvoicetrans_to_adls_retail",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('custinvoicetrans_to_adls_retail').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@replace(replace(replace(activity('custinvoicetrans_to_adls_retail').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('custinvoicetrans_to_adls_retail').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('custinvoicetrans_to_adls_retail').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "sql_retail_load_to_raw_fail_1",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "retail_raw_load_failure_notification_1",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": {
													"value": "@activity('custinvoicetrans_to_adls_retail').Error['message']",
													"type": "Expression"
												},
												"errorCode": "500"
											}
										},
										{
											"name": "retail_raw_load_failure_notification_2",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "custinvoicetrans_standardcost_retail_to_adls",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('custinvoicetrans_standardcost_retail_to_adls').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@replace(replace(replace(activity('custinvoicetrans_standardcost_retail_to_adls').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('custinvoicetrans_standardcost_retail_to_adls').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('custinvoicetrans_standardcost_retail_to_adls').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "sql_retail_load_to_raw_fail_2",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "retail_raw_load_failure_notification_2",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": {
													"value": "@activity('custinvoicetrans_standardcost_retail_to_adls').Error['message']",
													"type": "Expression"
												},
												"errorCode": "500"
											}
										},
										{
											"name": "custinvoicetrans_standardcost_retail_to_adls",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"additionalColumns": [
														{
															"name": "HK_JOB_RUN_ID",
															"value": {
																"value": "@coalesce(pipeline().RunId, -1)",
																"type": "Expression"
															}
														},
														{
															"name": "HK_SOURCE_NAME",
															"value": {
																"value": "@pipeline().parameters.p_src_nm",
																"type": "Expression"
															}
														},
														{
															"name": "LAST_MODIFIEDDATE",
															"value": {
																"value": "@pipeline().TriggerTime",
																"type": "Expression"
															}
														}
													],
													"sqlReaderQuery": {
														"value": "select cit1.STANDARDCOST_SOURCE\n, cit1.RECID\n, cit1.DATAAREAID\n, cit1.ITEMID\n, cit1.CONFIGID as INVENTDIM_CONFIGID\n, cit1.INVENTSITEID as INVENTDIM_INVENTSITEID\n, cit1.MODIFIEDDATETIME as INVENTITEMPRICE_MODIFIEDDATETIME\n, cit1.ACTIVATIONDATE as INVENTITEMPRICE_ACTIVATIONDATE\n, cit1.CREATEDDATETIME as INVENTITEMPRICE_CREATEDDATETIME\n, cit1.STANDARDCOST as INVENTITEMPRICE_STANDARDCOST\nfrom (select iip1.STANDARDCOST_SOURCE, iip1.RECID, iip1.DATAAREAID, iip1.ITEMID, iip1.CONFIGID, iip1.INVENTSITEID, iip1.MODIFIEDDATETIME, iip1.ACTIVATIONDATE, iip1.CREATEDDATETIME, iip1.STANDARDCOST\n\tfrom (select 'iip1' as STANDARDCOST_SOURCE, cit11.RECID, cit11.DATAAREAID, cit11.ITEMID, id11.CONFIGID, id11.INVENTSITEID, iip11.MODIFIEDDATETIME, iip11.ACTIVATIONDATE, iip11.CREATEDDATETIME\n\t\t\t, ((iip11.PRICE / isnull(nullif(iip11.PRICEUNIT, 0), 1)) + (iip11.MARKUP / isnull(nullif(iip11.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by cit11.RECID, cit11.DATAAREAID, cit11.ITEMID, id11.CONFIGID, id11.INVENTSITEID order by iip11.ACTIVATIONDATE desc, iip11.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.CUSTINVOICETRANS cit11\n\t\tinner join dbo.INVENTDIM id11 on\n\t\t\tcit11.DATAAREAID = id11.DATAAREAID and\n\t\t\tcit11.INVENTDIMID = id11.INVENTDIMID\n\t\tinner join (select iip111.DATAAREAID, iip111.ITEMID, id111.CONFIGID, id111.INVENTSITEID, iip111.MODIFIEDDATETIME, iip111.ACTIVATIONDATE, iip111.CREATEDDATETIME\n\t\t\t\t\t\t, iip111.PRICE, iip111.PRICEUNIT, iip111.MARKUP, iip111.PRICEQTY\n\t\t\t\t\tfrom dbo.INVENTITEMPRICE iip111\n\t\t\t\t\tinner join dbo.INVENTDIM id111 on\n\t\t\t\t\t\tiip111.DATAAREAID = id111.DATAAREAID and\n\t\t\t\t\t\tiip111.INVENTDIMID = id111.INVENTDIMID\n\t\t\t\t\twhere iip111.PRICETYPE = 0) iip11 on\n\t\t\tcit11.DATAAREAID = iip11.DATAAREAID and\n\t\t\tcit11.ITEMID = iip11.ITEMID and\n\t\t\tid11.CONFIGID = iip11.CONFIGID and\n\t\t\tid11.INVENTSITEID = iip11.INVENTSITEID and\n\t\t\tcit11.INVOICEDATE >= iip11.ACTIVATIONDATE) iip1\n\twhere iip1.ROW_NUM = 1\n\tunion all\n\tselect iip2.STANDARDCOST_SOURCE, iip2.RECID, iip2.DATAAREAID, iip2.ITEMID, null as CONFIGID, iip2.INVENTSITEID, iip2.MODIFIEDDATETIME, iip2.ACTIVATIONDATE, iip2.CREATEDDATETIME, iip2.STANDARDCOST\n\tfrom (select 'iip2' as STANDARDCOST_SOURCE, cit21.RECID, cit21.DATAAREAID, cit21.ITEMID, id21.INVENTSITEID, iip21.MODIFIEDDATETIME, iip21.ACTIVATIONDATE, iip21.CREATEDDATETIME\n\t\t\t, ((iip21.PRICE / isnull(nullif(iip21.PRICEUNIT, 0), 1)) + (iip21.MARKUP / isnull(nullif(iip21.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by cit21.RECID, cit21.DATAAREAID, cit21.ITEMID, id21.INVENTSITEID order by iip21.ACTIVATIONDATE desc, iip21.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.CUSTINVOICETRANS cit21\n\t\tinner join dbo.INVENTDIM id21 on\n\t\t\tcit21.DATAAREAID = id21.DATAAREAID and\n\t\t\tcit21.INVENTDIMID = id21.INVENTDIMID\n\t\tinner join (select iip211.DATAAREAID, iip211.ITEMID, id211.INVENTSITEID, iip211.MODIFIEDDATETIME, iip211.ACTIVATIONDATE, iip211.CREATEDDATETIME\n\t\t\t\t\t\t, iip211.PRICE, iip211.PRICEUNIT, iip211.MARKUP, iip211.PRICEQTY\n\t\t\t\t\tfrom dbo.INVENTITEMPRICE iip211\n\t\t\t\t\tinner join dbo.INVENTDIM id211 on\n\t\t\t\t\t\tiip211.DATAAREAID = id211.DATAAREAID and\n\t\t\t\t\t\tiip211.INVENTDIMID = id211.INVENTDIMID\n\t\t\t\t\twhere iip211.PRICETYPE = 0) iip21 on\n\t\t\tcit21.DATAAREAID = iip21.DATAAREAID and\n\t\t\tcit21.ITEMID = iip21.ITEMID and\n\t\t\tid21.INVENTSITEID = iip21.INVENTSITEID and\n\t\t\tcit21.INVOICEDATE >= iip21.ACTIVATIONDATE) iip2\n\twhere iip2.ROW_NUM = 1\n\tunion all\n\tselect iip3.STANDARDCOST_SOURCE, iip3.RECID, iip3.DATAAREAID, iip3.ITEMID, iip3.CONFIGID, null as INVENTSITEID, iip3.MODIFIEDDATETIME, iip3.ACTIVATIONDATE, iip3.CREATEDDATETIME, iip3.STANDARDCOST\n\tfrom (select 'iip3' as STANDARDCOST_SOURCE, cit31.RECID, cit31.DATAAREAID, cit31.ITEMID, id31.CONFIGID, iip31.MODIFIEDDATETIME, iip31.ACTIVATIONDATE, iip31.CREATEDDATETIME\n\t\t\t, ((iip31.PRICE / isnull(nullif(iip31.PRICEUNIT, 0), 1)) + (iip31.MARKUP / isnull(nullif(iip31.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by cit31.RECID, cit31.DATAAREAID, cit31.ITEMID, id31.CONFIGID order by iip31.ACTIVATIONDATE desc, iip31.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.CUSTINVOICETRANS cit31\n\t\tinner join dbo.INVENTDIM id31 on\n\t\t\tcit31.DATAAREAID = id31.DATAAREAID and\n\t\t\tcit31.INVENTDIMID = id31.INVENTDIMID\n\t\tinner join (select iip311.DATAAREAID, iip311.ITEMID, id311.CONFIGID, iip311.MODIFIEDDATETIME, iip311.ACTIVATIONDATE, iip311.CREATEDDATETIME\n\t\t\t\t\t\t, iip311.PRICE, iip311.PRICEUNIT, iip311.MARKUP, iip311.PRICEQTY\n\t\t\t\t\tfrom dbo.INVENTITEMPRICE iip311\n\t\t\t\t\tinner join dbo.INVENTDIM id311 on\n\t\t\t\t\t\tiip311.DATAAREAID = id311.DATAAREAID and\n\t\t\t\t\t\tiip311.INVENTDIMID = id311.INVENTDIMID\n\t\t\t\t\twhere iip311.PRICETYPE = 0) iip31 on\n\t\t\tcit31.DATAAREAID = iip31.DATAAREAID and\n\t\t\tcit31.ITEMID = iip31.ITEMID and\n\t\t\tid31.CONFIGID = iip31.CONFIGID and\n\t\t\tcit31.INVOICEDATE >= iip31.ACTIVATIONDATE) iip3\n\twhere iip3.ROW_NUM = 1\n\tunion all\n\tselect iip4.STANDARDCOST_SOURCE, iip4.RECID, iip4.DATAAREAID, iip4.ITEMID, null as CONFIGID, null as INVENTSITEID, iip4.MODIFIEDDATETIME, iip4.ACTIVATIONDATE, iip4.CREATEDDATETIME, iip4.STANDARDCOST\n\tfrom (select 'iip4' as STANDARDCOST_SOURCE, cit41.RECID, cit41.DATAAREAID, cit41.ITEMID, iip41.MODIFIEDDATETIME, iip41.ACTIVATIONDATE, iip41.CREATEDDATETIME\n\t\t\t, ((iip41.PRICE / isnull(nullif(iip41.PRICEUNIT, 0), 1)) + (iip41.MARKUP / isnull(nullif(iip41.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by cit41.RECID, cit41.DATAAREAID, cit41.ITEMID order by iip41.ACTIVATIONDATE desc, iip41.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.CUSTINVOICETRANS cit41\n\t\tinner join dbo.INVENTDIM id41 on\n\t\t\tcit41.DATAAREAID = id41.DATAAREAID and\n\t\t\tcit41.INVENTDIMID = id41.INVENTDIMID\n\t\tinner join (select iip411.DATAAREAID, iip411.ITEMID, iip411.MODIFIEDDATETIME, iip411.ACTIVATIONDATE, iip411.CREATEDDATETIME\n\t\t\t\t\t\t, iip411.PRICE, iip411.PRICEUNIT, iip411.MARKUP, iip411.PRICEQTY\n\t\t\t\t\tfrom dbo.INVENTITEMPRICE iip411\n\t\t\t\t\tinner join dbo.INVENTDIM id411 on\n\t\t\t\t\t\tiip411.DATAAREAID = id411.DATAAREAID and\n\t\t\t\t\t\tiip411.INVENTDIMID = id411.INVENTDIMID\n\t\t\t\t\twhere iip411.PRICETYPE = 0) iip41 on\n\t\t\tcit41.DATAAREAID = iip41.DATAAREAID and\n\t\t\tcit41.ITEMID = iip41.ITEMID and\n\t\t\tcit41.INVOICEDATE >= iip41.ACTIVATIONDATE) iip4\n\twhere iip4.ROW_NUM = 1\n\tunion all\n\tselect iip6.STANDARDCOST_SOURCE, null as RECID, iip6.DATAAREAID, iip6.ITEMID, iip6.CONFIGID, iip6.INVENTSITEID, iip6.MODIFIEDDATETIME, iip6.ACTIVATIONDATE, iip6.CREATEDDATETIME, iip6.STANDARDCOST\n\tfrom (select 'iip6' as STANDARDCOST_SOURCE, iip21.DATAAREAID, iip21.ITEMID, id21.CONFIGID, id21.INVENTSITEID, iip21.MODIFIEDDATETIME, iip21.ACTIVATIONDATE, iip21.CREATEDDATETIME\n\t\t\t, ((iip21.PRICE / isnull(nullif(iip21.PRICEUNIT, 0), 1)) + (iip21.MARKUP / isnull(nullif(iip21.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by iip21.DATAAREAID, iip21.ITEMID, id21.CONFIGID, id21.INVENTSITEID order by iip21.ACTIVATIONDATE desc, iip21.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.INVENTITEMPRICE iip21\n\t\tinner join dbo.INVENTDIM id21 on\n\t\t\tiip21.DATAAREAID = id21.DATAAREAID and\n\t\t\tiip21.INVENTDIMID = id21.INVENTDIMID\n\t\twhere iip21.PRICETYPE = 0) iip6\n\twhere iip6.ROW_NUM = 1\n\tunion all\n\tselect iip7.STANDARDCOST_SOURCE, null as RECID, iip7.DATAAREAID, iip7.ITEMID, null as CONFIGID, iip7.INVENTSITEID, iip7.MODIFIEDDATETIME, iip7.ACTIVATIONDATE, iip7.CREATEDDATETIME, iip7.STANDARDCOST\n\tfrom (select 'iip7' as STANDARDCOST_SOURCE, iip22.DATAAREAID, iip22.ITEMID, id22.INVENTSITEID, iip22.MODIFIEDDATETIME, iip22.ACTIVATIONDATE, iip22.CREATEDDATETIME\n\t\t\t, ((iip22.PRICE / isnull(nullif(iip22.PRICEUNIT, 0), 1)) + (iip22.MARKUP / isnull(nullif(iip22.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by iip22.DATAAREAID, iip22.ITEMID, id22.INVENTSITEID order by iip22.ACTIVATIONDATE desc, iip22.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.INVENTITEMPRICE iip22\n\t\tinner join dbo.INVENTDIM id22 on\n\t\t\tiip22.DATAAREAID = id22.DATAAREAID and\n\t\t\tiip22.INVENTDIMID = id22.INVENTDIMID\n\t\twhere iip22.PRICETYPE = 0) iip7\n\twhere iip7.ROW_NUM = 1\n\tunion all\n\tselect iip8.STANDARDCOST_SOURCE, null as RECID, iip8.DATAAREAID, iip8.ITEMID, iip8.CONFIGID, null as INVENTSITEID, iip8.MODIFIEDDATETIME, iip8.ACTIVATIONDATE, iip8.CREATEDDATETIME, iip8.STANDARDCOST\n\tfrom (select 'iip8' as STANDARDCOST_SOURCE, iip23.DATAAREAID, iip23.ITEMID, id23.CONFIGID, iip23.MODIFIEDDATETIME, iip23.ACTIVATIONDATE, iip23.CREATEDDATETIME\n\t\t\t, ((iip23.PRICE / isnull(nullif(iip23.PRICEUNIT, 0), 1)) + (iip23.MARKUP / isnull(nullif(iip23.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by iip23.DATAAREAID, iip23.ITEMID, id23.CONFIGID order by iip23.ACTIVATIONDATE desc, iip23.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.INVENTITEMPRICE iip23\n\t\tinner join dbo.INVENTDIM id23 on\n\t\t\tiip23.DATAAREAID = id23.DATAAREAID and\n\t\t\tiip23.INVENTDIMID = id23.INVENTDIMID\n\t\twhere iip23.PRICETYPE = 0) iip8\n\twhere iip8.ROW_NUM = 1\n\tunion all\n\tselect iip9.STANDARDCOST_SOURCE, null as RECID, iip9.DATAAREAID, iip9.ITEMID, null as CONFIGID, null as INVENTSITEID, iip9.MODIFIEDDATETIME, iip9.ACTIVATIONDATE, iip9.CREATEDDATETIME, iip9.STANDARDCOST\n\tfrom (select 'iip9' as STANDARDCOST_SOURCE, iip24.DATAAREAID, iip24.ITEMID, iip24.MODIFIEDDATETIME, iip24.ACTIVATIONDATE, iip24.CREATEDDATETIME\n\t\t\t, ((iip24.PRICE / isnull(nullif(iip24.PRICEUNIT, 0), 1)) + (iip24.MARKUP / isnull(nullif(iip24.PRICEQTY, 0), 1))) as STANDARDCOST\n\t\t\t, row_number() over (partition by iip24.DATAAREAID, iip24.ITEMID order by iip24.ACTIVATIONDATE desc, iip24.MODIFIEDDATETIME desc) as ROW_NUM\n\t\tfrom dbo.INVENTITEMPRICE iip24\n\t\twhere iip24.PRICETYPE = 0) iip9\n\twhere iip9.ROW_NUM = 1\n\t) cit1\n\toption(recompile, maxdop 16)",
														"type": "Expression"
													},
													"queryTimeout": "20:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "SnowflakeSink",
													"preCopyScript": {
														"value": "@concat('TRUNCATE TABLE ',pipeline().parameters.p_tgt_raw_schema_nm,'.',pipeline().parameters.p_tgt_raw_table_nm_2)",
														"type": "Expression"
													},
													"importSettings": {
														"type": "SnowflakeImportCopyCommand"
													}
												},
												"enableStaging": true,
												"stagingSettings": {
													"linkedServiceName": {
														"referenceName": "ls_blob_storage",
														"type": "LinkedServiceReference"
													},
													"path": {
														"value": "@pipeline().globalParameters.rootDir",
														"type": "Expression"
													}
												},
												"parallelCopies": 32,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															},
															"sink": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "STANDARDCOST_SOURCE",
																"type": "String"
															},
															"sink": {
																"name": "STANDARDCOST_SOURCE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "RECID",
																"type": "Int64"
															},
															"sink": {
																"name": "RECID",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "DATAAREAID",
																"type": "String"
															},
															"sink": {
																"name": "DATAAREAID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "ITEMID",
																"type": "String"
															},
															"sink": {
																"name": "ITEMID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "INVENTDIM_CONFIGID",
																"type": "String"
															},
															"sink": {
																"name": "INVENTDIM_CONFIGID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "INVENTDIM_INVENTSITEID",
																"type": "String"
															},
															"sink": {
																"name": "INVENTDIM_INVENTSITEID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "INVENTITEMPRICE_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE_ACTIVATIONDATE",
																"type": "DateTime"
															},
															"sink": {
																"name": "INVENTITEMPRICE_ACTIVATIONDATE",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE_CREATEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "INVENTITEMPRICE_CREATEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "INVENTITEMPRICE_STANDARDCOST",
																"type": "Decimal"
															},
															"sink": {
																"name": "INVENTITEMPRICE_STANDARDCOST",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "LAST_MODIFIEDDATE",
																"type": "String"
															},
															"sink": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														}
													]
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sql_server",
													"type": "DatasetReference",
													"parameters": {
														"p_src_table_name": {
															"value": "@pipeline().parameters.p_src_table_nm",
															"type": "Expression"
														},
														"p_src_schema_name": {
															"value": "@pipeline().parameters.p_src_schema_nm",
															"type": "Expression"
														},
														"p_ls_serverName": {
															"value": "@pipeline().globalParameters.retail_sql_serverName",
															"type": "Expression"
														},
														"p_ls_dbName": {
															"value": "@pipeline().globalParameters.retail_sql_dbName",
															"type": "Expression"
														},
														"p_ls_sqlUsername": {
															"value": "@pipeline().globalParameters.sql_userName",
															"type": "Expression"
														},
														"p_ls_sqlPassword": {
															"value": "@pipeline().globalParameters.sql_password",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_snowflake",
													"type": "DatasetReference",
													"parameters": {
														"p_tgt_table_name": {
															"value": "@pipeline().parameters.p_tgt_raw_table_nm_2",
															"type": "Expression"
														},
														"p_tgt_schema_name": {
															"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
															"type": "Expression"
														},
														"p_ls_DbName": {
															"value": "@pipeline().globalParameters.snow_rawDb",
															"type": "Expression"
														},
														"p_ls_Env": {
															"value": "@pipeline().globalParameters.environment",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "custinvoicetrans_to_adls_d365",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "WarehouseSource",
											"additionalColumns": [
												{
													"name": "HK_JOB_RUN_ID",
													"value": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													}
												},
												{
													"name": "HK_SOURCE_NAME",
													"value": {
														"value": "@pipeline().parameters.p_src_nm",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "SELECT\n    cit1.recid as RECID,\n    cit1.dataareaid as DATAAREAID,\n    cit1.itemid as ITEMID,\n    cit1.currencycode as CURRENCYCODE,\n    cit1.defaultdimension as DEFAULTDIMENSION,\n    cit1.transactioncode as TRANSACTIONCODE,\n    cit1.inventdimid as INVENTDIMID,\n    cit1.deliverypostaladdress as DELIVERYPOSTALADDRESS,\n    cit1.mcrdlvmode as MCRDLVMODE,\n    cit1.salescategory as SALESCATEGORY,\n    cit1.returndispositioncodeid as RETURNDISPOSITIONCODEID,\n    cit1.salesgroup as SALESGROUP,\n    cit1.origsalesid as ORIGSALESID,\n    cit1.taxgroup as TAXGROUP,\n    cit1.taxitemgroup as TAXITEMGROUP,\n    cit1.salesunit as SALESUNIT,\n    cit1.dlvdate as DLVDATE,\n    cit1.invoicedate as INVOICEDATE,\n    cit1.returnarrivaldate as RETURNARRIVALDATE,\n    cit1.returncloseddate as RETURNCLOSEDDATE,\n    cit1.inventtransid as INVENTTRANSID,\n    cit1.invoiceid as INVOICEID,\n    cit1.linenum as LINENUM,\n    cit1.inventqty as INVENTQTY,\n    cit1.qty as QTY,\n    cit1.qtyphysical as QTYPHYSICAL,\n    cit1.priceunit as PRICEUNIT,\n    cit1.salesprice as SALESPRICE,\n    cit1.commissamountcur as COMMISSAMOUNTCUR,\n    cit1.commissamountmst as COMMISSAMOUNTMST,\n    cit1.lineamount as LINEAMOUNT,\n    cit1.lineamountmst as LINEAMOUNTMST,\n    cit1.taxamount as TAXAMOUNT,\n    cit1.taxamountmst as TAXAMOUNTMST,\n    cit1.discpercent as DISCPERCENT,\n    cit1.discamount as DISCAMOUNT,\n    cit1.linedisc as LINEDISC,\n    cit1.linepercent as LINEPERCENT,\n    cit1.sumlinedisc as SUMLINEDISC,\n    cit1.sumlinediscmst as SUMLINEDISCMST,\n    cit1.modifieddatetime as MODIFIEDDATETIME,\n    def1.BUSINESS_UNIT as DEFAULTDIMENSION_BUSINESS_UNIT,\n    def1.DEFAULTDIMENSION_MODIFIEDDATETIME,\n    st1.smmcampaignid as SALESTABLE_SMMCAMPAIGNID,\n    st1.commissiongroup as SALESTABLE_COMMISSIONGROUP,\n    st1.invoiceaccount as SALESTABLE_INVOICEACCOUNT,\n    st1.markupgroup as SALESTABLE_MARKUPGROUP,\n    st1.returnreasoncodeid as SALESTABLE_RETURNREASONCODEID,\n    st1.linedisc as SALESTABLE_LINEDISC,\n    st1.salespoolid as SALESTABLE_SALESPOOLID,\n    st1.pricegroupid as SALESTABLE_PRICEGROUPID,\n    st1.workersalesresponsible as SALESTABLE_WORKERSALESRESPONSIBLE,\n    st1.atagent as SALESTABLE_ATAGENT,\n    st1.shipcarrierblindshipment as SALESTABLE_SHIPCARRIERBLINDSHIPMENT,\n    st1.shipcarrierexpeditedshipment as SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT,\n    st1.orderblocked as SALESTABLE_ORDERBLOCKED,\n    st1.mcrorderstopped as SALESTABLE_MCRORDERSTOPPED,\n    st1.shipcarrierfuelsurcharge as SALESTABLE_SHIPCARRIERFUELSURCHARGE,\n    st1.inventsiteid as SALESTABLE_INVENTSITEID,\n    st1.modifieddatetime as SALESTABLE_MODIFIEDDATETIME,\n    cij1.orderaccount as CUSTINVOICEJOUR_ORDERACCOUNT,\n    cij1.custgroup as CUSTINVOICEJOUR_CUSTGROUP,\n    cij1.invoicepostaladdress as CUSTINVOICEJOUR_INVOICEPOSTALADDRESS,\n    cij1.dlvterm as CUSTINVOICEJOUR_DLVTERM,\n    cij1.payment as CUSTINVOICEJOUR_PAYMENT,\n    cij1.returnreasoncodeid as CUSTINVOICEJOUR_RETURNREASONCODEID,\n    cij1.salesoriginid as CUSTINVOICEJOUR_SALESORIGINID,\n    cij1.inventlocationid as CUSTINVOICEJOUR_INVENTLOCATIONID,\n    cij1.workersalestaker as CUSTINVOICEJOUR_WORKERSALESTAKER,\n    cij1.documentdate as CUSTINVOICEJOUR_DOCUMENTDATE,\n    cij1.duedate as CUSTINVOICEJOUR_DUEDATE,\n    cij1.ledgervoucher as CUSTINVOICEJOUR_LEDGERVOUCHER,\n    cij1.purchaseorder as CUSTINVOICEJOUR_PURCHASEORDER,\n\tcij1.salestype as CUSTINVOICEJOUR_SALESTYPE,\n    cij1.journalnum as CUSTINVOICEJOUR_JOURNALNUM,\n    cij1.journalname as CUSTINVOICEJOUR_JOURNALNAME,\n    cij1.modifieddatetime as CUSTINVOICEJOUR_MODIFIEDDATETIME,\n    id1.configid as INVENTDIM1_CONFIGID,\n\tid1.inventsiteid as INVENTDIM1_INVENTSITEID,\n    id1.modifieddatetime as INVENTDIM1_MODIFIEDDATETIME,\n    idc1.productlifecyclestateid as INVENTDIMCOMBINATION_PDMSTATUS,\n    idc1.MODIFIEDDATETIME as INVENTDIMCOMBINATION_MODIFIEDDATETIME,\n    sl1.tpx_returnreasoncodeid as SALESLINE1_TPX_RETURNREASONCODEID,\n    sl1.linedisc as SALESLINE1_LINEDISC,\n    sl1.linepercent as SALESLINE1_LINEPERCENT,\n    sl1.complete as SALESLINE1_COMPLETE,\n    sl1.orderblocked as SALESLINE1_ORDERBLOCKED,\n    sl1.scrap as SALESLINE1_SCRAP,\n    sl1.stockedproduct as SALESLINE1_STOCKEDPRODUCT,\n    sl1.tpx_manufacturedate as SALESLINE1_TPX_MANUFACTUREDATE,\n    sl1.tpx_relatedorderdate as SALESLINE1_TPX_RELATEDORDERDATE,\n    sl1.createddatetime as SALESLINE1_CREATEDDATETIME,\n    sl1.tpx_productiontime as SALESLINE1_TPX_PRODUCTIONTIME,\n    sl1.tpx_registrynumber as SALESLINE1_TPX_REGISTRYNUMBER,\n    sl1.modifieddatetime as SALESLINE1_MODIFIEDDATETIME,\n    tet1.ENUMVALUELABEL as TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS,\n    tet2.ENUMVALUELABEL as TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER,\n    tet3.ENUMVALUELABEL as TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER,\n    tet4.ENUMVALUELABEL as TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE,\n    tet5.ENUMVALUELABEL as TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE,\n    tet6.ENUMVALUELABEL as TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE,\n    tet7.ENUMVALUELABEL as TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE,\n    tet8.ENUMVALUELABEL as TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE,\n    tet9.ENUMVALUELABEL as TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE, \n    mslds1.dropshipment as MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT,\n    sl2.CREATEDDATETIME as SALESLINE2_CREATEDDATETIME,\n    sl2.INVENTDIMID as SALESLINE2_INVENTDIMID,\n    sl2.SALESID as SALESLINE2_SALESID,\n    sl2.MODIFIEDDATETIME as SALESLINE2_MODIFIEDDATETIME,\n    da1.timezone as DATAAREA1_TIMEZONE,\n    tzi1.timebias as TIMEZONEINFO1_TIMEBIAS,\n    da3.timezone as DATAAREA3_TIMEZONE,\n    tzi3.timebias as TIMEZONEINFO3_TIMEBIAS,\n    null as INVENTITEMPRICE1_STANDARDCOST, \n\tnull as INVENTITEMPRICE1_MODIFIEDDATETIME, \n\tnull as INVENTITEMPRICE2_STANDARDCOST, \n\tnull as INVENTITEMPRICE2_MODIFIEDDATETIME, \n\tnull as INVENTITEMPRICE3_STANDARDCOST, \n\tnull as INVENTITEMPRICE3_MODIFIEDDATETIME, \n\tnull as INVENTITEMPRICE4_STANDARDCOST, \n\tnull as INVENTITEMPRICE4_MODIFIEDDATETIME, \n\tnull as INVENTITEMPRICE6_STANDARDCOST, \n\tnull as INVENTITEMPRICE6_MODIFIEDDATETIME, \n\tnull as INVENTITEMPRICE7_STANDARDCOST, \n\tnull as INVENTITEMPRICE7_MODIFIEDDATETIME, \n\tnull as INVENTITEMPRICE8_STANDARDCOST, \n\tnull as INVENTITEMPRICE8_MODIFIEDDATETIME, \n\tnull as INVENTITEMPRICE9_STANDARDCOST, \n\tnull as INVENTITEMPRICE9_MODIFIEDDATETIME,\n    mslpo1.recid as MCRSALESLINEPRICEOVERRIDE1_RECID,\n    mslpo1.reasoncode as MCRSALESLINEPRICEOVERRIDE2_REASONCODE,\n    tport1.description as TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION,\n\tidc1.productlifecyclestateid as PDMSTATUS_NAME,\n  (SELECT MAX(LastUpdateDate) \n FROM (VALUES (sl1.modifieddatetime),\n  (isnull(def1.DEFAULTDIMENSION_MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(st1.modifieddatetime, '1950-01-01'))\n  , (isnull(cij1.modifieddatetime, '1950-01-01'))\n  , (isnull(id1.modifieddatetime, '1950-01-01'))\n  , (isnull(idc1.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(sl1.modifieddatetime, '1950-01-01'))\n  , (isnull(sl2.MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(id2.INVENTDIM_MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(id2.INVENTSITE_MODIFIEDDATETIME, '1950-01-01'))\n ) AS UpdateDate(LastUpdateDate)) AS LATEST_MODIFIEDDATETIME \nFROM dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custinvoicetrans cit1\nleft join (select distinct sl10.defaultdimension\n\t\t\t\t, max(\n\t\t\t\t\tcase when da1.name = 'BusinessUnit' then davsi1.displayvalue\n\t\t\t\t\t\telse null\n\t\t\t\t\t\tend\n\t\t\t\t\t) over (partition by sl10.defaultdimension) as BUSINESS_UNIT\n\t\t\t\t, max(\n\t\t\t\t\t(select max(i) from (values (davsi1.modifieddatetime), (dav1.modifieddatetime), (da1.modifieddatetime), (desc1.DESC_MODIFIEDDATETIME)) as t(i))\n\t\t\t\t\t) over (partition by sl10.defaultdimension) as DEFAULTDIMENSION_MODIFIEDDATETIME\n\t\t\tfrom (select distinct defaultdimension from dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.salesline) sl10\n\t\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattributevaluesetitem davsi1 on\n\t\t\t\tsl10.defaultdimension = davsi1.dimensionattributevalueset\n\t\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattributevalue dav1 on\n\t\t\t\tdavsi1.dimensionattributevalue = dav1.recid\n\t\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattribute da1 on\n\t\t\t\tdav1.dimensionattribute = da1.recid\n\t\t\tleft join (select dft1.value, da2.name, dft1.description\n\t\t\t\t\t\t\t, (select max(i) from (values (dft1.modifieddatetime), (dadc1.modifieddatetime), (da2.modifieddatetime)) as t(i)) as DESC_MODIFIEDDATETIME\n\t\t\t\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionfinancialtag dft1\n\t\t\t\t\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattributedircategory dadc1 on\n\t\t\t\t\t\t\tdft1.financialtagcategory = dadc1.dircategory\n\t\t\t\t\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattribute da2 on\n\t\t\t\t\t\t\tdadc1.dimensionattribute = da2.recid) desc1 on\n\t\t\t\tdavsi1.displayvalue = desc1.value and\n\t\t\t\tda1.name = desc1.name\n\t\t\t) def1 on\n\tcit1.defaultdimension = def1.defaultdimension\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.salestable st1 on\n\tcit1.dataareaid = st1.dataareaid and\n\tcit1.origsalesid = st1.salesid\nleft join (select distinct cij10.dataareaid, isnull(cij10.numbersequencegroup, '') as numbersequencegroup, cij10.salesid, cij10.invoicedate, cij10.invoiceid\n\t\t\t, max(cij10.orderaccount) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as orderaccount\n\t\t\t, max(cij10.custgroup) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as custgroup\n\t\t\t, max(cij10.invoicepostaladdress) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as invoicepostaladdress\n\t\t\t, max(cij10.dlvterm) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as dlvterm\n\t\t\t, max(cij10.payment) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as payment\n\t\t\t, max(cij10.returnreasoncodeid) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as returnreasoncodeid\n\t\t\t, max(cij10.salesoriginid) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as salesoriginid\n\t\t\t, max(cij10.inventlocationid) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as inventlocationid\n\t\t\t, max(cij10.workersalestaker) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as workersalestaker\n\t\t\t, max(cij10.documentdate) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as documentdate\n\t\t\t, max(cij10.duedate) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as duedate\n\t\t\t, max(cij10.ledgervoucher) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as ledgervoucher\n\t\t\t, max(cij10.purchaseorder) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as purchaseorder\n\t\t\t, max(cij10.salestype) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as salestype\n\t\t\t\n\t\t\t, max(cij10.journalnum) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as journalnum\n\t\t\t, max(ljta10.journalname) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as journalname\n\t\t\t\n\t\t\t, max(cij10.ismanbase) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as ismanbase\n\t\t\t\n\t\t\t, max((select max(i) from (values (cij10.modifieddatetime), (ljta10.modifieddatetime)) as t(i))) over (partition by cij10.dataareaid, isnull(cij10.numbersequencegroup, ''), cij10.salesid, cij10.invoicedate, cij10.invoiceid) as modifieddatetime\n\t\tfrom (select cij100.recid, cij100.dataareaid, cij100.numbersequencegroup, cij100.salesid, cij100.invoicedate, cij100.invoiceid\n\t\t\t\t\t, cij100.orderaccount, cij100.custgroup, cij100.invoicepostaladdress, cij100.dlvterm, cij100.payment, cij100.returnreasoncodeid, cij100.salesoriginid, cij100.inventlocationid, cij100.workersalestaker, cij100.documentdate, cij100.duedate, cij100.ledgervoucher, cij100.purchaseorder, cij100.salestype\n\t\t\t\t\t, cij100.ismanbase\n\t\t\t\t\t, case when max(cij100.ismanbase) over (partition by cij100.dataareaid, isnull(cij100.numbersequencegroup, ''), cij100.salesid, cij100.invoicedate, cij100.invoiceid) = 1 and cij100.ismanbase = 0 then ''\n\t\t\t\t\t\telse cij100.journalnum\n\t\t\t\t\t\tend as journalnum\n\t\t\t\t\t, cij100.modifieddatetime\n\t\t\t\tfrom (select cij1000.recid, cij1000.dataareaid, cij1000.numbersequencegroup, cij1000.salesid, cij1000.invoicedate, cij1000.invoiceid\n\t\t\t\t\t, cij1000.orderaccount, cij1000.custgroup, cij1000.invoicepostaladdress, cij1000.dlvterm, cij1000.payment, cij1000.returnreasoncodeid, cij1000.salesoriginid, cij1000.inventlocationid, cij1000.workersalestaker, cij1000.documentdate, cij1000.duedate, cij1000.ledgervoucher, cij1000.purchaseorder, cij1000.salestype\n\t\t\t\t\t, case --sealy --manbase journals moved from manbase into ax (not ax originated)\n\t\t\t\t\t\t\twhen cij1000.dataareaid = '415' and isnull(ljta1000.journalname, '') like 'MB%' then 1\n\t\t\t\t\t\t\t--from manbase, but eluded journal name filter   --from manbase, but eluded journal name filter\n\t\t\t\t\t\t\twhen left(cij1000.invoiceid, 4) = '415F' or left(cij1000.invoiceid, 5) = 'TC415' then 1\n\t\t\t\t\t\t\t--and, at last, specific cutover date for old manbase into ax history\n\t\t\t\t\t\t\twhen convert(date, cij1000.invoicedate) = '2020-03-29' then 1\n\t\t\t\t\t\telse 0\n\t\t\t\t\t\tend as ismanbase\n\t\t\t\t\t, ljt1000.journalnum\n\t\t\t\t\t, (select max(i) from (values (cij1000.modifieddatetime), (ljt1000.modifieddatetime), (ljta1000.modifieddatetime)) as t(i)) as modifieddatetime\n\t\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custinvoicejour cij1000\n\t\t\t\tleft join (select dataareaid, invoice, journalnum, modifieddatetime\n\t\t\t\t\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.ledgerjournaltrans) ljt1000 on\n\t\t\t\t\tcij1000.dataareaid = ljt1000.dataareaid and\n\t\t\t\t\tcij1000.invoiceid = ljt1000.invoice\n\t\t\t\tleft join (select dataareaid, journalnum, journalname, modifieddatetime\n\t\t\t\t\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.ledgerjournaltable) ljta1000 on\n\t\t\t\t\tljt1000.dataareaid = ljta1000.dataareaid and\n\t\t\t\t\tljt1000.journalnum = ljta1000.journalnum) cij100\n\t\t\t) cij10\n\tleft join (select dataareaid, journalnum\n\t\t\t\t\t, max(journalname) as journalname\n\t\t\t\t\t, max(modifieddatetime) as modifieddatetime\n\t\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.ledgerjournaltable\n\t\t\t\tgroup by dataareaid, journalnum) ljta10 on\n\t\tcij10.dataareaid = ljta10.dataareaid and\n\t\tcij10.journalnum = ljta10.journalnum) cij1 on\n\tcit1.dataareaid = cij1.dataareaid and\n\tisnull(cit1.numbersequencegroup, '') = isnull(cij1.numbersequencegroup, '') and\n\tcit1.salesid = cij1.salesid and\n\tcit1.invoicedate = cij1.invoicedate and\n\tcit1.invoiceid = cij1.invoiceid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id1 on\n\tcit1.dataareaid = id1.dataareaid and\n\tcit1.inventdimid = id1.inventdimid\nleft join (select idp10.dataareaid, idp10.configid, idp10.itemid, idp10.productlifecyclestateid\n\t\t\t, max(greatest(idc10.modifieddatetime, id10.modifieddatetime, idp10.modifieddatetime)) as MODIFIEDDATETIME\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdimcombination idc10\n\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id10 on\n\t\t\tidc10.dataareaid = id10.dataareaid and\n\t\t\tidc10.inventdimid = id10.inventdimid\n\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdistinctproduct idp10 on\n\t\t\tid10.dataareaid = idp10.dataareaid and\n\t\t\tid10.configid = idp10.configid\n\t\tgroup by idp10.dataareaid, idp10.configid, idp10.itemid, idp10.productlifecyclestateid) idc1 on\n\tcit1.dataareaid = idc1.dataareaid and\n\tid1.configid = idc1.configid and\n\tcit1.itemid = idc1.itemid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.salesline sl1 on\n\tcit1.dataareaid = sl1.dataareaid and\n\tcit1.inventtransid = sl1.inventtransid\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'DocumentStatus'\n\t\tgroup by enumname, enumvalue) tet1 on\n\tst1.documentstatus = tet1.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'ReturnStatusHeader'\n\t\tgroup by enumname, enumvalue) tet2 on\n\tst1.returnstatus = tet2.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'SalesStatus'\n\t\tgroup by enumname, enumvalue) tet3 on\n\t'3' = tet3.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'ReturnStatusLine'\n\t\tgroup by enumname, enumvalue) tet4 on\n\tsl1.returnstatus = tet4.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'SalesStatus'\n\t\tgroup by enumname, enumvalue) tet5 on\n\t'3' = tet5.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'SalesType'\n\t\tgroup by enumname, enumvalue) tet6 on\n\tcij1.salestype = tet6.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'ShipCarrierDlvType'\n\t\tgroup by enumname, enumvalue) tet7 on\n\tsl1.shipcarrierdlvtype = tet7.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'TradeLineDlvType'\n\t\tgroup by enumname, enumvalue) tet8 on\n\tsl1.deliverytype = tet8.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n\t\twhere enumname = 'CostingVersionPriceType'\n\t\tgroup by enumname, enumvalue) tet9 on\n\t0 = tet9.enumvalue\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.mcrsaleslinedropshipment mslds1 on\n\tsl1.dataareaid = mslds1.dataareaid and\n\tsl1.recid = mslds1.salesline\nleft join (select distinct dataareaid, inventtransid\n\t\t\t, max(createddatetime) over (partition by dataareaid, inventtransid) as CREATEDDATETIME\n\t\t\t, max(inventdimid) over (partition by dataareaid, inventtransid) as INVENTDIMID\n\t\t\t, max(salesid) over (partition by dataareaid, inventtransid) as SALESID\n\t\t\t, max(modifieddatetime) over (partition by dataareaid, inventtransid) as MODIFIEDDATETIME\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.salesline) sl2 on\n\tsl1.dataareaid = sl2.dataareaid and\n\tsl1.inventtransidreturn = sl2.inventtransid\nleft join (select id20.dataareaid, id20.inventdimid\n\t\t\t, max(is20.timezone) over (partition by id20.dataareaid, id20.inventdimid) as TIMEZONE\n\t\t\t, max(id20.modifieddatetime) over (partition by id20.dataareaid, id20.inventdimid) as INVENTDIM_MODIFIEDDATETIME\n\t\t\t, max(is20.modifieddatetime) over (partition by id20.dataareaid, id20.inventdimid) as INVENTSITE_MODIFIEDDATETIME\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id20\n\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventsite is20 on\n\t\t\tid20.dataareaid = is20.dataareaid and\n\t\t\tid20.inventsiteid = is20.siteid) id2 on\n\tsl2.dataareaid = id2.dataareaid and\n\tsl2.INVENTDIMID = id2.inventdimid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dataarea da1 on\n\tsl2.dataareaid = da1.Id\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timezoneinfo tzi1 on\n\tsl2.CREATEDDATETIME >= tzi1.startdate and\n\tsl2.CREATEDDATETIME < tzi1.enddate and\n\tisnull(id2.TIMEZONE, da1.timezone) = tzi1.timezoneid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dataarea da3 on\n\tsl1.dataareaid = da3.Id\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timezoneinfo tzi3 on\n\tsl1.createddatetime >= tzi3.startdate and\n\tsl1.createddatetime < tzi3.enddate and\n\tda3.timezone = tzi3.timezoneid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.mcrsaleslinepriceoverride mslpo1 on\n\tsl1.recid = mslpo1.salesline\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.mcrsaleslinepriceoverride mslpo2 on\n\tmslpo1.recid = mslpo2.recid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.tpxpriceoverridereasontable tport1 on\n\tmslpo1.dataareaid = tport1.dataareaid and\n\tmslpo1.reasoncode = tport1.subcodeid and\n\tmslpo1.partition = tport1.partition\nwhere cit1.recid is not null\nand cit1.dataareaid is not null\nand cit1.itemid is not null\nand isnull(cij1.ismanbase, 0) = 0",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "RECID",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "RECID",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "DATAAREAID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DATAAREAID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ITEMID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "ITEMID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CURRENCYCODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CURRENCYCODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DEFAULTDIMENSION",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "DEFAULTDIMENSION",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "TRANSACTIONCODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TRANSACTIONCODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "INVENTDIMID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVENTDIMID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DELIVERYPOSTALADDRESS",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "DELIVERYPOSTALADDRESS",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "MCRDLVMODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "MCRDLVMODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESCATEGORY",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SALESCATEGORY",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "RETURNDISPOSITIONCODEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "RETURNDISPOSITIONCODEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ORIGSALESID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "ORIGSALESID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TAXGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TAXGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TAXITEMGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TAXITEMGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESUNIT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESUNIT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DLVDATE",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "DLVDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVOICEDATE",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "INVOICEDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "RETURNARRIVALDATE",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "RETURNARRIVALDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "RETURNCLOSEDDATE",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "RETURNCLOSEDDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTTRANSID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVENTTRANSID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "INVOICEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVOICEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LINENUM",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "LINENUM",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTQTY",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTQTY",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "QTY",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "QTY",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "QTYPHYSICAL",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "QTYPHYSICAL",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "PRICEUNIT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "PRICEUNIT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "SALESPRICE",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "SALESPRICE",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "COMMISSAMOUNTCUR",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "COMMISSAMOUNTCUR",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "COMMISSAMOUNTMST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "COMMISSAMOUNTMST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "LINEAMOUNT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "LINEAMOUNT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "LINEAMOUNTMST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "LINEAMOUNTMST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "TAXAMOUNT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "TAXAMOUNT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "TAXAMOUNTMST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "TAXAMOUNTMST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "DISCPERCENT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "DISCPERCENT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "DISCAMOUNT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "DISCAMOUNT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "LINEDISC",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "LINEDISC",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "LINEPERCENT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "LINEPERCENT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "SUMLINEDISC",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "SUMLINEDISC",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "SUMLINEDISCMST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "SUMLINEDISCMST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "DEFAULTDIMENSION_BUSINESS_UNIT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DEFAULTDIMENSION_BUSINESS_UNIT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_SMMCAMPAIGNID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_SMMCAMPAIGNID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_COMMISSIONGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_COMMISSIONGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_INVOICEACCOUNT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_INVOICEACCOUNT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_MARKUPGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_MARKUPGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_RETURNREASONCODEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_RETURNREASONCODEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_LINEDISC",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_LINEDISC",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_SALESPOOLID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_SALESPOOLID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_PRICEGROUPID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_PRICEGROUPID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_WORKERSALESRESPONSIBLE",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SALESTABLE_WORKERSALESRESPONSIBLE",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_ATAGENT",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SALESTABLE_ATAGENT",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_SHIPCARRIERBLINDSHIPMENT",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SALESTABLE_SHIPCARRIERBLINDSHIPMENT",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SALESTABLE_SHIPCARRIEREXPEDIITEDSHIPMENT",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_ORDERBLOCKED",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SALESTABLE_ORDERBLOCKED",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_MCRORDERSTOPPED",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SALESTABLE_MCRORDERSTOPPED",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_SHIPCARRIERFUELSURCHARGE",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SALESTABLE_SHIPCARRIERFUELSURCHARGE",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_INVENTSITEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESTABLE_INVENTSITEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESTABLE_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "SALESTABLE_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_ORDERACCOUNT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_ORDERACCOUNT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_CUSTGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_CUSTGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_INVOICEPOSTALADDRESS",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_INVOICEPOSTALADDRESS",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_DLVTERM",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_DLVTERM",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_PAYMENT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_PAYMENT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_RETURNREASONCODEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_RETURNREASONCODEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_SALESORIGINID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_SALESORIGINID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_INVENTLOCATIONID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_INVENTLOCATIONID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_WORKERSALESTAKER",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_WORKERSALESTAKER",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_DOCUMENTDATE",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_DOCUMENTDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_DUEDATE",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_DUEDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_LEDGERVOUCHER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_LEDGERVOUCHER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_PURCHASEORDER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_PURCHASEORDER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_SALESTYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_SALESTYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_JOURNALNUM",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_JOURNALNUM",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_JOURNALNAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_JOURNALNAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTDIM1_CONFIGID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVENTDIM1_CONFIGID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "INVENTDIM1_INVENTSITEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVENTDIM1_INVENTSITEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "INVENTDIM1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "INVENTDIM1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTDIMCOMBINATION_PDMSTATUS",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVENTDIMCOMBINATION_PDMSTATUS",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "INVENTDIMCOMBINATION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "INVENTDIMCOMBINATION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_TPX_RETURNREASONCODEID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESLINE1_TPX_RETURNREASONCODEID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_LINEDISC",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "SALESLINE1_LINEDISC",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_LINEPERCENT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "SALESLINE1_LINEPERCENT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_COMPLETE",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SALESLINE1_COMPLETE",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_ORDERBLOCKED",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SALESLINE1_ORDERBLOCKED",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_SCRAP",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SALESLINE1_SCRAP",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_STOCKEDPRODUCT",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SALESLINE1_STOCKEDPRODUCT",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_TPX_MANUFACTUREDATE",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "SALESLINE1_TPX_MANUFACTUREDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_TPX_RELATEDORDERDATE",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "SALESLINE1_TPX_RELATEDORDERDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_CREATEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "SALESLINE1_CREATEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_TPX_PRODUCTIONTIME",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SALESLINE1_TPX_PRODUCTIONTIME",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_TPX_REGISTRYNUMBER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESLINE1_TPX_REGISTRYNUMBER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESLINE1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "SALESLINE1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_TRADELINEDLVTYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_PRICETYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "SALESLINE2_CREATEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "SALESLINE2_CREATEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "SALESLINE2_INVENTDIMID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESLINE2_INVENTDIMID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESLINE2_SALESID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESLINE2_SALESID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESLINE2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "SALESLINE2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "DATAAREA1_TIMEZONE",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "DATAAREA1_TIMEZONE",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "TIMEZONEINFO1_TIMEBIAS",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "TIMEZONEINFO1_TIMEBIAS",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "DATAAREA3_TIMEZONE",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "DATAAREA3_TIMEZONE",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "TIMEZONEINFO3_TIMEBIAS",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "TIMEZONEINFO3_TIMEBIAS",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE1_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE1_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "INVENTITEMPRICE1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE2_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE2_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "INVENTITEMPRICE2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE3_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE3_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE3_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "INVENTITEMPRICE3_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE4_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE4_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE4_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "INVENTITEMPRICE4_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE6_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE6_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE6_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "INVENTITEMPRICE6_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE7_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE7_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE7_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "INVENTITEMPRICE7_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE8_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE8_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE8_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "INVENTITEMPRICE8_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE9_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE9_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE9_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "INVENTITEMPRICE9_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "MCRSALESLINEPRICEOVERRIDE1_RECID",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "MCRSALESLINEPRICEOVERRIDE1_RECID",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "MCRSALESLINEPRICEOVERRIDE2_REASONCODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "MCRSALESLINEPRICEOVERRIDE2_REASONCODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TPXPRICEOVERRIDEREASONTABLE_DESCRIPTION",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PDMSTATUS_NAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "PDMSTATUS_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													},
													"sink": {
														"name": "HK_JOB_RUN_ID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "HK_SOURCE_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": true
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_fabric_wh",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"p_directory": {
													"value": "@pipeline().parameters.p_temp_directory",
													"type": "Expression"
												},
												"p_root_system": {
													"value": "@pipeline().globalParameters.rootDir",
													"type": "Expression"
												},
												"p_file_name": {
													"value": "@pipeline().parameters.p_temp_file_nm",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "d365_raw_load_failure_notification_1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "custinvoicetrans_to_adls_d365",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('custinvoicetrans_to_adls_d365').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@activity('custinvoicetrans_to_adls_d365').Error['message']",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('custinvoicetrans_to_adls_d365').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('custinvoicetrans_to_adls_d365').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "d365_load_to_raw_fail_1",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "d365_raw_load_failure_notification_1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('custinvoicetrans_to_adls_d365').Error['message']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								},
								{
									"name": "d365_raw_load_failure_notification_2",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "custinvoicetrans_standardcost_to_adls_d365",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('custinvoicetrans_standardcost_to_adls_d365').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@activity('custinvoicetrans_standardcost_to_adls_d365').Error['message']",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('custinvoicetrans_standardcost_to_adls_d365').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('custinvoicetrans_standardcost_to_adls_d365').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "d365_load_to_raw_fail_2",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "d365_raw_load_failure_notification_2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('custinvoicetrans_standardcost_to_adls_d365').Error['message']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								},
								{
									"name": "custinvoicetrans_standardcost_to_adls_d365",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "WarehouseSource",
											"additionalColumns": [
												{
													"name": "HK_JOB_RUN_ID",
													"value": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													}
												},
												{
													"name": "HK_SOURCE_NAME",
													"value": {
														"value": "@pipeline().parameters.p_src_nm",
														"type": "Expression"
													}
												},
												{
													"name": "LAST_MODIFIEDDATE",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": "select cit1.standardcost_source as STANDARDCOST_SOURCE\n, cit1.recid as RECID\n, cit1.dataareaid as DATAAREAID\n, cit1.itemid as ITEMID\n, cit1.configid as INVENTDIM_CONFIGID\n, cit1.inventsiteid as INVENTDIM_INVENTSITEID\n, cit1.modifieddatetime as INVENTITEMPRICE_MODIFIEDDATETIME\n, cit1.activationdate as INVENTITEMPRICE_ACTIVATIONDATE\n, cit1.createddatetime as INVENTITEMPRICE_CREATEDDATETIME\n, cit1.standardcost as INVENTITEMPRICE_STANDARDCOST\nfrom (\n\tselect iip1.standardcost_source, iip1.recid, iip1.dataareaid, iip1.itemid, iip1.configid, iip1.inventsiteid, iip1.modifieddatetime, iip1.activationdate, iip1.createddatetime, iip1.standardcost\n\tfrom (select 'iip1' as standardcost_source, cit11.recid, cit11.dataareaid, cit11.itemid, id11.configid, id11.inventsiteid, iip11.modifieddatetime, iip11.activationdate, iip11.createddatetime\n\t\t\t, ((iip11.price / isnull(nullif(iip11.priceunit, 0), 1)) + (iip11.markup / isnull(nullif(iip11.priceqty, 0), 1))) as standardcost\n\t\t\t, row_number() over (partition by cit11.recid, cit11.dataareaid, cit11.itemid, id11.configid, id11.inventsiteid order by iip11.activationdate desc, iip11.modifieddatetime desc) as row_num\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custinvoicetrans cit11\n\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id11 on\n\t\t\tcit11.dataareaid = id11.dataareaid and\n\t\t\t\tcit11.inventdimid = id11.inventdimid\n\t\t\tinner join (select iip111.dataareaid, iip111.itemid, id111.configid, id111.inventsiteid, iip111.modifieddatetime, iip111.activationdate, iip111.createddatetime\n\t\t\t\t\t\t, iip111.price, iip111.priceunit, iip111.markup, iip111.priceqty\n\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventitemprice iip111\n\t\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id111 on\n\t\t\t\t\t\tiip111.dataareaid = id111.dataareaid and\n\t\t\t\t\tiip111.inventdimid = id111.inventdimid\n\t\t\twhere iip111.pricetype = 0) iip11 on\n\t\t\tcit11.dataareaid = iip11.dataareaid and\n\t\t\t\tcit11.itemid = iip11.itemid and\n\t\t\t\tid11.configid = iip11.configid and\n\t\t\t\tid11.inventsiteid = iip11.inventsiteid and\n\t\t\t\tcit11.invoicedate >= iip11.activationdate) iip1\n\twhere iip1.row_num = 1\nunion all\n\tselect iip2.standardcost_source, iip2.recid, iip2.dataareaid, iip2.itemid, null as configid, iip2.inventsiteid, iip2.modifieddatetime, iip2.activationdate, iip2.createddatetime, iip2.standardcost\n\tfrom (select 'iip2' as standardcost_source, cit21.recid, cit21.dataareaid, cit21.itemid, id21.inventsiteid, iip21.modifieddatetime, iip21.activationdate, iip21.createddatetime\n\t\t\t, ((iip21.price / isnull(nullif(iip21.priceunit, 0), 1)) + (iip21.markup / isnull(nullif(iip21.priceqty, 0), 1))) as standardcost\n\t\t\t, row_number() over (partition by cit21.recid, cit21.dataareaid, cit21.itemid, id21.inventsiteid order by iip21.activationdate desc, iip21.modifieddatetime desc) as row_num\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custinvoicetrans cit21\n\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id21 on\n\t\t\tcit21.dataareaid = id21.dataareaid and\n\t\t\t\tcit21.inventdimid = id21.inventdimid\n\t\t\tinner join (select iip211.dataareaid, iip211.itemid, id211.inventsiteid, iip211.modifieddatetime, iip211.activationdate, iip211.createddatetime\n\t\t\t\t\t\t, iip211.price, iip211.priceunit, iip211.markup, iip211.priceqty\n\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventitemprice iip211\n\t\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id211 on\n\t\t\t\t\t\tiip211.dataareaid = id211.dataareaid and\n\t\t\t\t\tiip211.inventdimid = id211.inventdimid\n\t\t\twhere iip211.pricetype = 0) iip21 on\n\t\t\tcit21.dataareaid = iip21.dataareaid and\n\t\t\t\tcit21.itemid = iip21.itemid and\n\t\t\t\tid21.inventsiteid = iip21.inventsiteid and\n\t\t\t\tcit21.invoicedate >= iip21.activationdate) iip2\n\twhere iip2.row_num = 1\nunion all\n\tselect iip3.standardcost_source, iip3.recid, iip3.dataareaid, iip3.itemid, iip3.configid, null as inventsiteid, iip3.modifieddatetime, iip3.activationdate, iip3.createddatetime, iip3.standardcost\n\tfrom (select 'iip3' as standardcost_source, cit31.recid, cit31.dataareaid, cit31.itemid, id31.configid, iip31.modifieddatetime, iip31.activationdate, iip31.createddatetime\n\t\t\t, ((iip31.price / isnull(nullif(iip31.priceunit, 0), 1)) + (iip31.markup / isnull(nullif(iip31.priceqty, 0), 1))) as standardcost\n\t\t\t, row_number() over (partition by cit31.recid, cit31.dataareaid, cit31.itemid, id31.configid order by iip31.activationdate desc, iip31.modifieddatetime desc) as row_num\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custinvoicetrans cit31\n\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id31 on\n\t\t\tcit31.dataareaid = id31.dataareaid and\n\t\t\t\tcit31.inventdimid = id31.inventdimid\n\t\t\tinner join (select iip311.dataareaid, iip311.itemid, id311.configid, iip311.modifieddatetime, iip311.activationdate, iip311.createddatetime\n\t\t\t\t\t\t, iip311.price, iip311.priceunit, iip311.markup, iip311.priceqty\n\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventitemprice iip311\n\t\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id311 on\n\t\t\t\t\t\tiip311.dataareaid = id311.dataareaid and\n\t\t\t\t\tiip311.inventdimid = id311.inventdimid\n\t\t\twhere iip311.pricetype = 0) iip31 on\n\t\t\tcit31.dataareaid = iip31.dataareaid and\n\t\t\t\tcit31.itemid = iip31.itemid and\n\t\t\t\tid31.configid = iip31.configid and\n\t\t\t\tcit31.invoicedate >= iip31.activationdate) iip3\n\twhere iip3.row_num = 1\nunion all\n\tselect iip4.standardcost_source, iip4.recid, iip4.dataareaid, iip4.itemid, null as configid, null as inventsiteid, iip4.modifieddatetime, iip4.activationdate, iip4.createddatetime, iip4.standardcost\n\tfrom (select 'iip4' as standardcost_source, cit41.recid, cit41.dataareaid, cit41.itemid, iip41.modifieddatetime, iip41.activationdate, iip41.createddatetime\n\t\t\t, ((iip41.price / isnull(nullif(iip41.priceunit, 0), 1)) + (iip41.markup / isnull(nullif(iip41.priceqty, 0), 1))) as standardcost\n\t\t\t, row_number() over (partition by cit41.recid, cit41.dataareaid, cit41.itemid order by iip41.activationdate desc, iip41.modifieddatetime desc) as row_num\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custinvoicetrans cit41\n\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id41 on\n\t\t\tcit41.dataareaid = id41.dataareaid and\n\t\t\t\tcit41.inventdimid = id41.inventdimid\n\t\t\tinner join (select iip411.dataareaid, iip411.itemid, iip411.modifieddatetime, iip411.activationdate, iip411.createddatetime\n\t\t\t\t\t\t, iip411.price, iip411.priceunit, iip411.markup, iip411.priceqty\n\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventitemprice iip411\n\t\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id411 on\n\t\t\t\t\t\tiip411.dataareaid = id411.dataareaid and\n\t\t\t\t\tiip411.inventdimid = id411.inventdimid\n\t\t\twhere iip411.pricetype = 0) iip41 on\n\t\t\tcit41.dataareaid = iip41.dataareaid and\n\t\t\t\tcit41.itemid = iip41.itemid and\n\t\t\t\tcit41.invoicedate >= iip41.activationdate) iip4\n\twhere iip4.row_num = 1\nunion all\n\tselect iip6.standardcost_source, null as recid, iip6.dataareaid, iip6.itemid, iip6.configid, iip6.inventsiteid, iip6.modifieddatetime, iip6.activationdate, iip6.createddatetime, iip6.standardcost\n\tfrom (select 'iip6' as standardcost_source, iip21.dataareaid, iip21.itemid, id21.configid, id21.inventsiteid, iip21.modifieddatetime, iip21.activationdate, iip21.createddatetime\n\t\t\t, ((iip21.price / isnull(nullif(iip21.priceunit, 0), 1)) + (iip21.markup / isnull(nullif(iip21.priceqty, 0), 1))) as standardcost\n\t\t\t, row_number() over (partition by iip21.dataareaid, iip21.itemid, id21.configid, id21.inventsiteid order by iip21.activationdate desc, iip21.modifieddatetime desc) as row_num\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventitemprice iip21\n\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id21 on\n\t\t\tiip21.dataareaid = id21.dataareaid and\n\t\t\t\tiip21.inventdimid = id21.inventdimid\n\t\twhere iip21.pricetype = 0) iip6\n\twhere iip6.row_num = 1\nunion all\n\tselect iip7.standardcost_source, null as recid, iip7.dataareaid, iip7.itemid, null as configid, iip7.inventsiteid, iip7.modifieddatetime, iip7.activationdate, iip7.createddatetime, iip7.standardcost\n\tfrom (select 'iip7' as standardcost_source, iip22.dataareaid, iip22.itemid, id22.inventsiteid, iip22.modifieddatetime, iip22.activationdate, iip22.createddatetime\n\t\t\t, ((iip22.price / isnull(nullif(iip22.priceunit, 0), 1)) + (iip22.markup / isnull(nullif(iip22.priceqty, 0), 1))) as standardcost\n\t\t\t, row_number() over (partition by iip22.dataareaid, iip22.itemid, id22.inventsiteid order by iip22.activationdate desc, iip22.modifieddatetime desc) as row_num\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventitemprice iip22\n\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id22 on\n\t\t\tiip22.dataareaid = id22.dataareaid and\n\t\t\t\tiip22.inventdimid = id22.inventdimid\n\t\twhere iip22.pricetype = 0) iip7\n\twhere iip7.row_num = 1\nunion all\n\tselect iip8.standardcost_source, null as recid, iip8.dataareaid, iip8.itemid, iip8.configid, null as inventsiteid, iip8.modifieddatetime, iip8.activationdate, iip8.createddatetime, iip8.standardcost\n\tfrom (select 'iip8' as standardcost_source, iip23.dataareaid, iip23.itemid, id23.configid, iip23.modifieddatetime, iip23.activationdate, iip23.createddatetime\n\t\t\t, ((iip23.price / isnull(nullif(iip23.priceunit, 0), 1)) + (iip23.markup / isnull(nullif(iip23.priceqty, 0), 1))) as standardcost\n\t\t\t, row_number() over (partition by iip23.dataareaid, iip23.itemid, id23.configid order by iip23.activationdate desc, iip23.modifieddatetime desc) as row_num\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventitemprice iip23\n\t\t\tinner join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim id23 on\n\t\t\tiip23.dataareaid = id23.dataareaid and\n\t\t\t\tiip23.inventdimid = id23.inventdimid\n\t\twhere iip23.pricetype = 0) iip8\n\twhere iip8.row_num = 1\nunion all\n\tselect iip9.standardcost_source, null as recid, iip9.dataareaid, iip9.itemid, null as configid, null as inventsiteid, iip9.modifieddatetime, iip9.activationdate, iip9.createddatetime, iip9.standardcost\n\tfrom (select 'iip9' as standardcost_source, iip24.dataareaid, iip24.itemid, iip24.modifieddatetime, iip24.activationdate, iip24.createddatetime\n\t\t\t, ((iip24.price / isnull(nullif(iip24.priceunit, 0), 1)) + (iip24.markup / isnull(nullif(iip24.priceqty, 0), 1))) as standardcost\n\t\t\t, row_number() over (partition by iip24.dataareaid, iip24.itemid order by iip24.activationdate desc, iip24.modifieddatetime desc) as row_num\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventitemprice iip24\n\t\twhere iip24.pricetype = 0) iip9\n\twhere iip9.row_num = 1\n\t)\ncit1",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeSink",
											"preCopyScript": {
												"value": "@concat('TRUNCATE TABLE ',pipeline().parameters.p_tgt_raw_schema_nm,'.',pipeline().parameters.p_tgt_raw_table_nm_2)",
												"type": "Expression"
											},
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "ls_blob_storage",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@pipeline().globalParameters.rootDir",
												"type": "Expression"
											}
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "HK_SOURCE_NAME",
														"type": "String",
														"physicalType": "VARCHAR"
													}
												},
												{
													"source": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													},
													"sink": {
														"name": "HK_JOB_RUN_ID",
														"type": "String",
														"physicalType": "VARCHAR"
													}
												},
												{
													"source": {
														"name": "STANDARDCOST_SOURCE",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "STANDARDCOST_SOURCE",
														"type": "String",
														"physicalType": "VARCHAR"
													}
												},
												{
													"source": {
														"name": "RECID",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "RECID",
														"type": "Int64",
														"physicalType": "NUMBER"
													}
												},
												{
													"source": {
														"name": "DATAAREAID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DATAAREAID",
														"type": "String",
														"physicalType": "VARCHAR"
													}
												},
												{
													"source": {
														"name": "ITEMID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "ITEMID",
														"type": "String",
														"physicalType": "VARCHAR"
													}
												},
												{
													"source": {
														"name": "INVENTDIM_CONFIGID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "INVENTDIM_CONFIGID",
														"type": "String",
														"physicalType": "VARCHAR"
													}
												},
												{
													"source": {
														"name": "INVENTDIM_INVENTSITEID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "INVENTDIM_INVENTSITEID",
														"type": "String",
														"physicalType": "VARCHAR"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "INVENTITEMPRICE_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "TIMESTAMP_TZ"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE_ACTIVATIONDATE",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "INVENTITEMPRICE_ACTIVATIONDATE",
														"type": "DateTime",
														"physicalType": "DATE"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE_CREATEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime2"
													},
													"sink": {
														"name": "INVENTITEMPRICE_CREATEDDATETIME",
														"type": "DateTime",
														"physicalType": "TIMESTAMP_TZ"
													}
												},
												{
													"source": {
														"name": "INVENTITEMPRICE_STANDARDCOST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 6,
														"precision": 38
													},
													"sink": {
														"name": "INVENTITEMPRICE_STANDARDCOST",
														"type": "Int64",
														"physicalType": "NUMBER"
													}
												},
												{
													"source": {
														"name": "LAST_MODIFIEDDATE",
														"type": "String"
													},
													"sink": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "TIMESTAMP_TZ"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_fabric_wh",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_snowflake",
											"type": "DatasetReference",
											"parameters": {
												"p_tgt_table_name": {
													"value": "@pipeline().parameters.p_tgt_raw_table_nm_2",
													"type": "Expression"
												},
												"p_tgt_schema_name": {
													"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
													"type": "Expression"
												},
												"p_ls_DbName": {
													"value": "@pipeline().globalParameters.snow_rawDb",
													"type": "Expression"
												},
												"p_ls_Env": {
													"value": "@pipeline().globalParameters.environment",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "load_fact_sales_invoice",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "switch_nala_retail_d365",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_load_fact_sales_invoice",
								"type": "DataFlowReference",
								"parameters": {
									"df_last_mod_tmstmp_cogsitemcosts": {
										"value": "'@{variables('v_last_mod_tmstmp_cogsitemcosts')}'",
										"type": "Expression"
									},
									"df_hk_job_run_id": {
										"value": "'@{coalesce(pipeline().RunId, -1)}'",
										"type": "Expression"
									},
									"df_hk_source_name": {
										"value": "'@{pipeline().parameters.p_src_nm}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SrcCustInvoiceTrans": {
										"p_directory": {
											"value": "@pipeline().parameters.p_temp_directory",
											"type": "Expression"
										},
										"p_root_system": {
											"value": "@pipeline().globalParameters.rootDir",
											"type": "Expression"
										},
										"p_file_name": {
											"value": "@pipeline().parameters.p_temp_file_nm",
											"type": "Expression"
										}
									},
									"CogsItemCosts": {
										"p_src_directory": {
											"value": "@pipeline().parameters.p_src_directory",
											"type": "Expression"
										},
										"p_src_file_name": {
											"value": "@pipeline().parameters.p_src_file_nm",
											"type": "Expression"
										},
										"p_src_root_system": {
											"value": "@pipeline().globalParameters.rootDir",
											"type": "Expression"
										},
										"p_sheet_name": {
											"value": "@pipeline().parameters.p_src_file_sheet",
											"type": "Expression"
										}
									},
									"CustInvoiceTrans": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_tgt_raw_table_nm",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_rawDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									},
									"sinkCUSTINVOICETRANSCOGSXLSX": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_tgt_raw_table_nm_4",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_rawDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IR-Snowflake-NALA",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "raw_to_curate_sp_call",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "load_fact_sales_invoice",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_snowflake",
							"type": "LinkedServiceReference",
							"parameters": {
								"ls_DbName": {
									"value": "@pipeline().globalParameters.snow_auditDb",
									"type": "Expression"
								},
								"ls_Env": {
									"value": "@pipeline().globalParameters.environment",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('CALL ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb,'.CONTROL.SP_TASK_INITIALIZE(','''',pipeline().RunId,'''',',','''',pipeline().globalParameters.environment,'''',',','''',pipeline().parameters.p_tgt_curate_table_nm,'''',',',pipeline().parameters.p_src_code,')')",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "stored_procedure_failure_notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pp_adf_pipeline_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subscription": {
									"value": "@pipeline().globalParameters.subscriptionId",
									"type": "Expression"
								},
								"resourceGroup": {
									"value": "@pipeline().globalParameters.resourceGroup",
									"type": "Expression"
								},
								"runId": {
									"value": "@coalesce(pipeline().RunId, -1)",
									"type": "Expression"
								},
								"name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('raw_to_curate_sp_call').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('raw_to_curate_sp_call').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('raw_to_curate_sp_call').Duration",
									"type": "Expression"
								},
								"teamWebhookUrl": {
									"value": "@pipeline().globalParameters.teamsWebhookUrl",
									"type": "Expression"
								},
								"notificationTime": {
									"value": "@utcNow()",
									"type": "Expression"
								},
								"taskName": {
									"value": "@pipeline().parameters.p_tgt_curate_table_nm",
									"type": "Expression"
								},
								"taskStepNumber": {
									"value": "@pipeline().parameters.p_src_code",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pipeline_execution_notification",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@if(equals(activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE'],'TRUE'),bool('TRUE'), bool('FALSE'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "pp_stored_procedure_failure_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@toUpper('failed')",
												"type": "Expression"
											},
											"message": {
												"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": {
												"value": "@pipeline().parameters.p_tgt_curate_table_nm",
												"type": "Expression"
											},
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "curate_load_failure",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "pp_stored_procedure_failure_notification",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "stored_procedure_success_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('raw_to_curate_sp_call').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@concat(pipeline().parameters.p_tgt_curate_table_nm, ' is successfully loaded')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": {
												"value": "@pipeline().parameters.p_tgt_curate_table_nm",
												"type": "Expression"
											},
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "load_raw_failure_notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "load_fact_sales_invoice",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pp_adf_pipeline_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subscription": {
									"value": "@pipeline().globalParameters.subscriptionId",
									"type": "Expression"
								},
								"resourceGroup": {
									"value": "@pipeline().globalParameters.resourceGroup",
									"type": "Expression"
								},
								"runId": {
									"value": "@coalesce(pipeline().RunId, -1)",
									"type": "Expression"
								},
								"name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('load_fact_sales_invoice').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('load_fact_sales_invoice').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('load_fact_sales_invoice').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('load_fact_sales_invoice').Duration",
									"type": "Expression"
								},
								"teamWebhookUrl": {
									"value": "@pipeline().globalParameters.teamsWebhookUrl",
									"type": "Expression"
								},
								"notificationTime": {
									"value": "@utcNow()",
									"type": "Expression"
								},
								"taskName": {
									"value": "@pipeline().parameters.p_tgt_curate_table_nm",
									"type": "Expression"
								},
								"taskStepNumber": {
									"value": "@pipeline().parameters.p_src_code",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_src_table_nm": {
						"type": "string",
						"defaultValue": "CUSTINVOICETRANS"
					},
					"p_src_schema_nm": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"p_tgt_raw_table_nm": {
						"type": "string",
						"defaultValue": "CUSTINVOICETRANS"
					},
					"p_tgt_raw_schema_nm": {
						"type": "string",
						"defaultValue": "AX_NALA"
					},
					"p_tgt_curate_table_nm": {
						"type": "string",
						"defaultValue": "FACT_SALES_INVOICES"
					},
					"p_tgt_curate_schema_nm": {
						"type": "string",
						"defaultValue": "GLOBAL"
					},
					"p_src_nm": {
						"type": "string",
						"defaultValue": "AXNALA"
					},
					"p_src_directory": {
						"type": "string",
						"defaultValue": "business_files"
					},
					"p_temp_file_nm": {
						"type": "string",
						"defaultValue": "custinvoicetrans_nala.parquet"
					},
					"p_src_file_nm": {
						"type": "string",
						"defaultValue": "COGS.xlsx"
					},
					"p_temp_directory": {
						"type": "string",
						"defaultValue": "temp_files"
					},
					"p_src_file_sheet": {
						"type": "string",
						"defaultValue": "ItemCosts"
					},
					"p_src_code": {
						"type": "string",
						"defaultValue": "1"
					},
					"p_tgt_raw_table_nm_2": {
						"type": "string",
						"defaultValue": "CUSTINVOICETRANS_STANDARDCOST"
					},
					"p_tgt_raw_table_nm_3": {
						"type": "string",
						"defaultValue": "CUSTINVOICETRANS_COGSFIFO"
					},
					"p_tgt_raw_table_nm_4": {
						"type": "string",
						"defaultValue": "CUSTINVOICETRANS_COGSXLS"
					}
				},
				"variables": {
					"v_last_mod_tmstmp_cogsitemcosts": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-22T20:38:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_load_fact_sales_invoice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pp_ax_custpackingsliptrans_to_fact_sales_deliveries')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_fact_sales_deliveries",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "switch_nala_retail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_fact_sales_deliveries",
								"type": "DataFlowReference",
								"parameters": {
									"df_prev_max_timestamp": {
										"value": "'@{variables('v_prev_max_timestamp')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SrcCustPackingSlipTrans": {
										"p_directory": {
											"value": "@pipeline().parameters.p_temp_directory",
											"type": "Expression"
										},
										"p_root_system": {
											"value": "@pipeline().globalParameters.rootDir",
											"type": "Expression"
										},
										"p_file_name": {
											"value": "@pipeline().parameters.p_temp_file_nm",
											"type": "Expression"
										}
									},
									"SrcCustPackingSlipTransExt": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_tgt_raw_table_nm_2",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_rawDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									},
									"CustPackingSlipTrans": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_tgt_raw_table_nm",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_rawDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									},
									"CustPackingSlipTransExt": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_tgt_raw_table_nm_2",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_rawDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IR-Snowflake-NALA",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "lkp_raw_last_modified_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"query": {
									"value": "@concat('select max(to_varchar(LATEST_MODIFIEDDATETIME::timestamp, ''','yyyy-mm-dd hh24:mi:ss',''')) as max_date from ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_rawDb,'.',pipeline().parameters.p_tgt_raw_schema_nm, '.', pipeline().parameters.p_tgt_raw_table_nm)",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference",
								"parameters": {
									"p_tgt_table_name": {
										"value": "@pipeline().parameters.p_tgt_curate_table_nm",
										"type": "Expression"
									},
									"p_tgt_schema_name": {
										"value": "@pipeline().parameters.p_tgt_curate_schema_nm",
										"type": "Expression"
									},
									"p_ls_DbName": {
										"value": "@pipeline().globalParameters.snow_rawDb",
										"type": "Expression"
									},
									"p_ls_Env": {
										"value": "@pipeline().globalParameters.environment",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "set_last_modified_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "lkp_raw_last_modified_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_prev_max_timestamp",
							"value": {
								"value": "@coalesce(activity('lkp_raw_last_modified_date').output.firstRow.max_date, '1950-01-01 00:00:00')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "raw_to_curate_sp_call",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "load_fact_sales_deliveries",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_snowflake",
							"type": "LinkedServiceReference",
							"parameters": {
								"ls_DbName": {
									"value": "@pipeline().globalParameters.snow_auditDb",
									"type": "Expression"
								},
								"ls_Env": {
									"value": "@pipeline().globalParameters.environment",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('CALL ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb,'.CONTROL.SP_TASK_INITIALIZE(','''',pipeline().RunId,'''',',','''',pipeline().globalParameters.environment,'''',',','''',pipeline().parameters.p_tgt_curate_table_nm,'''',',',pipeline().parameters.p_src_code,')')",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "load_fact_sales_deliveries_failure_notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "load_fact_sales_deliveries",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pp_adf_pipeline_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subscription": {
									"value": "@pipeline().globalParameters.subscriptionId",
									"type": "Expression"
								},
								"resourceGroup": {
									"value": "@pipeline().globalParameters.resourceGroup",
									"type": "Expression"
								},
								"runId": {
									"value": "@coalesce(pipeline().RunId, -1)",
									"type": "Expression"
								},
								"name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('load_fact_sales_deliveries').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('load_fact_sales_deliveries').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('load_fact_sales_deliveries').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('load_fact_sales_deliveries').Duration",
									"type": "Expression"
								},
								"teamWebhookUrl": {
									"value": "@pipeline().globalParameters.teamsWebhookUrl",
									"type": "Expression"
								},
								"notificationTime": {
									"value": "@utcNow()",
									"type": "Expression"
								},
								"taskName": {
									"value": "@pipeline().parameters.p_tgt_curate_table_nm",
									"type": "Expression"
								},
								"taskStepNumber": {
									"value": "@pipeline().parameters.p_src_code",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "raw_to_curate_storedprocedure_failure_notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pp_adf_pipeline_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subscription": {
									"value": "@pipeline().globalParameters.subscriptionId",
									"type": "Expression"
								},
								"resourceGroup": {
									"value": "@pipeline().globalParameters.resourceGroup",
									"type": "Expression"
								},
								"runId": {
									"value": "@coalesce(pipeline().RunId, -1)",
									"type": "Expression"
								},
								"name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('raw_to_curate_sp_call').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('raw_to_curate_sp_call').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('raw_to_curate_sp_call').Duration",
									"type": "Expression"
								},
								"teamWebhookUrl": {
									"value": "@pipeline().globalParameters.teamsWebhookUrl",
									"type": "Expression"
								},
								"notificationTime": {
									"value": "@utcNow()",
									"type": "Expression"
								},
								"taskName": {
									"value": "@pipeline().parameters.p_tgt_curate_table_nm",
									"type": "Expression"
								},
								"taskStepNumber": {
									"value": "@pipeline().parameters.p_src_code",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pipeline_execution_notification",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@if(equals(activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE'],'TRUE'),bool('TRUE'), bool('FALSE'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "pp_stored_procedure_failure_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@toUpper('failed')",
												"type": "Expression"
											},
											"message": {
												"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": {
												"value": "@pipeline().parameters.p_tgt_curate_table_nm",
												"type": "Expression"
											},
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "curate_load_failure",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "pp_stored_procedure_failure_notification",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "stored_procedure_success_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('raw_to_curate_sp_call').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@concat(pipeline().parameters.p_tgt_curate_table_nm, ' is successfully loaded')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": {
												"value": "@pipeline().parameters.p_tgt_curate_table_nm",
												"type": "Expression"
											},
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "switch_nala_retail",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "set_last_modified_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.p_src_code",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1",
									"activities": [
										{
											"name": "custpackingsliptrans_to_adls_nala",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"additionalColumns": [
														{
															"name": "HK_JOB_RUN_ID",
															"value": {
																"value": "@coalesce(pipeline().RunId, -1)",
																"type": "Expression"
															}
														},
														{
															"name": "HK_SOURCE_NAME",
															"value": {
																"value": "@pipeline().parameters.p_src_nm",
																"type": "Expression"
															}
														}
													],
													"sqlReaderQuery": {
														"value": "SELECT\ncpst1.recid as RECID\n,cpst1.defaultdimension as DEFAULTDIMENSION\n,cpst1.transactioncode as TRANSACTIONCODE\n,cpst1.inventdimid as INVENTDIMID\n,cpst1.itemid as ITEMID\n,cpst1.deliverypostaladdress as DELIVERYPOSTALADDRESS\n,cpst1.salesgroup as SALESGROUP\n,cpst1.salesunit as SALESUNIT\n,cpst1.deliverydate as DELIVERYDATE\n,cpst1.saleslineshippingdateconfirmed as SALESLINESHIPPINGDATECONFIRMED\n,cpst1.saleslineshippingdaterequested as SALESLINESHIPPINGDATEREQUESTED\n,cpst1.inventtransid as INVENTTRANSID\n,cpst1.dataareaid as DATAAREAID\n,cpst1.linenum as LINENUM\n,cpst1.origsalesid as ORIGSALESID\n,cpst1.packingslipid as PACKINGSLIPID\n,cpst1.salesid as SALESID\n,cpst1.deliverytype as DELIVERYTYPE\n,cpst1.inventqty as INVENTQTY\n,cpst1.qty as QTY\n,cpst1.priceunit as PRICEUNIT\n,cpst1.valuemst as VALUEMST\n,cpst1.modifieddatetime as MODIFIEDDATETIME\n,def1.BUSINESS_UNIT as DEFAULTDIMENSION_BUSINESS_UNIT\n,def1.DEFAULTDIMENSION_MODIFIEDDATETIME\n,st1.smmcampaignid as SALESTABLE_SMMCAMPAIGNID\n,st1.markupgroup as SALESTABLE_MARKUPGROUP\n,st1.linedisc as SALESTABLE_LINEDISC\n,st1.salespoolid as SALESTABLE_SALESPOOLID\n,st1.pricegroupid as SALESTABLE_PRICEGROUPID\n,st1.workersalesresponsible as SALESTABLE_WORKERSALESRESPONSIBLE\n,st1.documentstatus as SALESTABLE_DOCUMENTSTATUS\n,st1.returnstatus as SALESTABLE_RETURNSTATUS\n,'2' as SALESTABLE_SALESSTATUS\n,st1.salestype as SALESTABLE_SALESTYPE\n,st1.atagent as SALESTABLE_ATAGENT\n,st1.shipcarrierblindshipment as SALESTABLE_SHIPCARRIERBLINDSHIPMENT\n,st1.shipcarrierexpeditedshipment as SALESTABLE_SHIPCARRIEREXPEDITEDSHIPMENT\n,st1.orderblocked as SALESTABLE_ORDERBLOCKED\n,st1.mcrorderstopped as SALESTABLE_MCRORDERSTOPPED\n,st1.shipcarrierfuelsurcharge as SALESTABLE_SHIPCARRIERFUELSURCHARGE\n,st1.modifieddatetime as SALESTABLE_MODIFIEDDATETIME\n,cpsj1.invoiceaccount as CUSTPACKINGSLIPJOUR_INVOICEACCOUNT\n,cpsj1.orderaccount as CUSTPACKINGSLIPJOUR_ORDERACCOUNT\n,cpsj1.dlvmode as CUSTPACKINGSLIPJOUR_DLVMODE\n,cpsj1.dlvterm as CUSTPACKINGSLIPJOUR_DLVTERM\n,cpsj1.invoicepostaladdress as CUSTPACKINGSLIPJOUR_INVOICEPOSTALADDRESS\n,cpsj1.shipcarrierid as CUSTPACKINGSLIPJOUR_SHIPCARRIERID\n,cpsj1.inventlocationid as CUSTPACKINGSLIPJOUR_INVENTLOCATIONID\n,cpsj1.workersalestaker as CUSTPACKINGSLIPJOUR_WORKERSALESTAKER\n,cpsj1.ntt_deliverystatus as CUSTPACKINGSLIPJOUR_NTT_DELIVERYSTATUS\n,cpsj1.documentdate as CUSTPACKINGSLIPJOUR_DOCUMENTDATE\n,cpsj1.billofladingid as CUSTPACKINGSLIPJOUR_BILLOFLADINGID\n,cpsj1.internalpackingslipid as CUSTPACKINGSLIPJOUR_INTERNALPACKINGSLIPID\n,cpsj1.ledgervoucher as CUSTPACKINGSLIPJOUR_LEDGERVOUCHER\n,cpsj1.purchaseorder as CUSTPACKINGSLIPJOUR_PURCHASEORDER\n,cpsj1.ebcoverridestatus as CUSTPACKINGSLIPJOUR_EBCOVERRIDESTATUS\n,cpsj1.modifieddatetime as CUSTPACKINGSLIPJOUR_MODIFIEDDATETIME\n,id1.configid as INVENTDIM1_CONFIGID\n,id1.modifieddatetime as INVENTDIM1_MODIFIEDDATETIME\n,idc1.pdmstatus as INVENTDIMCOMBINATION_PDMSTATUS\n,idc1.modifieddatetime as INVENTDIMCOMBINATION_MODIFIEDDATETIME\n,scp1.carrierid as SHIPCARRIERPACKAGE1_ORIG_CARRIERID\n,scp1.shipdate as SHIPCARRIERPACKAGE1_ORIG_SHIPDATE\n,scp1.carriername as SHIPCARRIERPACKAGE1_ORIG_CARRIERNAME\n,scp2.shipdate as SHIPCARRIERPACKAGE2_SHIPDATE\n,sl1.linedisc as SALESLINE_LINEDISC\n,sl1.linepercent as SALESLINE_LINEPERCENT\n,sl1.returnstatus as SALESLINE_RETURNSTATUS\n,'2' as SALESLINE_SALESSTATUS\n,sl1.shipcarrierdlvtype as SALESLINE_SHIPCARRIERDLVTYPE\n,sl1.complete as SALESLINE_COMPLETE\n,sl1.orderblocked as SALESLINE_ORDERBLOCKED\n,sl1.scrap as SALESLINE_SCRAP\n,sl1.stockedproduct as SALESLINE_STOCKEDPRODUCT\n,sl1.modifieddatetime as SALESLINE_MODIFIEDDATETIME\n,mslds1.dropshipment as MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT\n,sct1.ntt_deliverydate as SHIPCARRIERTRACKING_NTT_DELIVERYDATE\n,sct1.trackingnumber as SHIPCARRIERTRACKING_TRACKINGNUMBER\n,tet1.enumvaluelabel as TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS\n,tet2.enumvaluelabel as TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER\n,tet3.enumvaluelabel as TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER\n,tet4.enumvaluelabel as TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE\n,tet5.enumvaluelabel as TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE\n,tet6.enumvaluelabel as TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE\n,tet7.enumvaluelabel as TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE\n,tet8.enumvaluelabel as TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_NTT_DELIVERYSTATUS\n,tet9.enumvaluelabel as TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_TRADELINEDLVTYPE,\nps1.name as PDMSTATUS_NAME\n,convert(varchar(max),hashbytes('SHA2_256', concat(isnull(cpst1.recid, 0), \n'~', isnull(scp1.carrierid, ''), '~',\n isnull(scp1.shipdate, '1950-01-01 00:00:00'), '~',\n  isnull(scp1.carriername, ''), '~',\n   isnull(scp2.shipdate, '1950-01-01 00:00:00'), '~',\n    isnull(mslds1.dropshipment, 0), '~',\n\t isnull(sct1.ntt_deliverydate, '1950-01-01 00:00:00'), '~', \n\t isnull(sct1.trackingnumber, ''))),2) as HK_CUSTPACKINGSLIPTRANS_EXT_HASH_KEY\n,(SELECT MAX(LastUpdateDate)\n FROM (VALUES (cpst1.modifieddatetime),\n  (isnull(def1.DEFAULTDIMENSION_MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(st1.modifieddatetime, '1950-01-01'))\n  , (isnull(id1.modifieddatetime, '1950-01-01'))\n  , (isnull(sl1.modifieddatetime, '1950-01-01'))\n) AS UpdateDate(LastUpdateDate)) as LATEST_MODIFIEDDATETIME\nFROM\ndbo.CUSTPACKINGSLIPTRANS cpst1\nleft join (select distinct cpst1.DEFAULTDIMENSION\n\t\t\t\t, max(\n\t\t\t\t\tcase when da1.NAME = 'BusinessUnit' then davsi1.DISPLAYVALUE\n\t\t\t\t\t\telse null\n\t\t\t\t\t\tend\n\t\t\t\t\t) over (partition by cpst1.DEFAULTDIMENSION) as BUSINESS_UNIT\n\t\t\t\t, max(\n\t\t\t\t\t(select max(i) from (values (davsi1.MODIFIEDDATETIME), (dav1.MODIFIEDDATETIME), (da1.MODIFIEDDATETIME), (desc1.DESC_MODIFIEDDATETIME)) AS T(i))\n\t\t\t\t\t) over (partition by cpst1.DEFAULTDIMENSION) as DEFAULTDIMENSION_MODIFIEDDATETIME\n\t\t\tfrom (select distinct DEFAULTDIMENSION from dbo.CUSTPACKINGSLIPTRANS) cpst1\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEVALUESETITEM davsi1 on\n\t\t\t\tcpst1.DEFAULTDIMENSION = davsi1.DIMENSIONATTRIBUTEVALUESET\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEVALUE dav1 on\n\t\t\t\tdavsi1.DIMENSIONATTRIBUTEVALUE = dav1.RECID\n\t\t\tleft join dbo.DIMENSIONATTRIBUTE da1 on\n\t\t\t\tdav1.DIMENSIONATTRIBUTE = da1.RECID\n\t\t\tleft join (select dft1.VALUE, da2.NAME, dft1.DESCRIPTION\n\t\t\t\t\t\t\t, (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME\n\t\t\t\t\t\tfrom dbo.DIMENSIONFINANCIALTAG dft1\n\t\t\t\t\t\tleft join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on\n\t\t\t\t\t\t\tdft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n\t\t\t\t\t\tleft join dbo.DIMENSIONATTRIBUTE da2 on\n\t\t\t\t\t\t\tdadc1.DIMENSIONATTRIBUTE = da2.RECID) desc1 on\n\t\t\t\tdavsi1.DISPLAYVALUE = desc1.VALUE and\n\t\t\t\tda1.NAME = desc1.NAME\n\t\t\t) def1 on\n\tcpst1.DEFAULTDIMENSION = def1.DEFAULTDIMENSION\nleft join dbo.SALESTABLE st1 on\n\tcpst1.DATAAREAID = st1.DATAAREAID and\n\tcpst1.SALESID = st1.SALESID\nleft join (select DATAAREAID, PACKINGSLIPID, SALESID, DELIVERYDATE\n\t\t\t, INVOICEACCOUNT, ORDERACCOUNT, DLVMODE, DLVTERM, INVOICEPOSTALADDRESS, SHIPCARRIERID, INVENTLOCATIONID, WORKERSALESTAKER, NTT_DELIVERYSTATUS, DOCUMENTDATE, BILLOFLADINGID, INTERNALPACKINGSLIPID, LEDGERVOUCHER, PURCHASEORDER, EBCOVERRIDESTATUS\n\t\t\t, MODIFIEDDATETIME\n\t\tfrom dbo.CUSTPACKINGSLIPJOUR cpsj10\n\t\tinner join (select RECID\n\t\t\t\t\t, row_number() over (partition by DATAAREAID, PACKINGSLIPID, SALESID, DELIVERYDATE order by MODIFIEDDATETIME desc) as ROW_NUM\n\t\t\t\tfrom dbo.CUSTPACKINGSLIPJOUR) cpsj11 on\n\t\t\tcpsj11.ROW_NUM = 1 and\n\t\t\tcpsj10.RECID = cpsj11.RECID) cpsj1 on\n\tcpst1.DATAAREAID = cpsj1.DATAAREAID and\n\tcpst1.PACKINGSLIPID = cpsj1.PACKINGSLIPID and\n\tcpst1.SALESID = cpsj1.SALESID and\n\tcpst1.DELIVERYDATE = cpsj1.DELIVERYDATE\nleft join dbo.INVENTDIM id1 on\n\tcpst1.DATAAREAID = id1.DATAAREAID and\n\tcpst1.INVENTDIMID = id1.INVENTDIMID\nleft join (select idc10.DATAAREAID, idc10.ITEMID, id10.CONFIGID, idc10.PDMSTATUS\n\t\t\t, max(id10.MODIFIEDDATETIME) as MODIFIEDDATETIME\n\t\tfrom dbo.INVENTDIMCOMBINATION idc10\n\t\tleft join dbo.INVENTDIM id10 on\n\t\t\tidc10.DATAAREAID = id10.DATAAREAID and\n\t\t\tidc10.INVENTDIMID = id10.INVENTDIMID\n\t\tgroup by idc10.DATAAREAID, idc10.ITEMID, id10.CONFIGID, idc10.PDMSTATUS) idc1 on\n\tcpst1.DATAAREAID = idc1.DATAAREAID and\n\tid1.CONFIGID = idc1.CONFIGID and\n\tcpst1.ITEMID = idc1.ITEMID\nleft join dbo.SHIPCARRIERPACKAGE scp1 on\n\tcpst1.DATAAREAID = scp1.DATAAREAID and\n\tcpst1.PACKINGSLIPID = scp1.PACKINGSLIPID and\n\tcpst1.ORIGSALESID = scp1.SALESID\nleft join dbo.SHIPCARRIERPACKAGE scp2 on\n\tcpst1.DATAAREAID = scp2.DATAAREAID and\n\tcpst1.PACKINGSLIPID = scp2.PACKINGSLIPID and\n\tcpst1.SALESID = scp2.SALESID\nleft join dbo.SALESLINE sl1 on\n\tcpst1.DATAAREAID = sl1.DATAAREAID and\n\tcpst1.INVENTTRANSID = sl1.INVENTTRANSID\nleft join dbo.MCRSALESLINEDROPSHIPMENT mslds1 on\n\tsl1.DATAAREAID = mslds1.DATAAREAID and\n\tsl1.RECID = mslds1.SALESLINE\nleft join (select DATAAREAID, PACKINGSLIPID, SALESID, NTT_DELIVERYSTATUS\n\t\t\t, max(NTT_DELIVERYDATE) as NTT_DELIVERYDATE\n\t\t\t, max(TRACKINGNUMBER) as TRACKINGNUMBER\n\t\tfrom dbo.SHIPCARRIERTRACKING\n\t\tgroup by DATAAREAID, PACKINGSLIPID, SALESID, NTT_DELIVERYSTATUS) sct1 on\n\tcpst1.DATAAREAID = sct1.DATAAREAID and\n\tcpst1.PACKINGSLIPID = sct1.PACKINGSLIPID and\n\tcpst1.ORIGSALESID = sct1.SALESID and\n\tcpsj1.NTT_DELIVERYSTATUS = sct1.NTT_DELIVERYSTATUS\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'DocumentStatus'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet1 on\n\tst1.DOCUMENTSTATUS = tet1.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'ReturnStatusHeader'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet2 on\n\tst1.RETURNSTATUS = tet2.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'SalesStatus'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet3 on\n\t'2' = tet3.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'ReturnStatusLine'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet4 on\n\tsl1.RETURNSTATUS = tet4.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'SalesStatus'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet5 on\n\t '2' = tet5.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'SalesType'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet6 on\n\tst1.SALESTYPE = tet6.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'ShipCarrierDlvType'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet7 on\n\tsl1.SHIPCARRIERDLVTYPE = tet7.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'NTT_DeliveryStatus'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet8 on\n\tcpsj1.NTT_DELIVERYSTATUS = tet8.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'TradeLineDlvType'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet9 on\n\tcpst1.DELIVERYTYPE = tet9.ENUMVALUE\n\tleft join dbo.PDMSTATUS ps1 on\n\tidc1.PDMSTATUS = ps1.RECID",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"name": "RECID",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "RECID",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "TRANSACTIONCODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TRANSACTIONCODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVENTDIMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTDIMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "ITEMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ITEMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DELIVERYPOSTALADDRESS",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DELIVERYPOSTALADDRESS",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "SALESGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESUNIT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESUNIT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DELIVERYDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DELIVERYDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESLINESHIPPINGDATECONFIRMED",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESLINESHIPPINGDATECONFIRMED",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESLINESHIPPINGDATEREQUESTED",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESLINESHIPPINGDATEREQUESTED",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTTRANSID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTTRANSID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LINENUM",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "LINENUM",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "ORIGSALESID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ORIGSALESID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PACKINGSLIPID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "PACKINGSLIPID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DELIVERYTYPE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "DELIVERYTYPE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "INVENTQTY",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "INVENTQTY",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "QTY",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "QTY",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "PRICEUNIT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "PRICEUNIT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "VALUEMST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "VALUEMST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_BUSINESS_UNIT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_BUSINESS_UNIT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SMMCAMPAIGNID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_SMMCAMPAIGNID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_MARKUPGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_MARKUPGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_LINEDISC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_LINEDISC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SALESPOOLID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_SALESPOOLID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_PRICEGROUPID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_PRICEGROUPID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_WORKERSALESRESPONSIBLE",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "SALESTABLE_WORKERSALESRESPONSIBLE",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_DOCUMENTSTATUS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_DOCUMENTSTATUS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_RETURNSTATUS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_RETURNSTATUS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SALESSTATUS",
																"type": "String",
																"physicalType": "varchar"
															},
															"sink": {
																"name": "SALESTABLE_SALESSTATUS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SALESTYPE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_SALESTYPE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_ATAGENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_ATAGENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SHIPCARRIERBLINDSHIPMENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_SHIPCARRIERBLINDSHIPMENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SHIPCARRIEREXPEDITEDSHIPMENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_SHIPCARRIEREXPEDITEDSHIPMENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_ORDERBLOCKED",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_ORDERBLOCKED",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_MCRORDERSTOPPED",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_MCRORDERSTOPPED",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SHIPCARRIERFUELSURCHARGE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_SHIPCARRIERFUELSURCHARGE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESTABLE_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_INVOICEACCOUNT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_INVOICEACCOUNT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_ORDERACCOUNT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_ORDERACCOUNT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_DLVMODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_DLVMODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_DLVTERM",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_DLVTERM",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_INVOICEPOSTALADDRESS",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_INVOICEPOSTALADDRESS",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_SHIPCARRIERID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_SHIPCARRIERID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_INVENTLOCATIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_INVENTLOCATIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_WORKERSALESTAKER",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_WORKERSALESTAKER",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_NTT_DELIVERYSTATUS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_NTT_DELIVERYSTATUS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_DOCUMENTDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_DOCUMENTDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_BILLOFLADINGID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_BILLOFLADINGID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_INTERNALPACKINGSLIPID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_INTERNALPACKINGSLIPID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_LEDGERVOUCHER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_LEDGERVOUCHER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_PURCHASEORDER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_PURCHASEORDER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_EBCOVERRIDESTATUS",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_EBCOVERRIDESTATUS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTDIM1_CONFIGID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTDIM1_CONFIGID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVENTDIM1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTDIM1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTDIMCOMBINATION_PDMSTATUS",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "INVENTDIMCOMBINATION_PDMSTATUS",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "INVENTDIMCOMBINATION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTDIMCOMBINATION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SHIPCARRIERPACKAGE1_ORIG_CARRIERID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SHIPCARRIERPACKAGE1_ORIG_CARRIERID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SHIPCARRIERPACKAGE1_ORIG_SHIPDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SHIPCARRIERPACKAGE1_ORIG_SHIPDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SHIPCARRIERPACKAGE1_ORIG_CARRIERNAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SHIPCARRIERPACKAGE1_ORIG_CARRIERNAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SHIPCARRIERPACKAGE2_SHIPDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SHIPCARRIERPACKAGE2_SHIPDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESLINE_LINEDISC",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "SALESLINE_LINEDISC",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "SALESLINE_LINEPERCENT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "SALESLINE_LINEPERCENT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "SALESLINE_RETURNSTATUS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE_RETURNSTATUS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE_SALESSTATUS",
																"type": "String",
																"physicalType": "varchar"
															},
															"sink": {
																"name": "SALESLINE_SALESSTATUS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESLINE_SHIPCARRIERDLVTYPE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE_SHIPCARRIERDLVTYPE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE_COMPLETE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE_COMPLETE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE_ORDERBLOCKED",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE_ORDERBLOCKED",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE_SCRAP",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE_SCRAP",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE_STOCKEDPRODUCT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE_STOCKEDPRODUCT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESLINE_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SHIPCARRIERTRACKING_NTT_DELIVERYDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SHIPCARRIERTRACKING_NTT_DELIVERYDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SHIPCARRIERTRACKING_TRACKINGNUMBER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SHIPCARRIERTRACKING_TRACKINGNUMBER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_NTT_DELIVERYSTATUS",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_NTT_DELIVERYSTATUS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_TRADELINEDLVTYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_TRADELINEDLVTYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PDMSTATUS_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "PDMSTATUS_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HK_CUSTPACKINGSLIPTRANS_EXT_HASH_KEY",
																"type": "String",
																"physicalType": "varchar"
															},
															"sink": {
																"name": "HK_CUSTPACKINGSLIPTRANS_EXT_HASH_KEY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															},
															"sink": {
																"name": "HK_JOB_RUN_ID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "HK_SOURCE_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														}
													],
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sql_server",
													"type": "DatasetReference",
													"parameters": {
														"p_src_table_name": {
															"value": "@pipeline().parameters.p_src_table_nm",
															"type": "Expression"
														},
														"p_src_schema_name": {
															"value": "@pipeline().parameters.p_src_schema_nm",
															"type": "Expression"
														},
														"p_ls_serverName": {
															"value": "@pipeline().globalParameters.nala_sql_serverName",
															"type": "Expression"
														},
														"p_ls_dbName": {
															"value": "@pipeline().globalParameters.nala_sql_dbName",
															"type": "Expression"
														},
														"p_ls_sqlUsername": {
															"value": "@pipeline().globalParameters.sql_userName",
															"type": "Expression"
														},
														"p_ls_sqlPassword": {
															"value": "@pipeline().globalParameters.sql_password",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_parquet",
													"type": "DatasetReference",
													"parameters": {
														"p_directory": {
															"value": "@pipeline().parameters.p_temp_directory",
															"type": "Expression"
														},
														"p_root_system": {
															"value": "@pipeline().globalParameters.rootDir",
															"type": "Expression"
														},
														"p_file_name": {
															"value": "@pipeline().parameters.p_temp_file_nm",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "nala_raw_load_failure_notification",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "custpackingsliptrans_to_adls_nala",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('custpackingsliptrans_to_adls_nala').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@replace(replace(replace(activity('custpackingsliptrans_to_adls_nala').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('custpackingsliptrans_to_adls_nala').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('custpackingsliptrans_to_adls_nala').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "sql_nala_load_to_raw_fail",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "nala_raw_load_failure_notification",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": {
													"value": "@activity('custpackingsliptrans_to_adls_nala').Error['message']",
													"type": "Expression"
												},
												"errorCode": "500"
											}
										}
									]
								},
								{
									"value": "3",
									"activities": [
										{
											"name": "custpackingsliptrans_to_adls_d365",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "WarehouseSource",
													"additionalColumns": [
														{
															"name": "HK_JOB_RUN_ID",
															"value": {
																"value": "@coalesce(pipeline().RunId, -1)",
																"type": "Expression"
															}
														},
														{
															"name": "HK_SOURCE_NAME",
															"value": {
																"value": "@pipeline().parameters.p_src_nm",
																"type": "Expression"
															}
														}
													],
													"sqlReaderQuery": "select cpst1.recid                          as RECID\n     , cpst1.defaultdimension               as DEFAULTDIMENSION\n     , cpst1.transactioncode                as TRANSACTIONCODE\n     , cpst1.inventdimid                    as INVENTDIMID\n     , cpst1.itemid                         as ITEMID\n     , cpst1.deliverypostaladdress          as DELIVERYPOSTALADDRESS\n     , cpst1.salesgroup                     as SALESGROUP\n     , cpst1.salesunit                      as SALESUNIT\n     , cpst1.deliverydate                   as DELIVERYDATE\n     , cpst1.saleslineshippingdateconfirmed as SALESLINESHIPPINGDATECONFIRMED\n     , cpst1.saleslineshippingdaterequested as SALESLINESHIPPINGDATEREQUESTED\n     , cpst1.inventtransid                  as INVENTTRANSID\n     , cpst1.dataareaid                     as DATAAREAID\n     , cpst1.linenum                        as LINENUM\n     , cpst1.origsalesid                    as ORIGSALESID\n     , cpst1.packingslipid                  as PACKINGSLIPID\n     , cpst1.salesid                        as SALESID\n     , cpst1.deliverytype                   as DELIVERYTYPE\n     , cpst1.inventqty                      as INVENTQTY\n     , cpst1.qty                            as QTY\n     , cpst1.priceunit                      as PRICEUNIT\n     , cpst1.valuemst                       as VALUEMST\n     , cpst1.modifieddatetime               as MODIFIEDDATETIME\n     , def1.business_unit                   as DEFAULTDIMENSION_BUSINESS_UNIT\n     , def1.DEFAULTDIMENSION_MODIFIEDDATETIME\n     , st1.smmcampaignid                    as SALESTABLE_SMMCAMPAIGNID\n     , st1.markupgroup                      as SALESTABLE_MARKUPGROUP\n     , st1.linedisc                         as SALESTABLE_LINEDISC\n     , st1.salespoolid                      as SALESTABLE_SALESPOOLID\n     , st1.pricegroupid                     as SALESTABLE_PRICEGROUPID\n     , st1.workersalesresponsible           as SALESTABLE_WORKERSALESRESPONSIBLE\n     , st1.documentstatus                   as SALESTABLE_DOCUMENTSTATUS\n     , st1.returnstatus                     as SALESTABLE_RETURNSTATUS\n     , st1.salesstatus                      as SALESTABLE_SALESSTATUS\n     , st1.salestype                        as SALESTABLE_SALESTYPE\n     , st1.atagent                          as SALESTABLE_ATAGENT\n     , st1.shipcarrierblindshipment         as SALESTABLE_SHIPCARRIERBLINDSHIPMENT\n     , st1.shipcarrierexpeditedshipment     as SALESTABLE_SHIPCARRIEREXPEDITEDSHIPMENT\n     , st1.orderblocked                     as SALESTABLE_ORDERBLOCKED\n     , st1.mcrorderstopped                  as SALESTABLE_MCRORDERSTOPPED\n     , st1.shipcarrierfuelsurcharge         as SALESTABLE_SHIPCARRIERFUELSURCHARGE\n     , st1.modifieddatetime                 as SALESTABLE_MODIFIEDDATETIME\n     , cpsj1.invoiceaccount                 as CUSTPACKINGSLIPJOUR_INVOICEACCOUNT\n     , cpsj1.orderaccount                   as CUSTPACKINGSLIPJOUR_ORDERACCOUNT\n     , cpsj1.dlvmode                        as CUSTPACKINGSLIPJOUR_DLVMODE\n     , cpsj1.dlvterm                        as CUSTPACKINGSLIPJOUR_DLVTERM\n     , cpsj1.invoicepostaladdress           as CUSTPACKINGSLIPJOUR_INVOICEPOSTALADDRESS\n     , cpsj1.shipcarrierid                  as CUSTPACKINGSLIPJOUR_SHIPCARRIERID\n     , cpsj1.inventlocationid               as CUSTPACKINGSLIPJOUR_INVENTLOCATIONID\n     , cpsj1.workersalestaker               as CUSTPACKINGSLIPJOUR_WORKERSALESTAKER\n     , cpsj1.ntt_deliverystatus             as CUSTPACKINGSLIPJOUR_NTT_DELIVERYSTATUS\n     , cpsj1.documentdate                   as CUSTPACKINGSLIPJOUR_DOCUMENTDATE\n     , cpsj1.billofladingid                 as CUSTPACKINGSLIPJOUR_BILLOFLADINGID\n     , cpsj1.internalpackingslipid          as CUSTPACKINGSLIPJOUR_INTERNALPACKINGSLIPID\n     , cpsj1.ledgervoucher                  as CUSTPACKINGSLIPJOUR_LEDGERVOUCHER\n     , cpsj1.purchaseorder                  as CUSTPACKINGSLIPJOUR_PURCHASEORDER\n     , cpsj1.ebcoverridestatus              as CUSTPACKINGSLIPJOUR_EBCOVERRIDESTATUS\n     , cpsj1.modifieddatetime               as CUSTPACKINGSLIPJOUR_MODIFIEDDATETIME\n     , id1.configid                         as INVENTDIM1_CONFIGID\n     , id1.modifieddatetime                 as INVENTDIM1_MODIFIEDDATETIME\n     , idc1.productlifecyclestateid         as INVENTDIMCOMBINATION_PDMSTATUS\n     , idc1.modifieddatetime                as INVENTDIMCOMBINATION_MODIFIEDDATETIME\n     , scp1.tpxcarriercode                  as SHIPCARRIERPACKAGE1_ORIG_CARRIERID\n     , scp1.deliverydate                    as SHIPCARRIERPACKAGE1_ORIG_SHIPDATE\n     , scp1.name                            as SHIPCARRIERPACKAGE1_ORIG_CARRIERNAME\n     , cpsj1.tpxscpshipdate                 as SHIPCARRIERPACKAGE2_SHIPDATE\n     , sl1.linedisc                         As SALESLINE_LINEDISC\n     , sl1.linepercent                      As SALESLINE_LINEPERCENT\n     , sl1.returnstatus                     As SALESLINE_RETURNSTATUS\n     , sl1.salesstatus                      As SALESLINE_SALESSTATUS\n     , sl1.shipcarrierdlvtype               As SALESLINE_SHIPCARRIERDLVTYPE\n     , sl1.complete                         As SALESLINE_COMPLETE\n     , sl1.orderblocked                     As SALESLINE_ORDERBLOCKED\n     , sl1.scrap                            As SALESLINE_SCRAP\n     , sl1.stockedproduct                   As SALESLINE_STOCKEDPRODUCT\n     , sl1.modifieddatetime                 As SALESLINE_MODIFIEDDATETIME\n     , mslds1.dropshipment                  As MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT\n     , sct1.ntt_deliverydate                As SHIPCARRIERTRACKING_NTT_DELIVERYDATE\n     , sct1.trackingnumber                  As SHIPCARRIERTRACKING_TRACKINGNUMBER\n     , tet1.enumvaluelabel                  As TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS\n     , tet2.enumvaluelabel                  As TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER\n     , tet3.enumvaluelabel                  As TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER\n     , tet4.enumvaluelabel                  As TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE\n     , tet5.enumvaluelabel                  As TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE\n     , tet6.enumvaluelabel                  As TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE\n     , tet7.enumvaluelabel                  As TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE\n     , tet8.enumvaluelabel                  As TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_NTT_DELIVERYSTATUS\n     , tet9.enumvaluelabel                  As TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_TRADELINEDLVTYPE\n     , scp1.tpxcarriercode                  as SHIPCARRIERPACKAGE1_ORIG_CARRIERID\n     , scp1.deliverydate                    as SHIPCARRIERPACKAGE1_ORIG_SHIPDATE\n     , scp1.name                            as SHIPCARRIERPACKAGE1_ORIG_CARRIERNAME\n     , cpsj1.tpxscpshipdate                 as SHIPCARRIERPACKAGE2_SHIPDATE\n     , convert(   varchar (Max)\n                , hashbytes(   'sha2_256'\n                             , concat(   isnull(   cpst1.recid\n                                                 , 0\n                                               )\n                                       , '~'\n                                       , isnull(   scp1.tpxcarriercode\n                                                 , ''\n                                               )\n                                       , '~'\n                                       , isnull(   scp1.deliverydate\n                                                 , '1950-01-01 00:00:00'\n                                               )\n                                       , '~'\n                                       , isnull(   scp1.name\n                                                 , ''\n                                               )\n                                       , '~'\n                                       , isnull(   cpsj1.tpxscpshipdate\n                                                 , '1950-01-01 00:00:00'\n                                               )\n                                       , '~'\n                                       , isnull(   mslds1.dropshipment\n                                                 , 0\n                                               )\n                                       , '~'\n                                       , isnull(   sct1.ntt_deliverydate\n                                                 , '1950-01-01 00:00:00'\n                                               )\n                                       , '~'\n                                       , isnull(   sct1.trackingnumber\n                                                 , ''\n                                               )\n                                       , getdate()\n                                     )\n                           )\n                , 2\n              )                             As HK_CUSTPACKINGSLIPTRANS_EXT_HASH_KEY\n     , (\n           Select max(lastupdatedate)\n            From\n            (\n                Values --(cpst1.modifieddatetime),\n                    (\n                        isnull(   def1.DEFAULTDIMENSION_MODIFIEDDATETIME\n                                , '1950-01-01'\n                              )\n                    )\n                  , (\n                        isnull(   st1.modifieddatetime\n                                , '1950-01-01'\n                              )\n                    )\n                  , (\n                        isnull(   id1.modifieddatetime\n                                , '1950-01-01'\n                              )\n                    )\n                  , (\n                        isnull(   sl1.modifieddatetime\n                                , '1950-01-01'\n                              )\n                    )\n            ) As updatedate ( lastupdatedate )\n       )                                    As LATEST_MODIFIEDDATETIME\n From\n    dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custpackingsliptrans                     cpst1\n     Left Join\n     (\n         Select distinct\n                cpst1.defaultdimension\n              , max(   case\n                           when da1.name = 'businessunit'\n                               then davsi1.displayvalue\n                           else null\n                       end\n                   ) over ( partition by cpst1.defaultdimension ) as business_unit\n              , max((\n                        select max(i)\n                         from\n                         (\n                             values\n                                 (\n                                     davsi1.modifieddatetime\n                                 )\n                               , (\n                                     dav1.modifieddatetime\n                                 )\n                               , (\n                                     da1.modifieddatetime\n                                 )\n                               , (\n                                     desc1.desc_modifieddatetime\n                                 )\n                         ) as t ( i )\n                    )\n                   ) over ( partition by cpst1.defaultdimension ) as DEFAULTDIMENSION_MODIFIEDDATETIME\n          from\n          (\n              select distinct\n                     defaultdimension\n               from\n                  dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custpackingsliptrans\n          )                                                                                                            cpst1\n              left join\n                  dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattributevaluesetitem davsi1\n              on\n                  cpst1.defaultdimension = davsi1.dimensionattributevalueset\n              left join\n                  dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattributevalue        dav1\n              on\n                  davsi1.dimensionattributevalue = dav1.recid\n              left join\n                  dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattribute             da1\n              on\n                  dav1.dimensionattribute = da1.recid\n              left join\n              (\n                  select dft1.value\n                       , da2.name\n                       , dft1.description\n                       , (\n                             select max(i)\n                              from\n                              (\n                                  values\n                                      (\n                                          dft1.modifieddatetime\n                                      )\n                                    , (\n                                          dadc1.modifieddatetime\n                                      )\n                                    , (\n                                          da2.modifieddatetime\n                                      )\n                              ) as t ( i )\n                         ) as desc_modifieddatetime\n                   from\n                      dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionfinancialtag              dft1\n                       left join\n                           dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattributedircategory dadc1\n                       on\n                           dft1.financialtagcategory = dadc1.dircategory\n                       left join\n                           dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattribute            da2\n                       on\n                           dadc1.dimensionattribute = da2.recid\n              )                                                                                                        desc1\n              on\n                  davsi1.displayvalue = desc1.value\n                  and da1.name = desc1.name\n     )                                                                                                             def1\n     on\n         cpst1.defaultdimension = def1.defaultdimension\n     left join\n         dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.salestable                          st1\n     on\n         cpst1.dataareaid = st1.dataareaid\n         and cpst1.salesid = st1.salesid\n     left join\n     (\n         select dataareaid\n              , packingslipid\n              , salesid\n              , deliverydate\n              , tpxscpshipdate\n              , invoiceaccount\n              , orderaccount\n              , dlvmode\n              , dlvterm\n              , invoicepostaladdress\n              , shipcarrierid\n              , inventlocationid\n              , workersalestaker\n              , ntt_deliverystatus\n              , documentdate\n              , billofladingid\n              , internalpackingslipid\n              , ledgervoucher\n              , purchaseorder\n              , ebcoverridestatus\n              , modifieddatetime\n          from\n             dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custpackingslipjour cpsj10\n              inner join\n              (\n                  select recid\n                       , row_number() over ( partition by dataareaid\n                                                        , packingslipid\n                                                        , salesid\n                                                        , deliverydate\n                                             order by\n                                                 modifieddatetime desc\n                                           ) as row_num\n                   from\n                      dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custpackingslipjour\n              )                                                                                        cpsj11\n              on\n                  cpsj11.row_num = 1\n                  and cpsj10.recid = cpsj11.recid\n     )                                                                                                             cpsj1\n     on\n         cpst1.dataareaid = cpsj1.dataareaid\n         and cpst1.packingslipid = cpsj1.packingslipid\n         and cpst1.salesid = cpsj1.salesid\n         and cpst1.deliverydate = cpsj1.deliverydate\n     left join\n         dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim                           id1\n     on\n         cpst1.dataareaid = id1.dataareaid\n         and cpst1.inventdimid = id1.inventdimid\n     left join\n     (\n         select idc10.dataareaid\n              , idc10.itemid\n              , id10.configid\n              , idc10.productlifecyclestateid\n              , max(id10.modifieddatetime) as modifieddatetime\n          from\n             dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdimcombination idc10\n              left join\n                  dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.inventdim       id10\n              on\n                  idc10.dataareaid = id10.dataareaid\n                  and idc10.inventdimid = id10.inventdimid\n          group by\n             idc10.dataareaid\n           , idc10.itemid\n           , id10.configid\n           , idc10.productlifecyclestateid\n     )                                                                                                             idc1\n     on\n         cpst1.dataareaid = idc1.dataareaid\n         and id1.configid = idc1.configid\n         and cpst1.itemid = idc1.itemid\n     left join\n         dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.salespackingsliptrackinginformation spsti\n     on\n         spsti.salesid = cpsj1.salesid\n         and spsti.packingslipid = cpsj1.packingslipid\n         and spsti.dataareaid = cpsj1.dataareaid\n     Left Join\n         dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custpackingsliptrans                cpst\n     on\n         cpst.salesid = cpsj1.salesid\n         and cpst.packingslipid = cpsj1.packingslipid\n         and cpst.dataareaid = cpsj1.dataareaid\n     left join\n     (\n         Select cpsj20.dataareaid\n              , cpsj20.packingslipid\n              , cpsj20.salesid\n              , cpsj20.tpxcarriercode\n              , cpsj20.deliverydate\n              , tc.name\n          From\n             dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custpackingslipjour cpsj20\n              Inner Join\n                  dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.tmscarrier     tc\n              On\n                  cpsj20.dataareaid = tc.dataareaid\n                  And cpsj20.tpxcarriercode = tc.carriercode\n     )                                                                                                             scp1\n     On\n         cpst1.dataareaid = scp1.dataareaid\n         and cpst1.packingslipid = scp1.packingslipid\n         and cpst1.origsalesid = scp1.salesid\n     left join\n         dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custpackingslipjour                 scp2\n     on\n         cpst1.dataareaid = scp2.dataareaid\n         and cpst1.packingslipid = scp2.packingslipid\n         and cpst1.salesid = scp2.salesid\n     left join\n         dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.salesline                           sl1\n     on\n         cpst1.dataareaid = sl1.dataareaid\n         and cpst1.inventtransid = sl1.inventtransid\n     left join\n         dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.mcrsaleslinedropshipment            mslds1\n     on\n         sl1.dataareaid = mslds1.dataareaid\n         and sl1.recid = mslds1.salesline\n     left join\n     (\n         select dataareaid\n              , packingslipid\n              , salesid\n              , ntt_deliverystatus\n              , max(ntt_deliverydate) as ntt_deliverydate\n              , max(trackingnumber)   as trackingnumber\n          from\n             dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.salespackingsliptrackinginformation --dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.shipcarriertracking\n          group by\n             dataareaid\n           , packingslipid\n           , salesid\n           , ntt_deliverystatus\n     )                                                                                                             sct1\n     On\n         sct1.salesid = cpsj1.salesid\n         and sct1.packingslipid = cpsj1.packingslipid\n         and sct1.dataareaid = cpsj1.dataareaid\n     --cpst1.dataareaid = sct1.dataareaid and\n     --cpst1.packingslipid = sct1.packingslipid and\n     --cpst1.origsalesid = sct1.salesid and\n     --cpsj1.ntt_deliverystatus = sct1.ntt_deliverystatus\n     left join\n     (\n         select enumname\n              , enumvalue\n              , max(enumvaluelabel) as enumvaluelabel\n          from\n             dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n          where\n             enumname = 'documentstatus'\n          group by\n             enumname\n           , enumvalue\n     )                                                                                                             tet1\n     on\n         st1.documentstatus = tet1.enumvalue\n     left join\n     (\n         select enumname\n              , enumvalue\n              , max(enumvaluelabel) as enumvaluelabel\n          from\n             dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n          where\n             enumname = 'returnstatusheader'\n          group by\n             enumname\n           , enumvalue\n     )                                                                                                             tet2\n     on\n         st1.returnstatus = tet2.enumvalue\n     left join\n     (\n         select enumname\n              , enumvalue\n              , max(enumvaluelabel) as enumvaluelabel\n          from\n             dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n          where\n             enumname = 'salesstatus'\n          group by\n             enumname\n           , enumvalue\n     )                                                                                                             tet3\n     on\n         st1.salesstatus = tet3.enumvalue\n     left join\n     (\n         select enumname\n              , enumvalue\n              , max(enumvaluelabel) as enumvaluelabel\n          from\n             dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n          where\n             enumname = 'returnstatusline'\n          group by\n             enumname\n           , enumvalue\n     )                                                                                                             tet4\n     on\n         sl1.returnstatus = tet4.enumvalue\n     left join\n     (\n         select enumname\n              , enumvalue\n              , max(enumvaluelabel) as enumvaluelabel\n          from\n             dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n          where\n             enumname = 'salesstatus'\n          group by\n             enumname\n           , enumvalue\n     )                                                                                                             tet5\n     on\n         '2' = tet5.enumvalue\n     left join\n     (\n         select enumname\n              , enumvalue\n              , max(enumvaluelabel) as enumvaluelabel\n          from\n             dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n          where\n             enumname = 'salestype'\n          group by\n             enumname\n           , enumvalue\n     )                                                                                                             tet6\n     on\n         st1.salestype = tet6.enumvalue\n     left join\n     (\n         select enumname\n              , enumvalue\n              , max(enumvaluelabel) as enumvaluelabel\n          from\n             dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n          where\n             enumname = 'shipcarrierdlvtype'\n          group by\n             enumname\n           , enumvalue\n     )                                                                                                             tet7\n     on\n         sl1.shipcarrierdlvtype = tet7.enumvalue\n     left join\n     (\n         select enumname\n              , enumvalue\n              , max(enumvaluelabel) as enumvaluelabel\n          from\n             dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n          where\n             enumname = 'ntt_deliverystatus'\n          group by\n             enumname\n           , enumvalue\n     )                                                                                                             tet8\n     on\n         cpsj1.ntt_deliverystatus = tet8.enumvalue\n     left join\n     (\n         select enumname\n              , enumvalue\n              , max(enumvaluelabel) as enumvaluelabel\n          from\n             dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timextenderenumtable\n          where\n             enumname = 'tradelinedlvtype'\n          group by\n             enumname\n           , enumvalue\n     )                                                                                                             tet9\n     on\n         cpst1.deliverytype = tet9.enumvalue;",
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"name": "RECID",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "RECID",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "TRANSACTIONCODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TRANSACTIONCODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVENTDIMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTDIMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "ITEMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ITEMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DELIVERYPOSTALADDRESS",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DELIVERYPOSTALADDRESS",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "SALESGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESUNIT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESUNIT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DELIVERYDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DELIVERYDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESLINESHIPPINGDATECONFIRMED",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESLINESHIPPINGDATECONFIRMED",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESLINESHIPPINGDATEREQUESTED",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESLINESHIPPINGDATEREQUESTED",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTTRANSID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTTRANSID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LINENUM",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "LINENUM",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "ORIGSALESID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ORIGSALESID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PACKINGSLIPID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "PACKINGSLIPID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVENTQTY",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "INVENTQTY",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "QTY",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "QTY",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "PRICEUNIT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "PRICEUNIT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "VALUEMST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "VALUEMST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_BUSINESS_UNIT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_BUSINESS_UNIT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SMMCAMPAIGNID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_SMMCAMPAIGNID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_MARKUPGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_MARKUPGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_LINEDISC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_LINEDISC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SALESPOOLID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_SALESPOOLID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_PRICEGROUPID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESTABLE_PRICEGROUPID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_WORKERSALESRESPONSIBLE",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "SALESTABLE_WORKERSALESRESPONSIBLE",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_DOCUMENTSTATUS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_DOCUMENTSTATUS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_RETURNSTATUS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_RETURNSTATUS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SALESSTATUS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_SALESSTATUS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SALESTYPE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_SALESTYPE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_ATAGENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_ATAGENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SHIPCARRIERBLINDSHIPMENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_SHIPCARRIERBLINDSHIPMENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SHIPCARRIEREXPEDITEDSHIPMENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_SHIPCARRIEREXPEDITEDSHIPMENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_ORDERBLOCKED",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_ORDERBLOCKED",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_MCRORDERSTOPPED",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_MCRORDERSTOPPED",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_SHIPCARRIERFUELSURCHARGE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESTABLE_SHIPCARRIERFUELSURCHARGE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESTABLE_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESTABLE_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_INVOICEACCOUNT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_INVOICEACCOUNT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_ORDERACCOUNT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_ORDERACCOUNT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_DLVMODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_DLVMODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_DLVTERM",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_DLVTERM",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_INVOICEPOSTALADDRESS",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_INVOICEPOSTALADDRESS",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_SHIPCARRIERID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_SHIPCARRIERID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_INVENTLOCATIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_INVENTLOCATIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_WORKERSALESTAKER",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_WORKERSALESTAKER",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_NTT_DELIVERYSTATUS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_NTT_DELIVERYSTATUS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_DOCUMENTDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_DOCUMENTDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_BILLOFLADINGID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_BILLOFLADINGID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_INTERNALPACKINGSLIPID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_INTERNALPACKINGSLIPID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_LEDGERVOUCHER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_LEDGERVOUCHER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_PURCHASEORDER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_PURCHASEORDER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_EBCOVERRIDESTATUS",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_EBCOVERRIDESTATUS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPACKINGSLIPJOUR_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CUSTPACKINGSLIPJOUR_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTDIM1_CONFIGID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTDIM1_CONFIGID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVENTDIM1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTDIM1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "INVENTDIMCOMBINATION_PDMSTATUS",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "INVENTDIMCOMBINATION_PDMSTATUS",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "INVENTDIMCOMBINATION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "INVENTDIMCOMBINATION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SHIPCARRIERPACKAGE1_ORIG_CARRIERID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SHIPCARRIERPACKAGE1_ORIG_CARRIERID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SHIPCARRIERPACKAGE1_ORIG_SHIPDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SHIPCARRIERPACKAGE1_ORIG_SHIPDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SHIPCARRIERPACKAGE1_ORIG_CARRIERNAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SHIPCARRIERPACKAGE1_ORIG_CARRIERNAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SHIPCARRIERPACKAGE2_SHIPDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SHIPCARRIERPACKAGE2_SHIPDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SALESLINE_LINEDISC",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "SALESLINE_LINEDISC",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "SALESLINE_LINEPERCENT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "SALESLINE_LINEPERCENT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "SALESLINE_RETURNSTATUS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE_RETURNSTATUS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE_SALESSTATUS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE_SALESSTATUS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE_SHIPCARRIERDLVTYPE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE_SHIPCARRIERDLVTYPE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE_COMPLETE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE_COMPLETE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE_ORDERBLOCKED",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE_ORDERBLOCKED",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE_SCRAP",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE_SCRAP",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE_STOCKEDPRODUCT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "SALESLINE_STOCKEDPRODUCT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SALESLINE_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SALESLINE_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "MCRSALESLINEDROPSHIPMENT_DROPSHIPMENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "SHIPCARRIERTRACKING_NTT_DELIVERYDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "SHIPCARRIERTRACKING_NTT_DELIVERYDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SHIPCARRIERTRACKING_TRACKINGNUMBER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SHIPCARRIERTRACKING_TRACKINGNUMBER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_DOCUMENTSTATUS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_RETURNSTATUSHEADER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_SALESSTATUSHEADER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_RETURNSTATUSLINE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE5_ENUMVALUELABEL_SALESSTATUSLINE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE6_ENUMVALUELABEL_SALESTYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE7_ENUMVALUELABEL_SHIPCARRIERDLVTYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_NTT_DELIVERYSTATUS",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE8_ENUMVALUELABEL_NTT_DELIVERYSTATUS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_TRADELINEDLVTYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE9_ENUMVALUELABEL_TRADELINEDLVTYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HK_CUSTPACKINGSLIPTRANS_EXT_HASH_KEY",
																"type": "String",
																"physicalType": "varchar"
															},
															"sink": {
																"name": "HK_CUSTPACKINGSLIPTRANS_EXT_HASH_KEY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															},
															"sink": {
																"name": "HK_JOB_RUN_ID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "HK_SOURCE_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														}
													],
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_fabric_wh",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_parquet",
													"type": "DatasetReference",
													"parameters": {
														"p_directory": {
															"value": "@pipeline().parameters.p_temp_directory",
															"type": "Expression"
														},
														"p_root_system": {
															"value": "@pipeline().globalParameters.rootDir",
															"type": "Expression"
														},
														"p_file_name": {
															"value": "@pipeline().parameters.p_temp_file_nm",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "d365_raw_load_failure_notification",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "custpackingsliptrans_to_adls_d365",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('custpackingsliptrans_to_adls_d365').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@replace(replace(replace(activity('custpackingsliptrans_to_adls_d365').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('custpackingsliptrans_to_adls_d365').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('custpackingsliptrans_to_adls_d365').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "sql_d365_load_to_raw_fail",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "d365_raw_load_failure_notification",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": {
													"value": "@activity('custpackingsliptrans_to_adls_d365').Error['message']",
													"type": "Expression"
												},
												"errorCode": "500"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_src_table_nm": {
						"type": "string",
						"defaultValue": "CUSTPACKINGSLIPTRANS"
					},
					"p_src_schema_nm": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"p_tgt_raw_table_nm": {
						"type": "string",
						"defaultValue": "CUSTPACKINGSLIPTRANS"
					},
					"p_tgt_raw_schema_nm": {
						"type": "string",
						"defaultValue": "AX_NALA"
					},
					"p_tgt_curate_table_nm": {
						"type": "string",
						"defaultValue": "FACT_SALES_DELIVERIES"
					},
					"p_tgt_curate_schema_nm": {
						"type": "string",
						"defaultValue": "GLOBAL"
					},
					"p_src_nm": {
						"type": "string",
						"defaultValue": "AXNALA"
					},
					"p_src_directory": {
						"type": "string",
						"defaultValue": "business_files"
					},
					"p_temp_file_nm": {
						"type": "string",
						"defaultValue": "custpackingsliptrans_nala.parquet"
					},
					"p_tgt_raw_table_nm_2": {
						"type": "string",
						"defaultValue": "CUSTPACKINGSLIPTRANS_EXT"
					},
					"p_src_code": {
						"type": "string",
						"defaultValue": "1"
					},
					"p_temp_directory": {
						"type": "string",
						"defaultValue": "temp_files"
					}
				},
				"variables": {
					"v_prev_max_timestamp": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-21T11:28:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pp_ax_custtable_to_dim_customer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lkp_raw_last_modified_date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set_last_mod_tmstmp_repodealexc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"query": {
									"value": "@concat('select max(to_varchar(LATEST_MODIFIEDDATETIME::timestamp, ''','yyyy-mm-dd hh24:mi:ss',''')) as max_date from ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_rawDb,'.',pipeline().parameters.p_tgt_raw_schema_nm, '.', pipeline().parameters.p_tgt_raw_table_nm)",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference",
								"parameters": {
									"p_tgt_table_name": {
										"value": "@pipeline().parameters.p_tgt_raw_table_nm",
										"type": "Expression"
									},
									"p_tgt_schema_name": {
										"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
										"type": "Expression"
									},
									"p_ls_DbName": {
										"value": "@pipeline().globalParameters.snow_rawDb",
										"type": "Expression"
									},
									"p_ls_Env": {
										"value": "@pipeline().globalParameters.environment",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "set_last_modified_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "lkp_raw_last_modified_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_prev_max_timestamp",
							"value": {
								"value": "@coalesce(activity('lkp_raw_last_modified_date').output.firstRow.max_date, '1950-01-01 00:00:00')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "load_dim_customer",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "switch_nala_retail_d365",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_load_dim_customer",
								"type": "DataFlowReference",
								"parameters": {
									"df_prev_max_timestamp": {
										"value": "'@{variables('v_prev_max_timestamp')}'",
										"type": "Expression"
									},
									"df_last_mod_tmstmp_repodealexc": {
										"value": "'@{variables('v_last_mod_tmstmp_repodealexc')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SrcCusttable": {
										"p_directory": {
											"value": "@pipeline().parameters.p_temp_directory",
											"type": "Expression"
										},
										"p_root_system": {
											"value": "@pipeline().globalParameters.rootDir",
											"type": "Expression"
										},
										"p_file_name": {
											"value": "@pipeline().parameters.p_temp_file_nm",
											"type": "Expression"
										}
									},
									"ReportDealerExclusionSegment": {
										"p_src_directory": {
											"value": "@pipeline().parameters.p_src_directory",
											"type": "Expression"
										},
										"p_src_file_name": {
											"value": "@pipeline().parameters.p_src_file_nm",
											"type": "Expression"
										},
										"p_src_root_system": {
											"value": "@pipeline().globalParameters.rootDir",
											"type": "Expression"
										},
										"p_sheet_name": {
											"value": "@pipeline().parameters.p_src_file_sheet_1",
											"type": "Expression"
										}
									},
									"ReportDealerExclusionSubSegment": {
										"p_src_directory": {
											"value": "@pipeline().parameters.p_src_directory",
											"type": "Expression"
										},
										"p_src_file_name": {
											"value": "@pipeline().parameters.p_src_file_nm",
											"type": "Expression"
										},
										"p_src_root_system": {
											"value": "@pipeline().globalParameters.rootDir",
											"type": "Expression"
										},
										"p_sheet_name": {
											"value": "@pipeline().parameters.p_src_file_sheet_2",
											"type": "Expression"
										}
									},
									"LkpTruckVolume": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_lkp_curate_table_nm",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_curate_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_curateDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									},
									"SrcCusttableExt": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_tgt_raw_table_nm_2",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_rawDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									},
									"CusttableExt": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_tgt_raw_table_nm_2",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_rawDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									},
									"Custtable": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_tgt_raw_table_nm",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_rawDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IR-Snowflake-NALA",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "get_last_modifieddatetime_ReportingDealerExclusion",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_excel",
								"type": "DatasetReference",
								"parameters": {
									"p_src_directory": {
										"value": "@pipeline().parameters.p_src_directory",
										"type": "Expression"
									},
									"p_src_file_name": {
										"value": "@pipeline().parameters.p_src_file_nm",
										"type": "Expression"
									},
									"p_src_root_system": {
										"value": "@pipeline().globalParameters.rootDir",
										"type": "Expression"
									},
									"p_sheet_name": {
										"value": "@pipeline().parameters.p_src_file_sheet_1",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "set_last_mod_tmstmp_repodealexc",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get_last_modifieddatetime_ReportingDealerExclusion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_last_mod_tmstmp_repodealexc",
							"value": {
								"value": "@coalesce(activity('get_last_modifieddatetime_ReportingDealerExclusion').output.lastModified,'1950-01-01 00:00:00')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "raw_to_curate_sp_call",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "load_dim_customer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_snowflake",
							"type": "LinkedServiceReference",
							"parameters": {
								"ls_DbName": {
									"value": "@pipeline().globalParameters.snow_auditDb",
									"type": "Expression"
								},
								"ls_Env": {
									"value": "@pipeline().globalParameters.environment",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('CALL ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb,'.CONTROL.SP_TASK_INITIALIZE(','''',pipeline().RunId,'''',',','''',pipeline().globalParameters.environment,'''',',','''',pipeline().parameters.p_tgt_curate_table_nm,'''',',',pipeline().parameters.p_src_code,')')",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "raw_to_curate_storedprocedure_failure_notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pp_adf_pipeline_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subscription": {
									"value": "@pipeline().globalParameters.subscriptionId",
									"type": "Expression"
								},
								"resourceGroup": {
									"value": "@pipeline().globalParameters.resourceGroup",
									"type": "Expression"
								},
								"runId": {
									"value": "@coalesce(pipeline().RunId, -1)",
									"type": "Expression"
								},
								"name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('raw_to_curate_sp_call').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('raw_to_curate_sp_call').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('raw_to_curate_sp_call').Duration",
									"type": "Expression"
								},
								"teamWebhookUrl": {
									"value": "@pipeline().globalParameters.teamsWebhookUrl",
									"type": "Expression"
								},
								"notificationTime": {
									"value": "@utcNow()",
									"type": "Expression"
								},
								"taskName": {
									"value": "@pipeline().parameters.p_tgt_curate_table_nm",
									"type": "Expression"
								},
								"taskStepNumber": {
									"value": "@pipeline().parameters.p_src_code",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "switch_nala_retail_d365",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "set_last_modified_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.p_src_code",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1",
									"activities": [
										{
											"name": "custtable_to_adls_nala",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"additionalColumns": [
														{
															"name": "HK_JOB_RUN_ID",
															"value": {
																"value": "@coalesce(pipeline().RunId, -1)",
																"type": "Expression"
															}
														},
														{
															"name": "HK_SOURCE_NAME",
															"value": {
																"value": "@pipeline().parameters.p_src_nm",
																"type": "Expression"
															}
														}
													],
													"sqlReaderQuery": {
														"value": "select ct1.DATAAREAID ,ct1.ACCOUNTNUM ,ct1.PARTY ,ct1.EBCCOMPANYID ,ct1.OURACCOUNTNUM ,ct1.INVOICEACCOUNT ,ct1.CURRENCY ,ct1.USECASHDISC ,ct1.MAINCONTACTWORKER ,ct1.BLOCKED ,ct1.PASTDUECHECK ,ct1.CREDITMAX ,ct1.MANDATORYCREDITLIMIT ,ct1.EXCLUDECREDITLIMITBLOCKING ,ct1.GRACEDAYS ,ct1.EBCBUYGRPEXEMPTION ,ct1.EBCBUYGRPKICKER ,ct1.CASHDISC ,ct1.DLVMODE ,ct1.DLVTERM ,ct1.PAYMMODE ,ct1.PAYMTERMID ,ct1.CUSTCLASSIFICATIONID ,ct1.COMPANYCHAINID ,ct1.CUSTGROUP ,ct1.EBCDIVISIONID ,ct1.LINEOFBUSINESSID ,ct1.MARKUPGROUP ,ct1.PRICEGROUP ,ct1.DEFAULTDIMENSION ,ct1.SALESDISTRICTID ,ct1.SALESGROUP ,ct1.SALESPOOLID ,ct1.SEGMENTID ,ct1.SUBSEGMENTID ,ct1.TAXGROUP ,ct1.EBCREPORTPARENT ,ct1.MCSEXTERNALPRICING ,ct1.MCSNETWORKID ,ct1.MODIFIEDDATETIME ,dpt1.NAME as DIRPARTYTABLE1_NAME ,dpt1.INSTANCERELATIONTYPE as DIRPARTYTABLE1_INSTANCERELATIONTYPE ,dpt1.EBCLEGACY as DIRPARTYTABLE1_EBCLEGACY ,dpt1.ORGNUMBER as DIRPARTYTABLE1_ORGNUMBER ,dpt1.PRIMARYADDRESSLOCATION as DIRPARTYTABLE1_PRIMARYADDRESSLOCATION ,dpt1.MODIFIEDDATETIME as DIRPARTYTABLE1_MODIFIEDDATETIME ,c1.TXT as CURRENCY_TXT ,c1.MODIFIEDDATETIME as CURRENCY_MODIFIEDDATETIME ,hw1.PERSONNELNUMBER as HCMWORKER1_PERSONNELNUMBER ,hw1.PERSON as HCMWORKER1_PERSON ,hw1.MODIFIEDDATETIME as HCMWORKER1_MODIFIEDDATETIME ,dpt2.NAME as DIRPARTYTABLE2_NAME ,dpt2.MODIFIEDDATETIME as DIRPARTYTABLE2_MODIFIEDDATETIME ,tad1.CPAVGDAY as TSIAVGDAYS_CPAVGDAY ,tad1.YRAVGDAY as TSIAVGDAYS_YRAVGDAY ,cd1.DESCRIPTION as CASHDISC_DESCRIPTION ,cd1.PERCENT_ as CASHDISC_PERCENT ,dm1.TXT as DLVMODE_TXT ,dt1.TXT as DLVTERM_TXT ,cpmt1.NAME as CUSTPAYMMODETABLE_NAME ,pt1.DESCRIPTION as PAYMTERM_DESCRIPTION ,pt1.NUMOFDAYS as PAYMTERM_NUMOFDAYS ,pt1.NUMOFMONTHS as PAYMTERM_NUMOFMONTHS ,ccg1.TXT as CUSTCLASSIFICATIONGROUP_TXT ,sbrcg1.DESCRIPTION as SMMBUSRELCHAINGROUP_DESCRIPTION ,cg1.NAME as CUSTGROUP_NAME ,sbrsdg1.EBCDIVISIONID as SMMBUSRELSALESDISTRICTGROUP1_EBCDIVISIONID ,sbrsdg1.DESCRIPTION as SMMBUSRELSALESDISTRICTGROUP1_DESCRIPTION ,sbrsdg1.ALTROLLUP1 as SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP1 ,sbrsdg1.ALTROLLUP2 as SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP2 ,sbrsdg1.ALTROLLUP3 as SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP3 ,esmd1.EBCDIVISIONDESC as EBCSALESMKTDIVISION1_EBCDIVISIONDESC ,lob1.DESCRIPTION as LINEOFBUSINESS_DESCRIPTION ,mug1.TXT as MARKUPGROUP_TXT ,pdg1.NAME as PRICEDISCGROUP_NAME ,def1.C_SALES_CHANNEL as DEFAULTDIMENSION_C_SALES_CHANNEL ,def1.C_SALES_CHANNEL_DESCRIPTION as DEFAULTDIMENSION_C_SALES_CHANNEL_DESCRIPTION ,def1.DEFAULTDIMENSION_MODIFIEDDATETIME ,csg1.NAME as COMMISSIONSALESGROUP_NAME ,sp1.NAME as SALESPOOL_NAME ,sbrsg1.DESCRIPTION as SMMBUSRELSEGMENTGROUP_DESCRIPTION ,sbrssg1.SUBSEGMENTDESCRIPTION as SMMBUSRELSUBSEGMENTGROUP_DESCRIPTION ,tgh1.TAXGROUPNAME as TAXGROUPHEADING_TAXGROUPNAME ,lpa1.STREET as LOGISTICSPOSTALADDRESS1_STREET ,lpa1.CITY as LOGISTICSPOSTALADDRESS1_CITY ,lpa1.STATE as LOGISTICSPOSTALADDRESS1_STATE ,lpa1.ZIPCODE as LOGISTICSPOSTALADDRESS1_ZIPCODE ,lpa1.COUNTRYREGIONID as LOGISTICSPOSTALADDRESS1_COUNTRYREGIONID ,lpa1.TIMEZONE as LOGISTICSPOSTALADDRESS1_TIMEZONE ,tzl1.TIMEZONEKEYNAME as TIMEZONESLIST_TIMEZONEKEYNAME ,ll1.DESCRIPTION as LOGISTICSLOCATION1_DESCRIPTION ,lea1.LOCATOR as LOGISTICSELECTRONICADDRESS1_LOCATOR ,lea2.LOCATOR as LOGISTICSELECTRONICADDRESS2_LOCATOR ,lea3.LOCATOR as LOGISTICSELECTRONICADDRESS3_LOCATOR ,lpa2.STREET as LOGISTICSPOSTALADDRESS2_STREET ,lpa2.CITY as LOGISTICSPOSTALADDRESS2_CITY ,lpa2.STATE as LOGISTICSPOSTALADDRESS2_STATE ,lpa2.ZIPCODE as LOGISTICSPOSTALADDRESS2_ZIPCODE ,lpa2.COUNTRYREGIONID as LOGISTICSPOSTALADDRESS2_COUNTRYREGIONID ,ll2.DESCRIPTION as LOGISTICSLOCATION2_DESCRIPTION ,ll2.LOCATIONID as LOGISTICSLOCATION2_LOCATIONID ,ct2.EBCDIVISIONID as CUSTTABLE2_EBCDIVISIONID ,ct2.SALESDISTRICTID as CUSTTABLE2_SALESDISTRICTID ,ct2.MAINCONTACTWORKER as CUSTTABLE2_MAINCONTACTWORKER ,ct2.MODIFIEDDATETIME as CUSTTABLE2_MODIFIEDDATETIME ,sbrsdg2.DESCRIPTION as SMMBUSRELSALESDISTRICTGROUP2_DESCRIPTION ,esmd2.EBCDIVISIONDESC as EBCSALESMKTDIVISION2_EBCDIVISIONDESC ,hw2.PERSONNELNUMBER as HCMWORKER2_PERSONNELNUMBER ,hw2.PERSON as HCMWORKER2_PERSON ,hw2.MODIFIEDDATETIME as HCMWORKER2_MODIFIEDDATETIME ,dpt3.NAME as DIRPARTYTABLE3_NAME ,dpt3.MODIFIEDDATETIME as DIRPARTYTABLE3_MODIFIEDDATETIME ,(SELECT MAX(LastUpdateDate) FROM (VALUES (ct1.MODIFIEDDATETIME), (isnull(dpt1.MODIFIEDDATETIME, '1950-01-01')), (isnull(c1.MODIFIEDDATETIME, '1950-01-01')), (isnull(hw1.MODIFIEDDATETIME, '1950-01-01')), (isnull(dpt2.MODIFIEDDATETIME, '1950-01-01')), (isnull(dpt2.MODIFIEDDATETIME, '1950-01-01')), (isnull(def1.DEFAULTDIMENSION_MODIFIEDDATETIME, '1950-01-01')), (isnull(ct2.MODIFIEDDATETIME, '1950-01-01')), (isnull(hw2.MODIFIEDDATETIME, '1950-01-01')), (isnull(dpt3.MODIFIEDDATETIME, '1950-01-01'))) AS UpdateDate(LastUpdateDate)) AS LATEST_MODIFIEDDATETIME from dbo.CUSTTABLE ct1 left join dbo.DIRPARTYTABLE dpt1 on \tct1.PARTY = dpt1.RECID left join dbo.CURRENCY c1 on \tct1.CURRENCY = c1.CURRENCYCODE left join dbo.HCMWORKER hw1 on \tct1.MAINCONTACTWORKER = hw1.RECID left join dbo.DIRPARTYTABLE dpt2 on \thw1.PERSON = dpt2.RECID left join dbo.TSIAVGDAYS tad1 on \tct1.DATAAREAID = tad1.DATAAREAID and \tct1.ACCOUNTNUM = tad1.CUSTACCOUNT left join dbo.CASHDISC cd1 on \tct1.DATAAREAID = cd1.DATAAREAID and \tct1.CASHDISC = cd1.CASHDISCCODE left join dbo.DLVMODE dm1 on \tct1.DATAAREAID = dm1.DATAAREAID and \tct1.DLVMODE = dm1.CODE left join dbo.DLVTERM dt1 on \tct1.DATAAREAID = dt1.DATAAREAID and \tct1.DLVTERM = dt1.CODE left join dbo.CUSTPAYMMODETABLE cpmt1 on \tct1.DATAAREAID = cpmt1.DATAAREAID and \tct1.PAYMMODE = cpmt1.PAYMMODE left join dbo.PAYMTERM pt1 on \tct1.DATAAREAID = pt1.DATAAREAID and \tct1.PAYMTERMID = pt1.PAYMTERMID left join dbo.CUSTCLASSIFICATIONGROUP ccg1 on \tct1.DATAAREAID = ccg1.DATAAREAID and \tct1.CUSTCLASSIFICATIONID = ccg1.CODE left join dbo.SMMBUSRELCHAINGROUP sbrcg1 on \tct1.DATAAREAID = sbrcg1.DATAAREAID and \tct1.COMPANYCHAINID = sbrcg1.CHAINID left join dbo.CUSTGROUP cg1 on \tct1.DATAAREAID = cg1.DATAAREAID and \tct1.CUSTGROUP = cg1.CUSTGROUP left join dbo.SMMBUSRELSALESDISTRICTGROUP sbrsdg1 on \tct1.DATAAREAID = sbrsdg1.DATAAREAID and \tct1.SALESDISTRICTID = sbrsdg1.SALESDISTRICTID left join dbo.EBCSALESMKTDIVISION esmd1 on \tsbrsdg1.DATAAREAID = esmd1.DATAAREAID and \tsbrsdg1.EBCDIVISIONID = esmd1.EBCDIVISIONID left join dbo.LINEOFBUSINESS lob1 on \tct1.DATAAREAID = lob1.DATAAREAID and \tct1.LINEOFBUSINESSID = lob1.LINEOFBUSINESSID left join dbo.MARKUPGROUP mug1 on \tmug1.MODULE = 1 and \tct1.DATAAREAID = mug1.DATAAREAID and \tct1.MARKUPGROUP = mug1.GROUPID left join dbo.PRICEDISCGROUP pdg1 on \tpdg1.TYPE = 0 and \tpdg1.MODULE = 1 and \tct1.DATAAREAID = pdg1.DATAAREAID and \tct1.PRICEGROUP = pdg1.GROUPID left join (select distinct ct1.DEFAULTDIMENSION \t\t\t\t, max( \t\t\t\t\tcase when da1.NAME = 'C_Sales_Channel' then davsi1.DISPLAYVALUE \t\t\t\t\t\telse null \t\t\t\t\t\tend \t\t\t\t\t) over (partition by ct1.DEFAULTDIMENSION) as C_SALES_CHANNEL \t\t\t\t, min( \t\t\t\t\tcase when da1.NAME = 'C_Sales_Channel' then desc1.DESCRIPTION \t\t\t\t\telse null \t\t\t\t\tend \t\t\t\t\t) over (partition by ct1.DEFAULTDIMENSION) as C_SALES_CHANNEL_DESCRIPTION \t\t\t\t, max( \t\t\t\t\t(select max(i) from (values (davsi1.MODIFIEDDATETIME), (dav1.MODIFIEDDATETIME), (da1.MODIFIEDDATETIME), (desc1.DESC_MODIFIEDDATETIME)) AS T(i)) \t\t\t\t\t) over (partition by ct1.DEFAULTDIMENSION) as DEFAULTDIMENSION_MODIFIEDDATETIME \t\t\tfrom (select distinct DEFAULTDIMENSION from dbo.CUSTTABLE) ct1 \t\t\tleft join dbo.DIMENSIONATTRIBUTEVALUESETITEM davsi1 on \t\t\t\tct1.DEFAULTDIMENSION = davsi1.DIMENSIONATTRIBUTEVALUESET \t\t\tleft join dbo.DIMENSIONATTRIBUTEVALUE dav1 on \t\t\t\tdavsi1.DIMENSIONATTRIBUTEVALUE = dav1.RECID \t\t\tleft join dbo.DIMENSIONATTRIBUTE da1 on \t\t\t\tdav1.DIMENSIONATTRIBUTE = da1.RECID \t\t\tleft join (select dft1.VALUE, da2.NAME, dft1.DESCRIPTION \t\t\t\t\t\t\t, (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME \t\t\t\t\t\tfrom dbo.DIMENSIONFINANCIALTAG dft1 \t\t\t\t\t\tleft join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on \t\t\t\t\t\t\tdft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY \t\t\t\t\t\tleft join dbo.DIMENSIONATTRIBUTE da2 on \t\t\t\t\t\t\tdadc1.DIMENSIONATTRIBUTE = da2.RECID) desc1 on \t\t\t\tdavsi1.DISPLAYVALUE = desc1.VALUE and \t\t\t\tda1.NAME = desc1.NAME \t\t\t) def1 on \tct1.DEFAULTDIMENSION = def1.DEFAULTDIMENSION left join dbo.COMMISSIONSALESGROUP csg1 on \tct1.DATAAREAID = csg1.DATAAREAID and \tct1.SALESGROUP = csg1.GROUPID left join dbo.SALESPOOL sp1 on \tct1.DATAAREAID = sp1.DATAAREAID and \tct1.SALESPOOLID = sp1.SALESPOOLID left join dbo.SMMBUSRELSEGMENTGROUP sbrsg1 on \tct1.DATAAREAID = sbrsg1.DATAAREAID and \tct1.SEGMENTID = sbrsg1.SEGMENTID left join dbo.SMMBUSRELSUBSEGMENTGROUP sbrssg1 on \tct1.DATAAREAID = sbrssg1.DATAAREAID and \tct1.SEGMENTID = sbrssg1.SEGMENTID and \tct1.SUBSEGMENTID = sbrssg1.SUBSEGMENTID left join dbo.TAXGROUPHEADING tgh1 on \tct1.DATAAREAID = tgh1.DATAAREAID and \tct1.TAXGROUP = tgh1.TAXGROUP left join (select LOCATION, STREET, CITY, STATE, ZIPCODE, COUNTRYREGIONID, TIMEZONE \t\t\t\t, row_number() over (partition by LOCATION order by VALIDTO) as ROW_NUM \t\t\tfrom dbo.LOGISTICSPOSTALADDRESS) lpa1 on \tlpa1.ROW_NUM = 1 and \tdpt1.PRIMARYADDRESSLOCATION = lpa1.LOCATION left join dbo.TIMEZONESLIST tzl1 on \tlpa1.TIMEZONE = tzl1.TZENUM left join dbo.LOGISTICSLOCATION ll1 on \tlpa1.LOCATION = ll1.RECID left join dbo.LOGISTICSELECTRONICADDRESS lea1 on \tdpt1.PRIMARYCONTACTEMAIL = lea1.RECID left join dbo.LOGISTICSELECTRONICADDRESS lea2 on \tdpt1.PRIMARYCONTACTFAX = lea2.RECID left join dbo.LOGISTICSELECTRONICADDRESS lea3 on \tdpt1.PRIMARYCONTACTPHONE = lea3.RECID left join (select dpl10.PARTY, dpl10.LOCATION, lpa10.STREET, lpa10.CITY, lpa10.STATE, lpa10.ZIPCODE, lpa10.COUNTRYREGIONID \t\t\t, row_number() over (partition by dpl10.PARTY order by ll10.LOCATIONID desc) as ROW_NUM \t\tfrom dbo.DIRPARTYLOCATION dpl10 \t\tleft join dbo.LOGISTICSPOSTALADDRESS lpa10 on \t\t\tlpa10.VALIDTO = '2154-12-31T23:59:59' and \t\t\tdpl10.LOCATION = lpa10.LOCATION \t\tleft join dbo.LOGISTICSLOCATION ll10 on \t\t\tlpa10.LOCATION = ll10.RECID \t\twhere dpl10.ISROLEINVOICE = 1) lpa2 on \tlpa2.ROW_NUM = 1 and \tct1.PARTY = lpa2.PARTY left join dbo.LOGISTICSLOCATION ll2 on \tlpa2.LOCATION = ll2.RECID left join dbo.CUSTTABLE ct2 on \tct1.DATAAREAID = ct2.DATAAREAID and \tct1.EBCREPORTPARENT = ct2.ACCOUNTNUM left join dbo.SMMBUSRELSALESDISTRICTGROUP sbrsdg2 on \tct2.DATAAREAID = sbrsdg2.DATAAREAID and \tct2.SALESDISTRICTID = sbrsdg2.SALESDISTRICTID left join dbo.EBCSALESMKTDIVISION esmd2 on \tsbrsdg2.DATAAREAID = esmd2.DATAAREAID and \tsbrsdg2.EBCDIVISIONID = esmd2.EBCDIVISIONID left join dbo.HCMWORKER hw2 on \tct1.EBCREPORTPARENT = convert(nvarchar(20), hw2.RECID) left join dbo.DIRPARTYTABLE dpt3 on \thw2.PERSON = dpt3.RECID",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "ACCOUNTNUM",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ACCOUNTNUM",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PARTY",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "PARTY",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "EBCCOMPANYID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "EBCCOMPANYID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "OURACCOUNTNUM",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "OURACCOUNTNUM",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVOICEACCOUNT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVOICEACCOUNT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CURRENCY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CURRENCY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "USECASHDISC",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "USECASHDISC",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "MAINCONTACTWORKER",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "MAINCONTACTWORKER",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "BLOCKED",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "BLOCKED",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "PASTDUECHECK",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "PASTDUECHECK",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "CREDITMAX",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "CREDITMAX",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "MANDATORYCREDITLIMIT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "MANDATORYCREDITLIMIT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "EXCLUDECREDITLIMITBLOCKING",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "EXCLUDECREDITLIMITBLOCKING",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "GRACEDAYS",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "GRACEDAYS",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "EBCBUYGRPEXEMPTION",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "EBCBUYGRPEXEMPTION",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "EBCBUYGRPKICKER",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "EBCBUYGRPKICKER",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "CASHDISC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CASHDISC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DLVMODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DLVMODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DLVTERM",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DLVTERM",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PAYMMODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "PAYMMODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PAYMTERMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "PAYMTERMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTCLASSIFICATIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTCLASSIFICATIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "COMPANYCHAINID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "COMPANYCHAINID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "EBCDIVISIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "EBCDIVISIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LINEOFBUSINESSID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LINEOFBUSINESSID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "MARKUPGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "MARKUPGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PRICEGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "PRICEGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "SALESDISTRICTID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESDISTRICTID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESPOOLID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESPOOLID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SEGMENTID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SEGMENTID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SUBSEGMENTID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SUBSEGMENTID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TAXGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TAXGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "EBCREPORTPARENT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "EBCREPORTPARENT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "MCSEXTERNALPRICING",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "MCSEXTERNALPRICING",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "MCSNETWORKID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "MCSNETWORKID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE1_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIRPARTYTABLE1_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE1_INSTANCERELATIONTYPE",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DIRPARTYTABLE1_INSTANCERELATIONTYPE",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE1_EBCLEGACY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIRPARTYTABLE1_EBCLEGACY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE1_ORGNUMBER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIRPARTYTABLE1_ORGNUMBER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE1_PRIMARYADDRESSLOCATION",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DIRPARTYTABLE1_PRIMARYADDRESSLOCATION",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DIRPARTYTABLE1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "CURRENCY_TXT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CURRENCY_TXT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CURRENCY_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CURRENCY_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "HCMWORKER1_PERSONNELNUMBER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "HCMWORKER1_PERSONNELNUMBER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HCMWORKER1_PERSON",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "HCMWORKER1_PERSON",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "HCMWORKER1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "HCMWORKER1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE2_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIRPARTYTABLE2_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DIRPARTYTABLE2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TSIAVGDAYS_CPAVGDAY",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TSIAVGDAYS_CPAVGDAY",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "TSIAVGDAYS_YRAVGDAY",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TSIAVGDAYS_YRAVGDAY",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "CASHDISC_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CASHDISC_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CASHDISC_PERCENT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "CASHDISC_PERCENT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "DLVMODE_TXT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DLVMODE_TXT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DLVTERM_TXT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DLVTERM_TXT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPAYMMODETABLE_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPAYMMODETABLE_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PAYMTERM_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "PAYMTERM_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PAYMTERM_NUMOFDAYS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "PAYMTERM_NUMOFDAYS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "PAYMTERM_NUMOFMONTHS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "PAYMTERM_NUMOFMONTHS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "CUSTCLASSIFICATIONGROUP_TXT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTCLASSIFICATIONGROUP_TXT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELCHAINGROUP_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELCHAINGROUP_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTGROUP_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTGROUP_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_EBCDIVISIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_EBCDIVISIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP1",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP1",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP2",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP2",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP3",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP3",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "EBCSALESMKTDIVISION1_EBCDIVISIONDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "EBCSALESMKTDIVISION1_EBCDIVISIONDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LINEOFBUSINESS_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LINEOFBUSINESS_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "MARKUPGROUP_TXT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "MARKUPGROUP_TXT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PRICEDISCGROUP_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "PRICEDISCGROUP_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_C_SALES_CHANNEL",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_C_SALES_CHANNEL",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_C_SALES_CHANNEL_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_C_SALES_CHANNEL_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "COMMISSIONSALESGROUP_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "COMMISSIONSALESGROUP_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESPOOL_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESPOOL_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELSEGMENTGROUP_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELSEGMENTGROUP_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELSUBSEGMENTGROUP_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELSUBSEGMENTGROUP_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TAXGROUPHEADING_TAXGROUPNAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TAXGROUPHEADING_TAXGROUPNAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS1_STREET",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS1_STREET",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS1_CITY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS1_CITY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS1_STATE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS1_STATE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS1_ZIPCODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS1_ZIPCODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS1_COUNTRYREGIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS1_COUNTRYREGIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS1_TIMEZONE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS1_TIMEZONE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "TIMEZONESLIST_TIMEZONEKEYNAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEZONESLIST_TIMEZONEKEYNAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSLOCATION1_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSLOCATION1_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSELECTRONICADDRESS1_LOCATOR",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSELECTRONICADDRESS1_LOCATOR",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSELECTRONICADDRESS2_LOCATOR",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSELECTRONICADDRESS2_LOCATOR",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSELECTRONICADDRESS3_LOCATOR",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSELECTRONICADDRESS3_LOCATOR",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS2_STREET",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS2_STREET",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS2_CITY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS2_CITY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS2_STATE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS2_STATE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS2_ZIPCODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS2_ZIPCODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS2_COUNTRYREGIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS2_COUNTRYREGIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSLOCATION2_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSLOCATION2_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSLOCATION2_LOCATIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSLOCATION2_LOCATIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTTABLE2_EBCDIVISIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTTABLE2_EBCDIVISIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTTABLE2_SALESDISTRICTID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTTABLE2_SALESDISTRICTID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTTABLE2_MAINCONTACTWORKER",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "CUSTTABLE2_MAINCONTACTWORKER",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "CUSTTABLE2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CUSTTABLE2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELSALESDISTRICTGROUP2_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELSALESDISTRICTGROUP2_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "EBCSALESMKTDIVISION2_EBCDIVISIONDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "EBCSALESMKTDIVISION2_EBCDIVISIONDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HCMWORKER2_PERSONNELNUMBER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "HCMWORKER2_PERSONNELNUMBER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HCMWORKER2_PERSON",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "HCMWORKER2_PERSON",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "HCMWORKER2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "HCMWORKER2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE3_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIRPARTYTABLE3_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE3_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DIRPARTYTABLE3_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															},
															"sink": {
																"name": "HK_JOB_RUN_ID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "HK_SOURCE_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														}
													],
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": true
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sql_server",
													"type": "DatasetReference",
													"parameters": {
														"p_src_table_name": {
															"value": "@pipeline().parameters.p_src_table_nm",
															"type": "Expression"
														},
														"p_src_schema_name": {
															"value": "@pipeline().parameters.p_src_schema_nm",
															"type": "Expression"
														},
														"p_ls_serverName": {
															"value": "@pipeline().globalParameters.nala_sql_serverName",
															"type": "Expression"
														},
														"p_ls_dbName": {
															"value": "@pipeline().globalParameters.nala_sql_dbName",
															"type": "Expression"
														},
														"p_ls_sqlUsername": {
															"value": "@pipeline().globalParameters.sql_userName",
															"type": "Expression"
														},
														"p_ls_sqlPassword": {
															"value": "@pipeline().globalParameters.sql_password",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_parquet",
													"type": "DatasetReference",
													"parameters": {
														"p_directory": {
															"value": "@pipeline().parameters.p_temp_directory",
															"type": "Expression"
														},
														"p_root_system": {
															"value": "@pipeline().globalParameters.rootDir",
															"type": "Expression"
														},
														"p_file_name": {
															"value": "@pipeline().parameters.p_temp_file_nm",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "nala_notify_raw_load_failure_notification",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "custtable_to_adls_nala",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('custtable_to_adls_nala').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@replace(replace(replace(activity('custtable_to_adls_nala').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('custtable_to_adls_nala').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('custtable_to_adls_nala').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "sql_nala_load_to_raw_fail",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "nala_notify_raw_load_failure_notification",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": {
													"value": "@activity('custtable_to_adls_nala').Error['message']",
													"type": "Expression"
												},
												"errorCode": "500"
											}
										}
									]
								},
								{
									"value": "2",
									"activities": [
										{
											"name": "custtable_to_adls_retail",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"additionalColumns": [
														{
															"name": "HK_JOB_RUN_ID",
															"value": {
																"value": "@coalesce(pipeline().RunId, -1)",
																"type": "Expression"
															}
														},
														{
															"name": "HK_SOURCE_NAME",
															"value": {
																"value": "@pipeline().parameters.p_src_nm",
																"type": "Expression"
															}
														}
													],
													"sqlReaderQuery": {
														"value": "select ct1.DATAAREAID ,ct1.ACCOUNTNUM ,ct1.PARTY ,null as EBCCOMPANYID ,ct1.OURACCOUNTNUM ,ct1.INVOICEACCOUNT ,ct1.CURRENCY ,ct1.USECASHDISC ,ct1.MAINCONTACTWORKER ,ct1.BLOCKED ,null as PASTDUECHECK ,ct1.CREDITMAX ,ct1.MANDATORYCREDITLIMIT ,null as EXCLUDECREDITLIMITBLOCKING ,null as GRACEDAYS ,null as EBCBUYGRPEXEMPTION ,null as EBCBUYGRPKICKER ,ct1.CASHDISC ,ct1.DLVMODE ,ct1.DLVTERM ,ct1.PAYMMODE ,ct1.PAYMTERMID ,ct1.CUSTCLASSIFICATIONID ,ct1.COMPANYCHAINID ,ct1.CUSTGROUP ,null as EBCDIVISIONID ,ct1.LINEOFBUSINESSID ,ct1.MARKUPGROUP ,ct1.PRICEGROUP ,ct1.DEFAULTDIMENSION ,ct1.SALESDISTRICTID ,ct1.SALESGROUP ,ct1.SALESPOOLID ,ct1.SEGMENTID ,ct1.SUBSEGMENTID ,ct1.TAXGROUP ,null as EBCREPORTPARENT ,null as MCSEXTERNALPRICING ,null as MCSNETWORKID ,ct1.MODIFIEDDATETIME ,dpt1.NAME as DIRPARTYTABLE1_NAME ,dpt1.INSTANCERELATIONTYPE as DIRPARTYTABLE1_INSTANCERELATIONTYPE ,null as DIRPARTYTABLE1_EBCLEGACY ,dpt1.ORGNUMBER as DIRPARTYTABLE1_ORGNUMBER ,dpt1.PRIMARYADDRESSLOCATION as DIRPARTYTABLE1_PRIMARYADDRESSLOCATION ,dpt1.MODIFIEDDATETIME as DIRPARTYTABLE1_MODIFIEDDATETIME ,c1.TXT as CURRENCY_TXT ,c1.MODIFIEDDATETIME as CURRENCY_MODIFIEDDATETIME ,hw1.PERSONNELNUMBER as HCMWORKER1_PERSONNELNUMBER ,hw1.PERSON as HCMWORKER1_PERSON ,hw1.MODIFIEDDATETIME as HCMWORKER1_MODIFIEDDATETIME ,dpt2.NAME as DIRPARTYTABLE2_NAME ,dpt2.MODIFIEDDATETIME as DIRPARTYTABLE2_MODIFIEDDATETIME ,null as TSIAVGDAYS_CPAVGDAY ,null as TSIAVGDAYS_YRAVGDAY ,cd1.DESCRIPTION as CASHDISC_DESCRIPTION ,cd1.PERCENT_ as CASHDISC_PERCENT ,dm1.TXT as DLVMODE_TXT ,dt1.TXT as DLVTERM_TXT ,cpmt1.NAME as CUSTPAYMMODETABLE_NAME ,pt1.DESCRIPTION as PAYMTERM_DESCRIPTION ,pt1.NUMOFDAYS as PAYMTERM_NUMOFDAYS ,pt1.NUMOFMONTHS as PAYMTERM_NUMOFMONTHS ,ccg1.TXT as CUSTCLASSIFICATIONGROUP_TXT ,sbrcg1.DESCRIPTION as SMMBUSRELCHAINGROUP_DESCRIPTION ,cg1.NAME as CUSTGROUP_NAME ,null as SMMBUSRELSALESDISTRICTGROUP1_EBCDIVISIONID ,sbrsdg1.DESCRIPTION as SMMBUSRELSALESDISTRICTGROUP1_DESCRIPTION ,null as SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP1 ,null as SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP2 ,null as SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP3 ,null as EBCSALESMKTDIVISION1_EBCDIVISIONDESC ,lob1.DESCRIPTION as LINEOFBUSINESS_DESCRIPTION ,mug1.TXT as MARKUPGROUP_TXT ,pdg1.NAME as PRICEDISCGROUP_NAME ,def1.C_SALES_CHANNEL as DEFAULTDIMENSION_C_SALES_CHANNEL ,def1.C_SALES_CHANNEL_DESCRIPTION as DEFAULTDIMENSION_C_SALES_CHANNEL_DESCRIPTION ,def1.DEFAULTDIMENSION_MODIFIEDDATETIME ,csg1.NAME as COMMISSIONSALESGROUP_NAME ,sp1.NAME as SALESPOOL_NAME ,sbrsg1.DESCRIPTION as SMMBUSRELSEGMENTGROUP_DESCRIPTION ,sbrssg1.SUBSEGMENTDESCRIPTION as SMMBUSRELSUBSEGMENTGROUP_DESCRIPTION ,tgh1.TAXGROUPNAME as TAXGROUPHEADING_TAXGROUPNAME ,lpa1.STREET as LOGISTICSPOSTALADDRESS1_STREET ,lpa1.CITY as LOGISTICSPOSTALADDRESS1_CITY ,lpa1.STATE as LOGISTICSPOSTALADDRESS1_STATE ,lpa1.ZIPCODE as LOGISTICSPOSTALADDRESS1_ZIPCODE ,lpa1.COUNTRYREGIONID as LOGISTICSPOSTALADDRESS1_COUNTRYREGIONID ,lpa1.TIMEZONE as LOGISTICSPOSTALADDRESS1_TIMEZONE ,tzl1.TIMEZONEKEYNAME as TIMEZONESLIST_TIMEZONEKEYNAME ,ll1.DESCRIPTION as LOGISTICSLOCATION1_DESCRIPTION ,lea1.LOCATOR as LOGISTICSELECTRONICADDRESS1_LOCATOR ,lea2.LOCATOR as LOGISTICSELECTRONICADDRESS2_LOCATOR ,lea3.LOCATOR as LOGISTICSELECTRONICADDRESS3_LOCATOR ,lpa2.STREET as LOGISTICSPOSTALADDRESS2_STREET ,lpa2.CITY as LOGISTICSPOSTALADDRESS2_CITY ,lpa2.STATE as LOGISTICSPOSTALADDRESS2_STATE ,lpa2.ZIPCODE as LOGISTICSPOSTALADDRESS2_ZIPCODE ,lpa2.COUNTRYREGIONID as LOGISTICSPOSTALADDRESS2_COUNTRYREGIONID ,ll2.DESCRIPTION as LOGISTICSLOCATION2_DESCRIPTION ,ll2.LOCATIONID as LOGISTICSLOCATION2_LOCATIONID ,null as CUSTTABLE2_EBCDIVISIONID ,null as CUSTTABLE2_SALESDISTRICTID ,null as CUSTTABLE2_MAINCONTACTWORKER ,null as CUSTTABLE2_MODIFIEDDATETIME ,null as SMMBUSRELSALESDISTRICTGROUP2_DESCRIPTION ,null as EBCSALESMKTDIVISION2_EBCDIVISIONDESC ,null as HCMWORKER2_PERSONNELNUMBER ,null as HCMWORKER2_PERSON ,null as HCMWORKER2_MODIFIEDDATETIME ,null as DIRPARTYTABLE3_NAME ,null as DIRPARTYTABLE3_MODIFIEDDATETIME ,(SELECT MAX(LastUpdateDate) FROM (VALUES (ct1.MODIFIEDDATETIME), (isnull(dpt1.MODIFIEDDATETIME, '1950-01-01')), (isnull(c1.MODIFIEDDATETIME, '1950-01-01')), (isnull(hw1.MODIFIEDDATETIME, '1950-01-01')), (isnull(dpt2.MODIFIEDDATETIME, '1950-01-01')), (isnull(dpt2.MODIFIEDDATETIME, '1950-01-01')), (isnull(def1.DEFAULTDIMENSION_MODIFIEDDATETIME, '1950-01-01'))) AS UpdateDate(LastUpdateDate)) AS LATEST_MODIFIEDDATETIME from dbo.CUSTTABLE ct1 left join dbo.DIRPARTYTABLE dpt1 on \tct1.PARTY = dpt1.RECID left join dbo.CURRENCY c1 on \tct1.CURRENCY = c1.CURRENCYCODE left join dbo.HCMWORKER hw1 on \tct1.MAINCONTACTWORKER = hw1.RECID left join dbo.DIRPARTYTABLE dpt2 on \thw1.PERSON = dpt2.RECID left join dbo.CASHDISC cd1 on \tct1.DATAAREAID = cd1.DATAAREAID and \tct1.CASHDISC = cd1.CASHDISCCODE left join dbo.DLVMODE dm1 on \tct1.DATAAREAID = dm1.DATAAREAID and \tct1.DLVMODE = dm1.CODE left join dbo.DLVTERM dt1 on \tct1.DATAAREAID = dt1.DATAAREAID and \tct1.DLVTERM = dt1.CODE left join dbo.CUSTPAYMMODETABLE cpmt1 on \tct1.DATAAREAID = cpmt1.DATAAREAID and \tct1.PAYMMODE = cpmt1.PAYMMODE left join dbo.PAYMTERM pt1 on \tct1.DATAAREAID = pt1.DATAAREAID and \tct1.PAYMTERMID = pt1.PAYMTERMID left join dbo.CUSTCLASSIFICATIONGROUP ccg1 on \tct1.DATAAREAID = ccg1.DATAAREAID and \tct1.CUSTCLASSIFICATIONID = ccg1.CODE left join dbo.SMMBUSRELCHAINGROUP sbrcg1 on \tct1.DATAAREAID = sbrcg1.DATAAREAID and \tct1.COMPANYCHAINID = sbrcg1.CHAINID left join dbo.CUSTGROUP cg1 on \tct1.DATAAREAID = cg1.DATAAREAID and \tct1.CUSTGROUP = cg1.CUSTGROUP left join dbo.SMMBUSRELSALESDISTRICTGROUP sbrsdg1 on \tct1.DATAAREAID = sbrsdg1.DATAAREAID and \tct1.SALESDISTRICTID = sbrsdg1.SALESDISTRICTID left join dbo.LINEOFBUSINESS lob1 on \tct1.DATAAREAID = lob1.DATAAREAID and \tct1.LINEOFBUSINESSID = lob1.LINEOFBUSINESSID left join dbo.MARKUPGROUP mug1 on \tmug1.MODULE = 1 and \tct1.DATAAREAID = mug1.DATAAREAID and \tct1.MARKUPGROUP = mug1.GROUPID left join dbo.PRICEDISCGROUP pdg1 on \tpdg1.TYPE = 0 and \tpdg1.MODULE = 1 and \tct1.DATAAREAID = pdg1.DATAAREAID and \tct1.PRICEGROUP = pdg1.GROUPID left join (select distinct ct1.DEFAULTDIMENSION \t\t\t\t, max( \t\t\t\t\tcase when da1.NAME = 'C_Sales_Channel' then davsi1.DISPLAYVALUE \t\t\t\t\t\telse null \t\t\t\t\t\tend \t\t\t\t\t) over (partition by ct1.DEFAULTDIMENSION) as C_SALES_CHANNEL \t\t\t\t, min( \t\t\t\t\tcase when da1.NAME = 'C_Sales_Channel' then desc1.DESCRIPTION \t\t\t\t\telse null \t\t\t\t\tend \t\t\t\t\t) over (partition by ct1.DEFAULTDIMENSION) as C_SALES_CHANNEL_DESCRIPTION \t\t\t\t, max( \t\t\t\t\t(select max(i) from (values (davsi1.MODIFIEDDATETIME), (dav1.MODIFIEDDATETIME), (da1.MODIFIEDDATETIME), (desc1.DESC_MODIFIEDDATETIME)) AS T(i)) \t\t\t\t\t) over (partition by ct1.DEFAULTDIMENSION) as DEFAULTDIMENSION_MODIFIEDDATETIME \t\t\tfrom (select distinct DEFAULTDIMENSION from dbo.CUSTTABLE) ct1 \t\t\tleft join dbo.DIMENSIONATTRIBUTEVALUESETITEM davsi1 on \t\t\t\tct1.DEFAULTDIMENSION = davsi1.DIMENSIONATTRIBUTEVALUESET \t\t\tleft join dbo.DIMENSIONATTRIBUTEVALUE dav1 on \t\t\t\tdavsi1.DIMENSIONATTRIBUTEVALUE = dav1.RECID \t\t\tleft join dbo.DIMENSIONATTRIBUTE da1 on \t\t\t\tdav1.DIMENSIONATTRIBUTE = da1.RECID \t\t\tleft join (select dft1.VALUE, da2.NAME, dft1.DESCRIPTION \t\t\t\t\t\t\t, (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME \t\t\t\t\t\tfrom dbo.DIMENSIONFINANCIALTAG dft1 \t\t\t\t\t\tleft join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on \t\t\t\t\t\t\tdft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY \t\t\t\t\t\tleft join dbo.DIMENSIONATTRIBUTE da2 on \t\t\t\t\t\t\tdadc1.DIMENSIONATTRIBUTE = da2.RECID) desc1 on \t\t\t\tdavsi1.DISPLAYVALUE = desc1.VALUE and \t\t\t\tda1.NAME = desc1.NAME \t\t\t) def1 on \tct1.DEFAULTDIMENSION = def1.DEFAULTDIMENSION left join dbo.COMMISSIONSALESGROUP csg1 on \tct1.DATAAREAID = csg1.DATAAREAID and \tct1.SALESGROUP = csg1.GROUPID left join dbo.SALESPOOL sp1 on \tct1.DATAAREAID = sp1.DATAAREAID and \tct1.SALESPOOLID = sp1.SALESPOOLID left join dbo.SMMBUSRELSEGMENTGROUP sbrsg1 on \tct1.DATAAREAID = sbrsg1.DATAAREAID and \tct1.SEGMENTID = sbrsg1.SEGMENTID left join dbo.SMMBUSRELSUBSEGMENTGROUP sbrssg1 on \tct1.DATAAREAID = sbrssg1.DATAAREAID and \tct1.SEGMENTID = sbrssg1.SEGMENTID and \tct1.SUBSEGMENTID = sbrssg1.SUBSEGMENTID left join dbo.TAXGROUPHEADING tgh1 on \tct1.DATAAREAID = tgh1.DATAAREAID and \tct1.TAXGROUP = tgh1.TAXGROUP left join (select LOCATION, STREET, CITY, STATE, ZIPCODE, COUNTRYREGIONID, TIMEZONE \t\t\t\t, row_number() over (partition by LOCATION order by VALIDTO) as ROW_NUM \t\t\tfrom dbo.LOGISTICSPOSTALADDRESS) lpa1 on \tlpa1.ROW_NUM = 1 and \tdpt1.PRIMARYADDRESSLOCATION = lpa1.LOCATION left join dbo.TIMEZONESLIST tzl1 on \tlpa1.TIMEZONE = tzl1.TZENUM left join dbo.LOGISTICSLOCATION ll1 on \tlpa1.LOCATION = ll1.RECID left join dbo.LOGISTICSELECTRONICADDRESS lea1 on \tdpt1.PRIMARYCONTACTEMAIL = lea1.RECID left join dbo.LOGISTICSELECTRONICADDRESS lea2 on \tdpt1.PRIMARYCONTACTFAX = lea2.RECID left join dbo.LOGISTICSELECTRONICADDRESS lea3 on \tdpt1.PRIMARYCONTACTPHONE = lea3.RECID left join (select dpl10.PARTY, dpl10.LOCATION, lpa10.STREET, lpa10.CITY, lpa10.STATE, lpa10.ZIPCODE, lpa10.COUNTRYREGIONID \t\t\t, row_number() over (partition by dpl10.PARTY order by ll10.LOCATIONID desc) as ROW_NUM \t\tfrom dbo.DIRPARTYLOCATION dpl10 \t\tleft join dbo.LOGISTICSPOSTALADDRESS lpa10 on \t\t\tlpa10.VALIDTO = '2154-12-31T23:59:59' and \t\t\tdpl10.LOCATION = lpa10.LOCATION \t\tleft join dbo.LOGISTICSLOCATION ll10 on \t\t\tlpa10.LOCATION = ll10.RECID \t\twhere dpl10.ISROLEINVOICE = 1) lpa2 on \tlpa2.ROW_NUM = 1 and \tct1.PARTY = lpa2.PARTY left join dbo.LOGISTICSLOCATION ll2 on \tlpa2.LOCATION = ll2.RECID\t\t\t\t \t\t\t\t\t",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "ACCOUNTNUM",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ACCOUNTNUM",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PARTY",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "PARTY",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "EBCCOMPANYID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "EBCCOMPANYID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "OURACCOUNTNUM",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "OURACCOUNTNUM",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVOICEACCOUNT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVOICEACCOUNT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CURRENCY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CURRENCY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "USECASHDISC",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "USECASHDISC",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "MAINCONTACTWORKER",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "MAINCONTACTWORKER",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "BLOCKED",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "BLOCKED",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "PASTDUECHECK",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "PASTDUECHECK",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "CREDITMAX",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "CREDITMAX",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "MANDATORYCREDITLIMIT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "MANDATORYCREDITLIMIT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "EXCLUDECREDITLIMITBLOCKING",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "EXCLUDECREDITLIMITBLOCKING",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "GRACEDAYS",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "GRACEDAYS",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "EBCBUYGRPEXEMPTION",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "EBCBUYGRPEXEMPTION",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "EBCBUYGRPKICKER",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "EBCBUYGRPKICKER",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "CASHDISC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CASHDISC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DLVMODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DLVMODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DLVTERM",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DLVTERM",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PAYMMODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "PAYMMODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PAYMTERMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "PAYMTERMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTCLASSIFICATIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTCLASSIFICATIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "COMPANYCHAINID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "COMPANYCHAINID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "EBCDIVISIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "EBCDIVISIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LINEOFBUSINESSID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LINEOFBUSINESSID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "MARKUPGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "MARKUPGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PRICEGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "PRICEGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "SALESDISTRICTID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESDISTRICTID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESPOOLID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESPOOLID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SEGMENTID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SEGMENTID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SUBSEGMENTID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SUBSEGMENTID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TAXGROUP",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TAXGROUP",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "EBCREPORTPARENT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "EBCREPORTPARENT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "MCSEXTERNALPRICING",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "MCSEXTERNALPRICING",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "MCSNETWORKID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "MCSNETWORKID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE1_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIRPARTYTABLE1_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE1_INSTANCERELATIONTYPE",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DIRPARTYTABLE1_INSTANCERELATIONTYPE",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE1_EBCLEGACY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIRPARTYTABLE1_EBCLEGACY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE1_ORGNUMBER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIRPARTYTABLE1_ORGNUMBER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE1_PRIMARYADDRESSLOCATION",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DIRPARTYTABLE1_PRIMARYADDRESSLOCATION",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DIRPARTYTABLE1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "CURRENCY_TXT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CURRENCY_TXT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CURRENCY_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CURRENCY_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "HCMWORKER1_PERSONNELNUMBER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "HCMWORKER1_PERSONNELNUMBER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HCMWORKER1_PERSON",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "HCMWORKER1_PERSON",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "HCMWORKER1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "HCMWORKER1_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE2_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIRPARTYTABLE2_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DIRPARTYTABLE2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TSIAVGDAYS_CPAVGDAY",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TSIAVGDAYS_CPAVGDAY",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "TSIAVGDAYS_YRAVGDAY",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TSIAVGDAYS_YRAVGDAY",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "CASHDISC_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CASHDISC_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CASHDISC_PERCENT",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "CASHDISC_PERCENT",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "DLVMODE_TXT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DLVMODE_TXT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DLVTERM_TXT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DLVTERM_TXT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTPAYMMODETABLE_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTPAYMMODETABLE_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PAYMTERM_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "PAYMTERM_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PAYMTERM_NUMOFDAYS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "PAYMTERM_NUMOFDAYS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "PAYMTERM_NUMOFMONTHS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "PAYMTERM_NUMOFMONTHS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "CUSTCLASSIFICATIONGROUP_TXT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTCLASSIFICATIONGROUP_TXT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELCHAINGROUP_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELCHAINGROUP_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTGROUP_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTGROUP_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_EBCDIVISIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_EBCDIVISIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP1",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP1",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP2",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP2",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP3",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP3",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "EBCSALESMKTDIVISION1_EBCDIVISIONDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "EBCSALESMKTDIVISION1_EBCDIVISIONDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LINEOFBUSINESS_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LINEOFBUSINESS_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "MARKUPGROUP_TXT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "MARKUPGROUP_TXT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PRICEDISCGROUP_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "PRICEDISCGROUP_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_C_SALES_CHANNEL",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_C_SALES_CHANNEL",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_C_SALES_CHANNEL_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_C_SALES_CHANNEL_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "COMMISSIONSALESGROUP_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "COMMISSIONSALESGROUP_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SALESPOOL_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SALESPOOL_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELSEGMENTGROUP_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELSEGMENTGROUP_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELSUBSEGMENTGROUP_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELSUBSEGMENTGROUP_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TAXGROUPHEADING_TAXGROUPNAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TAXGROUPHEADING_TAXGROUPNAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS1_STREET",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS1_STREET",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS1_CITY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS1_CITY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS1_STATE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS1_STATE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS1_ZIPCODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS1_ZIPCODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS1_COUNTRYREGIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS1_COUNTRYREGIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS1_TIMEZONE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS1_TIMEZONE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "TIMEZONESLIST_TIMEZONEKEYNAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEZONESLIST_TIMEZONEKEYNAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSLOCATION1_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSLOCATION1_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSELECTRONICADDRESS1_LOCATOR",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSELECTRONICADDRESS1_LOCATOR",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSELECTRONICADDRESS2_LOCATOR",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSELECTRONICADDRESS2_LOCATOR",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSELECTRONICADDRESS3_LOCATOR",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSELECTRONICADDRESS3_LOCATOR",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS2_STREET",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS2_STREET",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS2_CITY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS2_CITY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS2_STATE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS2_STATE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS2_ZIPCODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS2_ZIPCODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSPOSTALADDRESS2_COUNTRYREGIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSPOSTALADDRESS2_COUNTRYREGIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSLOCATION2_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSLOCATION2_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LOGISTICSLOCATION2_LOCATIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LOGISTICSLOCATION2_LOCATIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTTABLE2_EBCDIVISIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTTABLE2_EBCDIVISIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTTABLE2_SALESDISTRICTID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTTABLE2_SALESDISTRICTID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTTABLE2_MAINCONTACTWORKER",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "CUSTTABLE2_MAINCONTACTWORKER",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "CUSTTABLE2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CUSTTABLE2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "SMMBUSRELSALESDISTRICTGROUP2_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "SMMBUSRELSALESDISTRICTGROUP2_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "EBCSALESMKTDIVISION2_EBCDIVISIONDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "EBCSALESMKTDIVISION2_EBCDIVISIONDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HCMWORKER2_PERSONNELNUMBER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "HCMWORKER2_PERSONNELNUMBER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HCMWORKER2_PERSON",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "HCMWORKER2_PERSON",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "HCMWORKER2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "HCMWORKER2_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE3_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIRPARTYTABLE3_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE3_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DIRPARTYTABLE3_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															},
															"sink": {
																"name": "HK_JOB_RUN_ID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "HK_SOURCE_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														}
													],
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": true
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sql_server",
													"type": "DatasetReference",
													"parameters": {
														"p_src_table_name": {
															"value": "@pipeline().parameters.p_src_table_nm",
															"type": "Expression"
														},
														"p_src_schema_name": {
															"value": "@pipeline().parameters.p_src_schema_nm",
															"type": "Expression"
														},
														"p_ls_serverName": {
															"value": "@pipeline().globalParameters.retail_sql_serverName",
															"type": "Expression"
														},
														"p_ls_dbName": {
															"value": "@pipeline().globalParameters.retail_sql_dbName",
															"type": "Expression"
														},
														"p_ls_sqlUsername": {
															"value": "@pipeline().globalParameters.sql_userName",
															"type": "Expression"
														},
														"p_ls_sqlPassword": {
															"value": "@pipeline().globalParameters.sql_password",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_parquet",
													"type": "DatasetReference",
													"parameters": {
														"p_directory": {
															"value": "@pipeline().parameters.p_temp_directory",
															"type": "Expression"
														},
														"p_root_system": {
															"value": "@pipeline().globalParameters.rootDir",
															"type": "Expression"
														},
														"p_file_name": {
															"value": "@pipeline().parameters.p_temp_file_nm",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "retail_notify_raw_load_failure_notification",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "custtable_to_adls_retail",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('custtable_to_adls_retail').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@replace(replace(replace(activity('custtable_to_adls_retail').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('custtable_to_adls_retail').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('custtable_to_adls_retail').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "sql_retail_load_to_raw_fail",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "retail_notify_raw_load_failure_notification",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": {
													"value": "@activity('custtable_to_adls_retail').Error['message']",
													"type": "Expression"
												},
												"errorCode": "500"
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "custtable_to_adls_d365",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "WarehouseSource",
											"additionalColumns": [
												{
													"name": "HK_JOB_RUN_ID",
													"value": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													}
												},
												{
													"name": "HK_SOURCE_NAME",
													"value": {
														"value": "@pipeline().parameters.p_src_nm",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "select \nct1.dataareaid as DATAAREAID\n,ct1.accountnum as ACCOUNTNUM\n,ct1.party as PARTY\n,ct1.ebccompanyid as EBCCOMPANYID\n,ct1.ouraccountnum as OURACCOUNTNUM\n,ct1.invoiceaccount as INVOICEACCOUNT\n,ct1.currency as CURRENCY\n,ct1.usecashdisc as USECASHDISC\n,ct1.maincontactworker as MAINCONTACTWORKER\n,ct1.blocked as BLOCKED\n,ct1.pastduecheck as PASTDUECHECK\n,ct1.creditmax as CREDITMAX\n,ct1.mandatorycreditlimit as MANDATORYCREDITLIMIT\n,ct1.excludecreditlimitblocking as EXCLUDECREDITLIMITBLOCKING\n,ct1.gracedays as GRACEDAYS\n,ct1.ebcbuygrpexemption as EBCBUYGRPEXEMPTION\n,ct1.ebcbuygrpkicker as EBCBUYGRPKICKER\n,ct1.cashdisc as CASHDISC\n,ct1.dlvmode as DLVMODE\n,ct1.dlvterm as DLVTERM\n,ct1.paymmode as PAYMMODE\n,ct1.paymtermid as PAYMTERMID\n,ct1.custclassificationid as CUSTCLASSIFICATIONID\n,ct1.companychainid as COMPANYCHAINID\n,ct1.custgroup as CUSTGROUP\n,ct1.ebcdivisionid as EBCDIVISIONID\n,ct1.lineofbusinessid as LINEOFBUSINESSID\n,ct1.markupgroup as MARKUPGROUP\n,ct1.pricegroup as PRICEGROUP\n,ct1.defaultdimension as DEFAULTDIMENSION\n,ct1.salesdistrictid as SALESDISTRICTID\n,ct1.salesgroup as SALESGROUP\n,ct1.salespoolid as SALESPOOLID\n,ct1.segmentid as SEGMENTID\n,ct1.subsegmentid as SUBSEGMENTID\n,ct1.taxgroup as TAXGROUP\n,ct1.ebcreportparent as EBCREPORTPARENT\n,ct1.mcsexternalpricing as MCSEXTERNALPRICING\n,ct1.mcsnetworkid as MCSNETWORKID\n,ct1.modifieddatetime as MODIFIEDDATETIME\n,dpt1.name as DIRPARTYTABLE1_NAME\n,dpt1.instancerelationtype as DIRPARTYTABLE1_INSTANCERELATIONTYPE\n,dpt1.ebclegacy as DIRPARTYTABLE1_EBCLEGACY\n,do1.orgnumber as DIRPARTYTABLE1_ORGNUMBER\n,dpt1.primaryaddresslocation as DIRPARTYTABLE1_PRIMARYADDRESSLOCATION\n,dpt1.modifieddatetime as DIRPARTYTABLE1_MODIFIEDDATETIME\n,c1.txt as CURRENCY_TXT\n,c1.modifieddatetime as CURRENCY_MODIFIEDDATETIME\n,hw1.personnelnumber as HCMWORKER1_PERSONNELNUMBER\n,hw1.person as HCMWORKER1_PERSON\n,hw1.modifieddatetime as HCMWORKER1_MODIFIEDDATETIME\n,dpt2.name as DIRPARTYTABLE2_NAME\n,dpt2.modifieddatetime as DIRPARTYTABLE2_MODIFIEDDATETIME\n,tad1.cpavgday as TSIAVGDAYS_CPAVGDAY\n,tad1.yravgday as TSIAVGDAYS_YRAVGDAY\n,cd1.description as CASHDISC_DESCRIPTION\n,cd1.\"percent\" as CASHDISC_PERCENT\n,dm1.txt as DLVMODE_TXT\n,dt1.txt as DLVTERM_TXT\n,cpmt1.name as CUSTPAYMMODETABLE_NAME\n,pt1.description as PAYMTERM_DESCRIPTION\n,pt1.numofdays as PAYMTERM_NUMOFDAYS\n,pt1.numofmonths as PAYMTERM_NUMOFMONTHS\n,ccg1.txt as CUSTCLASSIFICATIONGROUP_TXT\n,sbrcg1.description as SMMBUSRELCHAINGROUP_DESCRIPTION\n,cg1.name as CUSTGROUP_NAME\n,sbrsdg1.ebcdivisionid as SMMBUSRELSALESDISTRICTGROUP1_EBCDIVISIONID\n,sbrsdg1.description as SMMBUSRELSALESDISTRICTGROUP1_DESCRIPTION\n,sbrsdg1.altrollup1 as SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP1\n,sbrsdg1.altrollup2 as SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP2\n,sbrsdg1.altrollup3 as SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP3\n,esmd1.ebcdivisiondesc as EBCSALESMKTDIVISION1_EBCDIVISIONDESC\n,lob1.description as LINEOFBUSINESS_DESCRIPTION\n,mug1.txt as MARKUPGROUP_TXT\n,pdg1.name as PRICEDISCGROUP_NAME\n,def1.C_SALES_CHANNEL as DEFAULTDIMENSION_C_SALES_CHANNEL\n,def1.C_SALES_CHANNEL_DESCRIPTION as DEFAULTDIMENSION_C_SALES_CHANNEL_DESCRIPTION\n,def1.DEFAULTDIMENSION_MODIFIEDDATETIME as DEFAULTDIMENSION_MODIFIEDDATETIME\n,csg1.name as COMMISSIONSALESGROUP_NAME\n,sp1.name as SALESPOOL_NAME\n,sbrsg1.description as SMMBUSRELSEGMENTGROUP_DESCRIPTION\n,sbrssg1.subsegmentdescription as SMMBUSRELSUBSEGMENTGROUP_DESCRIPTION\n,tgh1.taxgroupname as TAXGROUPHEADING_TAXGROUPNAME\n,lpa1.street as LOGISTICSPOSTALADDRESS1_STREET\n,lpa1.city as LOGISTICSPOSTALADDRESS1_CITY\n,lpa1.state as LOGISTICSPOSTALADDRESS1_STATE\n,lpa1.zipcode as LOGISTICSPOSTALADDRESS1_ZIPCODE\n,lpa1.countryregionid as LOGISTICSPOSTALADDRESS1_COUNTRYREGIONID\n,lpa1.timezone as LOGISTICSPOSTALADDRESS1_TIMEZONE\n,tzl1.timezonekeyname as TIMEZONESLIST_TIMEZONEKEYNAME\n,ll1.description as LOGISTICSLOCATION1_DESCRIPTION\n,lea1.locator as LOGISTICSELECTRONICADDRESS1_LOCATOR\n,lea2.locator as LOGISTICSELECTRONICADDRESS2_LOCATOR\n,lea3.locator as LOGISTICSELECTRONICADDRESS3_LOCATOR\n,lpa2.street as LOGISTICSPOSTALADDRESS2_STREET\n,lpa2.city as LOGISTICSPOSTALADDRESS2_CITY\n,lpa2.state as LOGISTICSPOSTALADDRESS2_STATE\n,lpa2.zipcode as LOGISTICSPOSTALADDRESS2_ZIPCODE\n,lpa2.countryregionid as LOGISTICSPOSTALADDRESS2_COUNTRYREGIONID\n,ll2.description as LOGISTICSLOCATION2_DESCRIPTION\n,ll2.locationid as LOGISTICSLOCATION2_LOCATIONID\n,ct2.ebcdivisionid as CUSTTABLE2_EBCDIVISIONID\n,ct2.salesdistrictid as CUSTTABLE2_SALESDISTRICTID\n,ct2.maincontactworker as CUSTTABLE2_MAINCONTACTWORKER\n,ct2.modifieddatetime as CUSTTABLE2_MODIFIEDDATETIME\n,sbrsdg2.description as SMMBUSRELSALESDISTRICTGROUP2_DESCRIPTION\n,esmd2.ebcdivisiondesc as EBCSALESMKTDIVISION2_EBCDIVISIONDESC\n,hw2.personnelnumber as HCMWORKER2_PERSONNELNUMBER\n,hw2.person as HCMWORKER2_PERSON\n,hw2.modifieddatetime as HCMWORKER2_MODIFIEDDATETIME\n,dpt3.name as DIRPARTYTABLE3_NAME\n,dpt3.modifieddatetime as DIRPARTYTABLE3_MODIFIEDDATETIME\n,(SELECT MAX(LastUpdateDate)\nFROM (VALUES (ct1.modifieddatetime),\n(isnull(dpt1.modifieddatetime, '1950-01-01')),\n(isnull(c1.modifieddatetime, '1950-01-01')),\n(isnull(hw1.modifieddatetime, '1950-01-01')),\n(isnull(dpt2.modifieddatetime, '1950-01-01')),\n(isnull(def1.DEFAULTDIMENSION_MODIFIEDDATETIME, '1950-01-01')),\n(isnull(ct2.modifieddatetime, '1950-01-01')),\n(isnull(hw2.modifieddatetime, '1950-01-01')),\n(isnull(dpt3.modifieddatetime, '1950-01-01'))) AS UpdateDate(LastUpdateDate)) AS LATEST_MODIFIEDDATETIME\nfrom\ndataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custtable ct1\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dirpartytable dpt1 on\n\tct1.party = dpt1.recid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dirorganization do1 on\n\tdpt1.recid = do1.recid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.currency c1 on\n\tct1.currency = c1.currencycode\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.hcmworker hw1 on\n\tct1.maincontactworker = hw1.recid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dirpartytable dpt2 on\n\thw1.person = dpt2.recid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.tsiavgdays tad1 on\n\tct1.dataareaid = tad1.dataareaid and\n\tct1.accountnum = tad1.custaccount\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.cashdisc cd1 on\n\tct1.dataareaid = cd1.dataareaid and\n\tct1.cashdisc = cd1.cashdisccode\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dlvmode dm1 on\n\tct1.dataareaid = dm1.dataareaid and\n\tct1.dlvmode = dm1.code\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dlvterm dt1 on\n\tct1.dataareaid = dt1.dataareaid and\n\tct1.dlvterm = dt1.code\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custpaymmodetable cpmt1 on\n\tct1.dataareaid = cpmt1.dataareaid and\n\tct1.paymmode = cpmt1.paymmode\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.paymterm pt1 on\n\tct1.dataareaid = pt1.dataareaid and\n\tct1.paymtermid = pt1.paymtermid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custclassificationgroup ccg1 on\n\tct1.dataareaid = ccg1.dataareaid and\n\tct1.custclassificationid = ccg1.code\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.smmbusrelchaingroup sbrcg1 on\n\tct1.dataareaid = sbrcg1.dataareaid and\n\tct1.companychainid = sbrcg1.chainid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custgroup cg1 on\n\tct1.dataareaid = cg1.dataareaid and\n\tct1.custgroup = cg1.custgroup\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.smmbusrelsalesdistrictgroup sbrsdg1 on\n\tct1.dataareaid = sbrsdg1.dataareaid and\n\tct1.salesdistrictid = sbrsdg1.salesdistrictid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.ebcsalesmktdivision esmd1 on\n\tsbrsdg1.dataareaid = esmd1.dataareaid and\n\tsbrsdg1.ebcdivisionid = esmd1.ebcdivisionid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.lineofbusiness lob1 on\n\tct1.dataareaid = lob1.dataareaid and\n\tct1.lineofbusinessid = lob1.lineofbusinessid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.markupgroup mug1 on\n\tmug1.module = 1 and\n\tct1.dataareaid = mug1.dataareaid and\n\tct1.markupgroup = mug1.groupid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.pricediscgroup pdg1 on\n\tpdg1.type = 0 and\n\tpdg1.module = 1 and\n\tct1.dataareaid = pdg1.dataareaid and\n\tct1.pricegroup = pdg1.groupid\nleft join (select distinct ct1.defaultdimension\n\t\t\t\t, max(\n\t\t\t\t\tcase when da1.name = 'C_Sales_Channel' then davsi1.displayvalue\n\t\t\t\t\t\telse null\n\t\t\t\t\t\tend\n\t\t\t\t\t) over (partition by ct1.defaultdimension) as C_SALES_CHANNEL\n\t\t\t\t, min(\n\t\t\t\t\tcase when da1.name = 'C_Sales_Channel' then desc1.description\n\t\t\t\t\telse null\n\t\t\t\t\tend\n\t\t\t\t\t) over (partition by ct1.defaultdimension) as C_SALES_CHANNEL_DESCRIPTION\n\t\t\t\t, max(\n\t\t\t\t\t(select max(i) from (values (davsi1.modifieddatetime), (dav1.modifieddatetime), (da1.modifieddatetime), (desc1.DESC_MODIFIEDDATETIME)) as t(i))\n\t\t\t\t\t) over (partition by ct1.defaultdimension) as DEFAULTDIMENSION_MODIFIEDDATETIME\n\t\t\tfrom (select distinct defaultdimension from dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custtable) ct1\n\t\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattributevaluesetitem davsi1 on\n\t\t\t\tct1.defaultdimension = davsi1.dimensionattributevalueset\n\t\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattributevalue dav1 on\n\t\t\t\tdavsi1.dimensionattributevalue = dav1.recid\n\t\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattribute da1 on\n\t\t\t\tdav1.dimensionattribute = da1.recid\n\t\t\tleft join (select dft1.value, da2.name, dft1.description\n\t\t\t\t\t\t\t, (select max(i) from (values (dft1.modifieddatetime), (dadc1.modifieddatetime), (da2.modifieddatetime)) as t(i)) as DESC_MODIFIEDDATETIME\n\t\t\t\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionfinancialtag dft1\n\t\t\t\t\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattributedircategory dadc1 on\n\t\t\t\t\t\t\tdft1.financialtagcategory = dadc1.dircategory\n\t\t\t\t\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattribute da2 on\n\t\t\t\t\t\t\tdadc1.dimensionattribute = da2.recid) desc1 on\n\t\t\t\tdavsi1.displayvalue = desc1.value and\n\t\t\t\tda1.name = desc1.name\n\t\t\t) def1 on\n\tct1.defaultdimension = def1.defaultdimension\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.commissionsalesgroup csg1 on\n\tct1.dataareaid = csg1.dataareaid and\n\tct1.salesgroup = csg1.groupid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.salespool sp1 on\n\tct1.dataareaid = sp1.dataareaid and\n\tct1.salespoolid = sp1.salespoolid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.smmbusrelsegmentgroup sbrsg1 on\n\tct1.dataareaid = sbrsg1.dataareaid and\n\tct1.segmentid = sbrsg1.segmentid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.smmbusrelsubsegmentgroup sbrssg1 on\n\tct1.dataareaid = sbrssg1.dataareaid and\n\tct1.segmentid = sbrssg1.segmentid and\n\tct1.subsegmentid = sbrssg1.subsegmentid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.taxgroupheading tgh1 on\n\tct1.dataareaid = tgh1.dataareaid and\n\tct1.taxgroup = tgh1.taxgroup\nleft join (select location, street, city, state, zipcode, countryregionid, timezone\n\t\t\t\t, row_number() over (partition by location order by validto) as ROW_NUM\n\t\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.logisticspostaladdress) lpa1 on\n\tlpa1.ROW_NUM = 1 and\n\tdpt1.primaryaddresslocation = lpa1.location\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.timezoneslist tzl1 on\n\tlpa1.timezone = tzl1.tzenum\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.logisticslocation ll1 on\n\tlpa1.location = ll1.recid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.logisticselectronicaddress lea1 on\n\tdpt1.primarycontactemail = lea1.recid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.logisticselectronicaddress lea2 on\n\tdpt1.primarycontactfax = lea2.recid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.logisticselectronicaddress lea3 on\n\tdpt1.primarycontactphone = lea3.recid\nleft join (select dpl10.party, dpl10.location, lpa10.street, lpa10.city, lpa10.state, lpa10.zipcode, lpa10.countryregionid\n\t\t\t, row_number() over (partition by dpl10.party order by ll10.locationid desc) as ROW_NUM\n\t\tfrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dirpartylocation dpl10\n\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.logisticspostaladdress lpa10 on\n\t\t\tlpa10.validto = '2154-12-31T23:59:59' and\n\t\t\tdpl10.location = lpa10.location\n\t\tleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.logisticslocation ll10 on\n\t\t\tlpa10.location = ll10.recid\n\t\twhere dpl10.isroleinvoice = 1) lpa2 on\n\tlpa2.ROW_NUM = 1 and\n\tct1.party = lpa2.party\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.logisticslocation ll2 on\n\tlpa2.location = ll2.recid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custtable ct2 on\n\tct1.dataareaid = ct2.dataareaid and\n\tct1.ebcreportparent = ct2.accountnum\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.smmbusrelsalesdistrictgroup sbrsdg2 on\n\tct2.dataareaid = sbrsdg2.dataareaid and\n\tct2.salesdistrictid = sbrsdg2.salesdistrictid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.ebcsalesmktdivision esmd2 on\n\tsbrsdg2.dataareaid = esmd2.dataareaid and\n\tsbrsdg2.ebcdivisionid = esmd2.ebcdivisionid\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.hcmworker hw2 on\n\tct1.ebcreportparent = convert(nvarchar(20), hw2.recid)\nleft join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dirpartytable dpt3 on\n\thw2.person = dpt3.recid\nwhere ct1.dataareaid is not null",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DATAAREAID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DATAAREAID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ACCOUNTNUM",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "ACCOUNTNUM",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PARTY",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "PARTY",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "EBCCOMPANYID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "EBCCOMPANYID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "OURACCOUNTNUM",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "OURACCOUNTNUM",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "INVOICEACCOUNT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVOICEACCOUNT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CURRENCY",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CURRENCY",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "USECASHDISC",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "USECASHDISC",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "MAINCONTACTWORKER",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "MAINCONTACTWORKER",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "BLOCKED",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "BLOCKED",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "PASTDUECHECK",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "PASTDUECHECK",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "CREDITMAX",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "CREDITMAX",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "MANDATORYCREDITLIMIT",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "MANDATORYCREDITLIMIT",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "EXCLUDECREDITLIMITBLOCKING",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "EXCLUDECREDITLIMITBLOCKING",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "GRACEDAYS",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "GRACEDAYS",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "EBCBUYGRPEXEMPTION",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "EBCBUYGRPEXEMPTION",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "EBCBUYGRPKICKER",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "EBCBUYGRPKICKER",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "CASHDISC",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CASHDISC",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DLVMODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DLVMODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DLVTERM",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DLVTERM",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PAYMMODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "PAYMMODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PAYMTERMID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "PAYMTERMID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTCLASSIFICATIONID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTCLASSIFICATIONID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "COMPANYCHAINID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "COMPANYCHAINID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "EBCDIVISIONID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "EBCDIVISIONID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LINEOFBUSINESSID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LINEOFBUSINESSID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MARKUPGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "MARKUPGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PRICEGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "PRICEGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DEFAULTDIMENSION",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "DEFAULTDIMENSION",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "SALESDISTRICTID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESDISTRICTID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESPOOLID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESPOOLID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SEGMENTID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SEGMENTID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SUBSEGMENTID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SUBSEGMENTID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TAXGROUP",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TAXGROUP",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "EBCREPORTPARENT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "EBCREPORTPARENT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MCSEXTERNALPRICING",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "MCSEXTERNALPRICING",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "MCSNETWORKID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "MCSNETWORKID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "DIRPARTYTABLE1_NAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DIRPARTYTABLE1_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DIRPARTYTABLE1_INSTANCERELATIONTYPE",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "DIRPARTYTABLE1_INSTANCERELATIONTYPE",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "DIRPARTYTABLE1_EBCLEGACY",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DIRPARTYTABLE1_EBCLEGACY",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DIRPARTYTABLE1_ORGNUMBER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DIRPARTYTABLE1_ORGNUMBER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DIRPARTYTABLE1_PRIMARYADDRESSLOCATION",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "DIRPARTYTABLE1_PRIMARYADDRESSLOCATION",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "DIRPARTYTABLE1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DIRPARTYTABLE1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "CURRENCY_TXT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CURRENCY_TXT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CURRENCY_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CURRENCY_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "HCMWORKER1_PERSONNELNUMBER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "HCMWORKER1_PERSONNELNUMBER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "HCMWORKER1_PERSON",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "HCMWORKER1_PERSON",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "HCMWORKER1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "HCMWORKER1_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "DIRPARTYTABLE2_NAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DIRPARTYTABLE2_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DIRPARTYTABLE2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DIRPARTYTABLE2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "TSIAVGDAYS_CPAVGDAY",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TSIAVGDAYS_CPAVGDAY",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "TSIAVGDAYS_YRAVGDAY",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TSIAVGDAYS_YRAVGDAY",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "CASHDISC_DESCRIPTION",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CASHDISC_DESCRIPTION",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CASHDISC_PERCENT",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "CASHDISC_PERCENT",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "DLVMODE_TXT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DLVMODE_TXT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DLVTERM_TXT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DLVTERM_TXT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTPAYMMODETABLE_NAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTPAYMMODETABLE_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PAYMTERM_DESCRIPTION",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "PAYMTERM_DESCRIPTION",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PAYMTERM_NUMOFDAYS",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "PAYMTERM_NUMOFDAYS",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "PAYMTERM_NUMOFMONTHS",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "PAYMTERM_NUMOFMONTHS",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "CUSTCLASSIFICATIONGROUP_TXT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTCLASSIFICATIONGROUP_TXT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SMMBUSRELCHAINGROUP_DESCRIPTION",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SMMBUSRELCHAINGROUP_DESCRIPTION",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTGROUP_NAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTGROUP_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SMMBUSRELSALESDISTRICTGROUP1_EBCDIVISIONID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SMMBUSRELSALESDISTRICTGROUP1_EBCDIVISIONID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SMMBUSRELSALESDISTRICTGROUP1_DESCRIPTION",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SMMBUSRELSALESDISTRICTGROUP1_DESCRIPTION",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP1",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP1",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP2",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP2",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP3",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SMMBUSRELSALESDISTRICTGROUP1_ALTROLLUP3",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "EBCSALESMKTDIVISION1_EBCDIVISIONDESC",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "EBCSALESMKTDIVISION1_EBCDIVISIONDESC",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LINEOFBUSINESS_DESCRIPTION",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LINEOFBUSINESS_DESCRIPTION",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "MARKUPGROUP_TXT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "MARKUPGROUP_TXT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PRICEDISCGROUP_NAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "PRICEDISCGROUP_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DEFAULTDIMENSION_C_SALES_CHANNEL",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DEFAULTDIMENSION_C_SALES_CHANNEL",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DEFAULTDIMENSION_C_SALES_CHANNEL_DESCRIPTION",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DEFAULTDIMENSION_C_SALES_CHANNEL_DESCRIPTION",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "COMMISSIONSALESGROUP_NAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "COMMISSIONSALESGROUP_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SALESPOOL_NAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SALESPOOL_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SMMBUSRELSEGMENTGROUP_DESCRIPTION",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SMMBUSRELSEGMENTGROUP_DESCRIPTION",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "SMMBUSRELSUBSEGMENTGROUP_DESCRIPTION",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SMMBUSRELSUBSEGMENTGROUP_DESCRIPTION",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TAXGROUPHEADING_TAXGROUPNAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TAXGROUPHEADING_TAXGROUPNAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSPOSTALADDRESS1_STREET",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOGISTICSPOSTALADDRESS1_STREET",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSPOSTALADDRESS1_CITY",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOGISTICSPOSTALADDRESS1_CITY",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSPOSTALADDRESS1_STATE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOGISTICSPOSTALADDRESS1_STATE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSPOSTALADDRESS1_ZIPCODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOGISTICSPOSTALADDRESS1_ZIPCODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSPOSTALADDRESS1_COUNTRYREGIONID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOGISTICSPOSTALADDRESS1_COUNTRYREGIONID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSPOSTALADDRESS1_TIMEZONE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "LOGISTICSPOSTALADDRESS1_TIMEZONE",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "TIMEZONESLIST_TIMEZONEKEYNAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEZONESLIST_TIMEZONEKEYNAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSLOCATION1_DESCRIPTION",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOGISTICSLOCATION1_DESCRIPTION",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSELECTRONICADDRESS1_LOCATOR",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOGISTICSELECTRONICADDRESS1_LOCATOR",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSELECTRONICADDRESS2_LOCATOR",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOGISTICSELECTRONICADDRESS2_LOCATOR",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSELECTRONICADDRESS3_LOCATOR",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOGISTICSELECTRONICADDRESS3_LOCATOR",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSPOSTALADDRESS2_STREET",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOGISTICSPOSTALADDRESS2_STREET",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSPOSTALADDRESS2_CITY",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOGISTICSPOSTALADDRESS2_CITY",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSPOSTALADDRESS2_STATE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOGISTICSPOSTALADDRESS2_STATE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSPOSTALADDRESS2_ZIPCODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOGISTICSPOSTALADDRESS2_ZIPCODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSPOSTALADDRESS2_COUNTRYREGIONID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOGISTICSPOSTALADDRESS2_COUNTRYREGIONID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSLOCATION2_DESCRIPTION",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOGISTICSLOCATION2_DESCRIPTION",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LOGISTICSLOCATION2_LOCATIONID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LOGISTICSLOCATION2_LOCATIONID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTTABLE2_EBCDIVISIONID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTTABLE2_EBCDIVISIONID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTTABLE2_SALESDISTRICTID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTTABLE2_SALESDISTRICTID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTTABLE2_MAINCONTACTWORKER",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "CUSTTABLE2_MAINCONTACTWORKER",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "CUSTTABLE2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CUSTTABLE2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "SMMBUSRELSALESDISTRICTGROUP2_DESCRIPTION",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "SMMBUSRELSALESDISTRICTGROUP2_DESCRIPTION",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "EBCSALESMKTDIVISION2_EBCDIVISIONDESC",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "EBCSALESMKTDIVISION2_EBCDIVISIONDESC",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "HCMWORKER2_PERSONNELNUMBER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "HCMWORKER2_PERSONNELNUMBER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "HCMWORKER2_PERSON",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "HCMWORKER2_PERSON",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "HCMWORKER2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "HCMWORKER2_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "DIRPARTYTABLE3_NAME",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DIRPARTYTABLE3_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DIRPARTYTABLE3_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DIRPARTYTABLE3_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													},
													"sink": {
														"name": "HK_JOB_RUN_ID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "HK_SOURCE_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": true
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_fabric_wh",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {
												"p_directory": {
													"value": "@pipeline().parameters.p_temp_directory",
													"type": "Expression"
												},
												"p_root_system": {
													"value": "@pipeline().globalParameters.rootDir",
													"type": "Expression"
												},
												"p_file_name": {
													"value": "@pipeline().parameters.p_temp_file_nm",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "d365_notify_raw_load_failure_notification",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "custtable_to_adls_d365",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('custtable_to_adls_d365').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@activity('custtable_to_adls_d365').Error['message']",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('custtable_to_adls_d365').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('custtable_to_adls_d365').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "d365_load_to_raw_fail",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "d365_notify_raw_load_failure_notification",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('custtable_to_adls_d365').Error['message']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								}
							]
						}
					},
					{
						"name": "pipeline_execution_notification",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@if(equals(activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE'],'TRUE'),bool('TRUE'), bool('FALSE'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "pp_stored_procedure_failure_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@toUpper('failed')",
												"type": "Expression"
											},
											"message": {
												"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": {
												"value": "@pipeline().parameters.p_tgt_curate_table_nm",
												"type": "Expression"
											},
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "curate_load_failure",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "pp_stored_procedure_failure_notification",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "stored_procedure_success_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('raw_to_curate_sp_call').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@concat(pipeline().parameters.p_tgt_curate_table_nm, ' is successfully loaded')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": {
												"value": "@pipeline().parameters.p_tgt_curate_table_nm",
												"type": "Expression"
											},
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "load_raw_failure_notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "load_dim_customer",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pp_adf_pipeline_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subscription": {
									"value": "@pipeline().globalParameters.subscriptionId",
									"type": "Expression"
								},
								"resourceGroup": {
									"value": "@pipeline().globalParameters.resourceGroup",
									"type": "Expression"
								},
								"runId": {
									"value": "@coalesce(pipeline().RunId, -1)",
									"type": "Expression"
								},
								"name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('load_dim_customer').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('load_dim_customer').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('load_dim_customer').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('load_dim_customer').Duration",
									"type": "Expression"
								},
								"teamWebhookUrl": {
									"value": "@pipeline().globalParameters.teamsWebhookUrl",
									"type": "Expression"
								},
								"notificationTime": {
									"value": "@utcNow()",
									"type": "Expression"
								},
								"taskName": {
									"value": "@pipeline().parameters.p_tgt_curate_table_nm",
									"type": "Expression"
								},
								"taskStepNumber": {
									"value": "@pipeline().parameters.p_src_code",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_src_table_nm": {
						"type": "string",
						"defaultValue": "CUSTTABLE"
					},
					"p_src_schema_nm": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"p_tgt_raw_table_nm": {
						"type": "string",
						"defaultValue": "CUSTTABLE"
					},
					"p_tgt_raw_schema_nm": {
						"type": "string",
						"defaultValue": "AX_NALA"
					},
					"p_tgt_curate_table_nm": {
						"type": "string",
						"defaultValue": "DIM_CUSTOMER"
					},
					"p_tgt_curate_schema_nm": {
						"type": "string",
						"defaultValue": "GLOBAL"
					},
					"p_src_nm": {
						"type": "string",
						"defaultValue": "AXNALA"
					},
					"p_src_directory": {
						"type": "string",
						"defaultValue": "business_files"
					},
					"p_temp_file_nm": {
						"type": "string",
						"defaultValue": "custtable_nala.parquet"
					},
					"p_tgt_raw_table_nm_2": {
						"type": "string",
						"defaultValue": "CUSTTABLE_EXT"
					},
					"p_src_file_nm": {
						"type": "string",
						"defaultValue": "ReportingDealerExclusion.xlsx"
					},
					"p_temp_directory": {
						"type": "string",
						"defaultValue": "temp_files"
					},
					"p_src_file_sheet_1": {
						"type": "string",
						"defaultValue": "Segment"
					},
					"p_src_file_sheet_2": {
						"type": "string",
						"defaultValue": "SubSegment"
					},
					"p_lkp_curate_table_nm": {
						"type": "string",
						"defaultValue": "LKP_TRUCK_VOLUME"
					},
					"p_src_code": {
						"type": "string",
						"defaultValue": "1"
					}
				},
				"variables": {
					"v_prev_max_timestamp": {
						"type": "String"
					},
					"v_last_mod_tmstmp_repodealexc": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-03T11:55:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pp_ax_custtrans_to_fact_customer_transactions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "raw_to_curate_sp_call",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "switch_nala_retail_d365",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_snowflake",
							"type": "LinkedServiceReference",
							"parameters": {
								"ls_DbName": {
									"value": "@pipeline().globalParameters.snow_rawDb",
									"type": "Expression"
								},
								"ls_Env": {
									"value": "@pipeline().globalParameters.environment",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('CALL ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb,'.CONTROL.SP_TASK_INITIALIZE(','''',pipeline().RunId,'''',',','''',pipeline().globalParameters.environment,'''',',','''',pipeline().parameters.p_tgt_curate_table_nm,'''',',',pipeline().parameters.p_src_code,')')",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "set_last_modified_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "lkp_raw_last_modified_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_prv_max_upd_timestamp",
							"value": {
								"value": "@coalesce(activity('lkp_raw_last_modified_date').output.firstRow.max_date, '1950-01-01 00:00:00')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "lkp_raw_last_modified_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"query": {
									"value": "@concat('select max(to_varchar(LATEST_MODIFIEDDATETIME::timestamp, ''','yyyy-mm-dd hh24:mi:ss',''')) as max_date from ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_rawDb,'.',pipeline().parameters.p_tgt_raw_schema_nm, '.', pipeline().parameters.p_tgt_raw_table_nm)",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference",
								"parameters": {
									"p_tgt_table_name": {
										"value": "@pipeline().parameters.p_tgt_raw_table_nm",
										"type": "Expression"
									},
									"p_tgt_schema_name": {
										"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
										"type": "Expression"
									},
									"p_ls_DbName": {
										"value": "@pipeline().globalParameters.snow_rawDb",
										"type": "Expression"
									},
									"p_ls_Env": {
										"value": "@pipeline().globalParameters.environment",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "notify_stored_prc_failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pp_adf_pipeline_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subscription": {
									"value": "@pipeline().globalParameters.subscriptionId",
									"type": "Expression"
								},
								"resourceGroup": {
									"value": "@pipeline().globalParameters.resourceGroup",
									"type": "Expression"
								},
								"runId": {
									"value": "@coalesce(pipeline().RunId, -1)",
									"type": "Expression"
								},
								"name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('raw_to_curate_sp_call').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('raw_to_curate_sp_call').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('raw_to_curate_sp_call').Duration",
									"type": "Expression"
								},
								"teamWebhookUrl": {
									"value": "@pipeline().globalParameters.teamsWebhookUrl",
									"type": "Expression"
								},
								"notificationTime": {
									"value": "@utcNow()",
									"type": "Expression"
								},
								"taskName": {
									"value": "@pipeline().parameters.p_tgt_curate_table_nm",
									"type": "Expression"
								},
								"taskStepNumber": {
									"value": "@pipeline().parameters.p_src_code",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "switch_nala_retail_d365",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "set_last_modified_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.p_src_code",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1",
									"activities": [
										{
											"name": "sql_nala_to_adls",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"additionalColumns": [
														{
															"name": "HK_SOURCE_NAME",
															"value": {
																"value": "@pipeline().parameters.p_src_nm",
																"type": "Expression"
															}
														},
														{
															"name": "HK_JOB_RUN_ID",
															"value": {
																"value": "@coalesce(pipeline().RunId, -1)",
																"type": "Expression"
															}
														}
													],
													"sqlReaderQuery": {
														"value": "select \nct1.RECID as RECID\n,ltrim(rtrim(ct1.CASHDISCCODE)) as CASHDISCCODE\n,ltrim(rtrim(ct1.CURRENCYCODE)) as CURRENCYCODE\n,ltrim(rtrim(ct1.ACCOUNTNUM)) as ACCOUNTNUM\n,ltrim(rtrim(ct1.ORDERACCOUNT)) as ORDERACCOUNT\n,ltrim(rtrim(ct1.POSTINGPROFILE)) as POSTINGPROFILE\n,ltrim(rtrim(ct1.DEFAULTDIMENSION)) as DEFAULTDIMENSION\n,ltrim(rtrim(ct1.DELIVERYMODE)) as DELIVERYMODE\n,ltrim(rtrim(ct1.DATAAREAID)) as DATAAREAID\n,ltrim(rtrim(ct1.PAYMMODE)) as PAYMMODE\n,ltrim(rtrim(ct1.REASONREFRECID)) as REASONREFRECID\n,ltrim(rtrim(ct1.APPROVER)) as APPROVER\n,ltrim(rtrim(ct1.PAYMMETHOD)) as PAYMMETHOD\n,ltrim(rtrim(ct1.DXCMBINTEGRATIONTRANSTYPE)) as DXCMBINTEGRATIONTRANSTYPE\n,ltrim(rtrim(ct1.TRANSTYPE)) as TRANSTYPE\n,ltrim(rtrim(ct1.APPROVED)) as APPROVED\n,ltrim(rtrim(ct1.CANCELLEDPAYMENT)) as CANCELLEDPAYMENT\n,ltrim(rtrim(ct1.PREPAYMENT)) as PREPAYMENT\n,ltrim(rtrim(ct1.CORRECT)) as CORRECT\n,ltrim(rtrim(ct1.INVOICE)) as INVOICE\n,ltrim(rtrim(ct1.CLOSED)) as CLOSED\n,ltrim(rtrim(ct1.DOCUMENTDATE)) as DOCUMENTDATE\n,ltrim(rtrim(ct1.DUEDATE)) as DUEDATE\n,ltrim(rtrim(ct1.LASTSETTLEDATE)) as LASTSETTLEDATE\n,ltrim(rtrim(ct1.TRANSDATE)) as TRANSDATE\n,ltrim(rtrim(ct1.DOCUMENTNUM)) as DOCUMENTNUM\n,ltrim(rtrim(ct1.LASTSETTLEVOUCHER)) as LASTSETTLEVOUCHER\n,ltrim(rtrim(ct1.PAYMREFERENCE)) as PAYMREFERENCE\n,ltrim(rtrim(ct1.EBCPURCHORDERFORMNUM)) as EBCPURCHORDERFORMNUM\n,ltrim(rtrim(ct1.TXT)) as TXT\n,ltrim(rtrim(ct1.VOUCHER)) as VOUCHER\n,ltrim(rtrim(ct1.AMOUNTCUR)) as AMOUNTCUR\n,ltrim(rtrim(ct1.AMOUNTMST)) as AMOUNTMST\n,ltrim(rtrim(ct1.SETTLEAMOUNTCUR)) as SETTLEAMOUNTCUR\n,ltrim(rtrim(ct1.SETTLEAMOUNTMST)) as SETTLEAMOUNTMST\n,ltrim(rtrim(ct1.MODIFIEDDATETIME)) as MODIFIEDDATETIME\n,ltrim(rtrim(tet1.ENUMVALUELABEL)) as TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_NETCURRENT\n,ltrim(rtrim(tet2.ENUMVALUELABEL)) as TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE\n,ltrim(rtrim(tet3.ENUMVALUELABEL)) as TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_LEDGERTRANSTYPE\n,ltrim(rtrim(cij1.SALESID)) as CUSTINVOICEJOUR_SALESID\n,ltrim(rtrim(cij1.MODIFIEDDATETIME)) as CUSTINVOICEJOUR_MODIFIEDDATETIME\n,ltrim(rtrim(ljt1.JOURNALNUM)) as LEDGERJOURNALTRANS_JOURNALNUM\n,ltrim(rtrim(ljt1.MODIFIEDDATETIME)) as LEDGERJOURNALTRANS_MODIFIEDDATETIME\n,(SELECT MAX(LastUpdateDate) FROM ( VALUES\n                    (ct1.MODIFIEDDATETIME),\n    \t\t\t\t(isnull(cij1.MODIFIEDDATETIME,'1950-01-01')),\n                    (isnull(ljt1.MODIFIEDDATETIME, '1950-01-01'))) AS UpdateDate(LastUpdateDate)) AS LATEST_MODIFIEDDATETIME\nfrom\ndbo.CUSTTRANS ct1\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'NetCurrent'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet1 on\n\tct1.PAYMMETHOD = tet1.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'DXCMBIntegrationTransType'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet2 on\n\tct1.DXCMBINTEGRATIONTRANSTYPE = tet2.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'LedgerTransType'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet3 on\n\tct1.TRANSTYPE = tet3.ENUMVALUE\nleft join (select DATAAREAID, LEDGERVOUCHER, INVOICEACCOUNT, INVOICEDATE, INVOICEID\n\t\t\t, SALESID\n\t\t\t, MODIFIEDDATETIME\n\t\tfrom dbo.CUSTINVOICEJOUR cij10\n\t\tinner join (select RECID\n\t\t\t\t\t, row_number() over (partition by DATAAREAID, LEDGERVOUCHER, INVOICEACCOUNT, INVOICEDATE, INVOICEID order by MODIFIEDDATETIME desc) as ROW_NUM\n\t\t\t\tfrom dbo.CUSTINVOICEJOUR) cij11 on\n\t\t\tcij11.ROW_NUM = 1 and\n\t\t\tcij10.RECID = cij11.RECID) cij1 on\n\tct1.DATAAREAID = cij1.DATAAREAID and\n\tct1.VOUCHER = cij1.LEDGERVOUCHER and\n\tct1.ACCOUNTNUM = cij1.INVOICEACCOUNT and\n\tct1.TRANSDATE = cij1.INVOICEDATE and\n\tct1.INVOICE = cij1.INVOICEID\nleft join (select ljt10.DATAAREAID, ljt10.CUSTTRANSID\n\t\t\t, ljt10.JOURNALNUM\n\t\t\t, ljt10.MODIFIEDDATETIME\n\t\tfrom dbo.LEDGERJOURNALTRANS ljt10\n\t\tinner join (select RECID\n\t\t\t\t\t, row_number() over (partition by DATAAREAID, CUSTTRANSID order by MODIFIEDDATETIME desc) as ROW_NUM\n\t\t\t\tfrom dbo.LEDGERJOURNALTRANS) ljt11 on\n\t\t\tljt11.ROW_NUM = 1 and\n\t\t\tljt10.RECID = ljt11.RECID\n\t\t) ljt1 on\n\tct1.DATAAREAID = ljt1.DATAAREAID and\n\tct1.RECID = ljt1.CUSTTRANSID\nwhere\n(SELECT MAX(LastUpdateDate) FROM ( VALUES\n                    (ct1.MODIFIEDDATETIME),\n    \t\t\t\t(isnull(cij1.MODIFIEDDATETIME,'1950-01-01')),\n                    (isnull(ljt1.MODIFIEDDATETIME, '1950-01-01'))) AS UpdateDate(LastUpdateDate))\n> '@{variables('v_prv_max_upd_timestamp')}'",
														"type": "Expression"
													},
													"queryTimeout": "16:40:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": true,
												"stagingSettings": {
													"linkedServiceName": {
														"referenceName": "ls_blob_storage",
														"type": "LinkedServiceReference"
													},
													"path": {
														"value": "@pipeline().globalParameters.rootDir",
														"type": "Expression"
													},
													"enableCompression": true
												},
												"parallelCopies": 32,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"name": "RECID",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "RECID",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "CASHDISCCODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CASHDISCCODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CURRENCYCODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CURRENCYCODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "ACCOUNTNUM",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ACCOUNTNUM",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "ORDERACCOUNT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ORDERACCOUNT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "POSTINGPROFILE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "POSTINGPROFILE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "DELIVERYMODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DELIVERYMODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PAYMMODE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "PAYMMODE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "REASONREFRECID",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "REASONREFRECID",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "APPROVER",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "APPROVER",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "PAYMMETHOD",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "PAYMMETHOD",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "DXCMBINTEGRATIONTRANSTYPE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "DXCMBINTEGRATIONTRANSTYPE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "TRANSTYPE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TRANSTYPE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "APPROVED",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "APPROVED",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "CANCELLEDPAYMENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "CANCELLEDPAYMENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "PREPAYMENT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "PREPAYMENT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "CORRECT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "CORRECT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "INVOICE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVOICE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CLOSED",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CLOSED",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DOCUMENTDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DOCUMENTDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DUEDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DUEDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "LASTSETTLEDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "LASTSETTLEDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TRANSDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "TRANSDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DOCUMENTNUM",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DOCUMENTNUM",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LASTSETTLEVOUCHER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LASTSETTLEVOUCHER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PAYMREFERENCE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "PAYMREFERENCE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "EBCPURCHORDERFORMNUM",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "EBCPURCHORDERFORMNUM",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TXT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TXT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "VOUCHER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "VOUCHER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "AMOUNTCUR",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "AMOUNTCUR",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "AMOUNTMST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "AMOUNTMST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "SETTLEAMOUNTCUR",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "SETTLEAMOUNTCUR",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "SETTLEAMOUNTMST",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "SETTLEAMOUNTMST",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_NETCURRENT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_NETCURRENT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_LEDGERTRANSTYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_LEDGERTRANSTYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_SALESID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_SALESID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTRANS_JOURNALNUM",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "LEDGERJOURNALTRANS_JOURNALNUM",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTRANS_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "LEDGERJOURNALTRANS_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "HK_SOURCE_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															},
															"sink": {
																"name": "HK_JOB_RUN_ID",
																"type": "String",
																"physicalType": "UTF8"
															}
														}
													],
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sql_server",
													"type": "DatasetReference",
													"parameters": {
														"p_src_table_name": {
															"value": "@pipeline().parameters.p_src_table_nm",
															"type": "Expression"
														},
														"p_src_schema_name": {
															"value": "@pipeline().parameters.p_src_schema_nm",
															"type": "Expression"
														},
														"p_ls_serverName": {
															"value": "@pipeline().globalParameters.nala_sql_serverName",
															"type": "Expression"
														},
														"p_ls_dbName": {
															"value": "@pipeline().globalParameters.nala_sql_dbName",
															"type": "Expression"
														},
														"p_ls_sqlUsername": {
															"value": "@pipeline().globalParameters.sql_userName",
															"type": "Expression"
														},
														"p_ls_sqlPassword": {
															"value": "@pipeline().globalParameters.sql_password",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_parquet",
													"type": "DatasetReference",
													"parameters": {
														"p_directory": {
															"value": "@pipeline().parameters.p_temp_directory",
															"type": "Expression"
														},
														"p_root_system": {
															"value": "@pipeline().globalParameters.rootDir",
															"type": "Expression"
														},
														"p_file_name": {
															"value": "@pipeline().parameters.p_temp_file_nm",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "nala_raw_load_failure_notification",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "sql_nala_to_adls",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('sql_nala_to_adls').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@replace(replace(replace(activity('sql_nala_to_adls').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('sql_nala_to_adls').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('sql_nala_to_adls').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "load_adls_to_raw",
											"type": "ExecuteDataFlow",
											"dependsOn": [
												{
													"activity": "sql_nala_to_adls",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"dataflow": {
													"referenceName": "df_load_fact_cust_transactions",
													"type": "DataFlowReference",
													"parameters": {
														"p_src_code": {
															"value": "'@{pipeline().parameters.p_src_code}'",
															"type": "Expression"
														}
													},
													"datasetParameters": {
														"srcCustomerParquet": {
															"p_directory": {
																"value": "@pipeline().parameters.p_temp_directory",
																"type": "Expression"
															},
															"p_root_system": {
																"value": "@pipeline().globalParameters.rootDir",
																"type": "Expression"
															},
															"p_file_name": {
																"value": "@pipeline().parameters.p_temp_file_nm",
																"type": "Expression"
															}
														},
														"custtrans": {
															"p_tgt_table_name": {
																"value": "@pipeline().parameters.p_tgt_raw_table_nm",
																"type": "Expression"
															},
															"p_tgt_schema_name": {
																"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
																"type": "Expression"
															},
															"p_ls_DbName": {
																"value": "@pipeline().globalParameters.snow_rawDb",
																"type": "Expression"
															},
															"p_ls_Env": {
																"value": "@pipeline().globalParameters.environment",
																"type": "Expression"
															}
														}
													}
												},
												"staging": {},
												"integrationRuntime": {
													"referenceName": "IR-Snowflake-NALA",
													"type": "IntegrationRuntimeReference"
												},
												"traceLevel": "Fine"
											}
										},
										{
											"name": "load_adls_to_raw_failure_notification",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "load_adls_to_raw",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('load_adls_to_raw').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@activity('load_adls_to_raw').Error['message']",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('load_adls_to_raw').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('load_adls_to_raw').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "sql_nala_load_to_raw_fail",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "nala_raw_load_failure_notification",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": {
													"value": "@activity('sql_nala_to_adls').Error['message']",
													"type": "Expression"
												},
												"errorCode": "500"
											}
										}
									]
								},
								{
									"value": "2",
									"activities": [
										{
											"name": "sql_retail_to_raw",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"additionalColumns": [
														{
															"name": "HK_SOURCE_NAME",
															"value": {
																"value": "@pipeline().parameters.p_src_nm",
																"type": "Expression"
															}
														},
														{
															"name": "HK_JOB_RUN_ID",
															"value": {
																"value": "@coalesce(pipeline().RunId, -1)",
																"type": "Expression"
															}
														}
													],
													"sqlReaderQuery": {
														"value": "select \nct1.RECID\n,ct1.CASHDISCCODE\n,ct1.CURRENCYCODE\n,ct1.ACCOUNTNUM\n,ct1.ORDERACCOUNT\n,ct1.POSTINGPROFILE\n,ct1.DEFAULTDIMENSION\n,ct1.DELIVERYMODE\n,ct1.DATAAREAID\n,ct1.PAYMMODE\n,ct1.REASONREFRECID\n,ct1.APPROVER\n,ct1.PAYMMETHOD\n,null as DXCMBINTEGRATIONTRANSTYPE\n,ct1.TRANSTYPE\n,ct1.APPROVED\n,ct1.CANCELLEDPAYMENT\n,ct1.PREPAYMENT\n,ct1.CORRECT\n,ct1.INVOICE\n,ct1.CLOSED\n,ct1.DOCUMENTDATE\n,ct1.DUEDATE\n,ct1.LASTSETTLEDATE\n,ct1.TRANSDATE\n,ct1.DOCUMENTNUM\n,ct1.LASTSETTLEVOUCHER\n,ct1.PAYMREFERENCE\n,null as EBCPURCHORDERFORMNUM\n,ct1.TXT\n,ct1.VOUCHER\n,ct1.AMOUNTCUR\n,ct1.AMOUNTMST\n,ct1.SETTLEAMOUNTCUR\n,ct1.SETTLEAMOUNTMST\n,ct1.MODIFIEDDATETIME\n,tet1.ENUMVALUELABEL as TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_NETCURRENT\n,null as TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE\n,tet3.ENUMVALUELABEL as TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_LEDGERTRANSTYPE\n,cij1.SALESID as CUSTINVOICEJOUR_SALESID\n,cij1.MODIFIEDDATETIME as CUSTINVOICEJOUR_MODIFIEDDATETIME\n,ljt1.JOURNALNUM as LEDGERJOURNALTRANS_JOURNALNUM\n,ljt1.MODIFIEDDATETIME as LEDGERJOURNALTRANS_MODIFIEDDATETIME\n,(SELECT MAX(LastUpdateDate) FROM ( VALUES\n                    (ct1.MODIFIEDDATETIME),\n    \t\t\t\t(isnull(cij1.MODIFIEDDATETIME,'1950-01-01')),\n                    (isnull(ljt1.MODIFIEDDATETIME, '1950-01-01'))) AS UpdateDate(LastUpdateDate)) AS LATEST_MODIFIEDDATETIME\nfrom\ndbo.custtrans ct1\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dbo.timextenderenumtable\n\t\twhere enumname = 'NetCurrent'\n\t\tgroup by enumname, enumvalue) tet1 on\n\tct1.paymmethod = tet1.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as ENUMVALUELABEL\n\t\tfrom dbo.timextenderenumtable\n\t\twhere enumname = 'LedgerTransType'\n\t\tgroup by enumname, enumvalue) tet3 on\n\tct1.transtype = tet3.enumvalue\nleft join (select dataareaid, ledgervoucher, invoiceaccount, invoicedate, invoiceid\n\t\t\t, salesid\n\t\t\t, modifieddatetime\n\t\tfrom dbo.custinvoicejour cij10\n\t\tinner join (select recid\n\t\t\t\t\t, row_number() over (partition by dataareaid, ledgervoucher, invoiceaccount, invoicedate, invoiceid order by modifieddatetime desc) as ROW_NUM\n\t\t\t\tfrom dbo.custinvoicejour) cij11 on\n\t\t\tcij11.ROW_NUM = 1 and\n\t\t\tcij10.recid = cij11.recid) cij1 on\n\tct1.dataareaid = cij1.dataareaid and\n\tct1.voucher = cij1.ledgervoucher and\n\tct1.accountnum = cij1.invoiceaccount and\n\tct1.transdate = cij1.invoicedate and\n\tct1.invoice = cij1.invoiceid\nleft join (select ljt10.dataareaid, ljt10.custtransid\n\t\t\t, ljt10.journalnum\n\t\t\t, ljt10.modifieddatetime\n\t\tfrom dbo.ledgerjournaltrans ljt10\n\t\tinner join (select recid\n\t\t\t\t\t, row_number() over (partition by dataareaid, custtransid order by modifieddatetime desc) as ROW_NUM\n\t\t\t\tfrom dbo.ledgerjournaltrans) ljt11 on\n\t\t\tljt11.ROW_NUM = 1 and\n\t\t\tljt10.recid = ljt11.recid\n\t\t) ljt1 on\n\tct1.dataareaid = ljt1.dataareaid and\n\tct1.recid = ljt1.custtransid\n    where\n(SELECT MAX(LastUpdateDate) FROM ( VALUES\n                    (ct1.MODIFIEDDATETIME),\n    \t\t\t\t(isnull(cij1.MODIFIEDDATETIME,'1950-01-01')),\n                    (isnull(ljt1.MODIFIEDDATETIME, '1950-01-01'))) AS UpdateDate(LastUpdateDate))\n> '@{variables('v_prv_max_upd_timestamp')}'",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": true,
												"stagingSettings": {
													"linkedServiceName": {
														"referenceName": "ls_blob_storage",
														"type": "LinkedServiceReference"
													},
													"path": {
														"value": "@pipeline().globalParameters.rootDir",
														"type": "Expression"
													},
													"enableCompression": true
												},
												"parallelCopies": 32,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"name": "RECID",
																"type": "Int64"
															},
															"sink": {
																"name": "RECID",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "CASHDISCCODE",
																"type": "String"
															},
															"sink": {
																"name": "CASHDISCCODE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "CURRENCYCODE",
																"type": "String"
															},
															"sink": {
																"name": "CURRENCYCODE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "ACCOUNTNUM",
																"type": "String"
															},
															"sink": {
																"name": "ACCOUNTNUM",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "ORDERACCOUNT",
																"type": "String"
															},
															"sink": {
																"name": "ORDERACCOUNT",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "POSTINGPROFILE",
																"type": "String"
															},
															"sink": {
																"name": "POSTINGPROFILE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64"
															},
															"sink": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "DELIVERYMODE",
																"type": "String"
															},
															"sink": {
																"name": "DELIVERYMODE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "DATAAREAID",
																"type": "String"
															},
															"sink": {
																"name": "DATAAREAID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "PAYMMODE",
																"type": "String"
															},
															"sink": {
																"name": "PAYMMODE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "REASONREFRECID",
																"type": "Int64"
															},
															"sink": {
																"name": "REASONREFRECID",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "APPROVER",
																"type": "Int64"
															},
															"sink": {
																"name": "APPROVER",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "PAYMMETHOD",
																"type": "Int32"
															},
															"sink": {
																"name": "PAYMMETHOD",
																"type": "Int32"
															}
														},
														{
															"source": {
																"name": "DXCMBINTEGRATIONTRANSTYPE",
																"type": "Int32"
															},
															"sink": {
																"name": "DXCMBINTEGRATIONTRANSTYPE",
																"type": "Int32"
															}
														},
														{
															"source": {
																"name": "TRANSTYPE",
																"type": "Int32"
															},
															"sink": {
																"name": "TRANSTYPE",
																"type": "Int32"
															}
														},
														{
															"source": {
																"name": "APPROVED",
																"type": "Int32"
															},
															"sink": {
																"name": "APPROVED",
																"type": "Int32"
															}
														},
														{
															"source": {
																"name": "CANCELLEDPAYMENT",
																"type": "Int32"
															},
															"sink": {
																"name": "CANCELLEDPAYMENT",
																"type": "Int32"
															}
														},
														{
															"source": {
																"name": "PREPAYMENT",
																"type": "Int32"
															},
															"sink": {
																"name": "PREPAYMENT",
																"type": "Int32"
															}
														},
														{
															"source": {
																"name": "CORRECT",
																"type": "Int32"
															},
															"sink": {
																"name": "CORRECT",
																"type": "Int32"
															}
														},
														{
															"source": {
																"name": "INVOICE",
																"type": "String"
															},
															"sink": {
																"name": "INVOICE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "CLOSED",
																"type": "DateTime"
															},
															"sink": {
																"name": "CLOSED",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "DOCUMENTDATE",
																"type": "DateTime"
															},
															"sink": {
																"name": "DOCUMENTDATE",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "DUEDATE",
																"type": "DateTime"
															},
															"sink": {
																"name": "DUEDATE",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "LASTSETTLEDATE",
																"type": "DateTime"
															},
															"sink": {
																"name": "LASTSETTLEDATE",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "TRANSDATE",
																"type": "DateTime"
															},
															"sink": {
																"name": "TRANSDATE",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "DOCUMENTNUM",
																"type": "String"
															},
															"sink": {
																"name": "DOCUMENTNUM",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "LASTSETTLEVOUCHER",
																"type": "String"
															},
															"sink": {
																"name": "LASTSETTLEVOUCHER",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "PAYMREFERENCE",
																"type": "String"
															},
															"sink": {
																"name": "PAYMREFERENCE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "EBCPURCHORDERFORMNUM",
																"type": "String"
															},
															"sink": {
																"name": "EBCPURCHORDERFORMNUM",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "TXT",
																"type": "String"
															},
															"sink": {
																"name": "TXT",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "VOUCHER",
																"type": "String"
															},
															"sink": {
																"name": "VOUCHER",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "AMOUNTCUR",
																"type": "Decimal"
															},
															"sink": {
																"name": "AMOUNTCUR",
																"type": "Decimal"
															}
														},
														{
															"source": {
																"name": "AMOUNTMST",
																"type": "Decimal"
															},
															"sink": {
																"name": "AMOUNTMST",
																"type": "Decimal"
															}
														},
														{
															"source": {
																"name": "SETTLEAMOUNTCUR",
																"type": "Decimal"
															},
															"sink": {
																"name": "SETTLEAMOUNTCUR",
																"type": "Decimal"
															}
														},
														{
															"source": {
																"name": "SETTLEAMOUNTMST",
																"type": "Decimal"
															},
															"sink": {
																"name": "SETTLEAMOUNTMST",
																"type": "Decimal"
															}
														},
														{
															"source": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_NETCURRENT",
																"type": "String"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_NETCURRENT",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE",
																"type": "String"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_LEDGERTRANSTYPE",
																"type": "String"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_LEDGERTRANSTYPE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_SALESID",
																"type": "String"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_SALESID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTRANS_JOURNALNUM",
																"type": "String"
															},
															"sink": {
																"name": "LEDGERJOURNALTRANS_JOURNALNUM",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTRANS_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "LEDGERJOURNALTRANS_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															},
															"sink": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															}
														}
													],
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sql_server",
													"type": "DatasetReference",
													"parameters": {
														"p_src_table_name": {
															"value": "@pipeline().parameters.p_tgt_raw_table_nm",
															"type": "Expression"
														},
														"p_src_schema_name": {
															"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
															"type": "Expression"
														},
														"p_ls_serverName": {
															"value": "@pipeline().globalParameters.retail_sql_serverName",
															"type": "Expression"
														},
														"p_ls_dbName": {
															"value": "@pipeline().globalParameters.retail_sql_dbName",
															"type": "Expression"
														},
														"p_ls_sqlUsername": {
															"value": "@pipeline().globalParameters.sql_userName",
															"type": "Expression"
														},
														"p_ls_sqlPassword": {
															"value": "@pipeline().globalParameters.sql_password",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_parquet",
													"type": "DatasetReference",
													"parameters": {
														"p_directory": {
															"value": "@pipeline().parameters.p_temp_directory",
															"type": "Expression"
														},
														"p_root_system": {
															"value": "@pipeline().globalParameters.rootDir",
															"type": "Expression"
														},
														"p_file_name": {
															"value": "@pipeline().parameters.p_temp_file_nm",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "sql_retail_raw_load_failure_notification",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "sql_retail_to_raw",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('sql_retail_to_raw').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@replace(replace(replace(activity('sql_retail_to_raw').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('sql_retail_to_raw').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('sql_retail_to_raw').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "load_retail_adls_to_raw",
											"type": "ExecuteDataFlow",
											"dependsOn": [
												{
													"activity": "sql_retail_to_raw",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"dataflow": {
													"referenceName": "df_load_fact_cust_transactions",
													"type": "DataFlowReference",
													"parameters": {
														"p_src_code": {
															"value": "'@{pipeline().parameters.p_src_code}'",
															"type": "Expression"
														}
													},
													"datasetParameters": {
														"srcCustomerParquet": {
															"p_directory": {
																"value": "@pipeline().parameters.p_temp_directory",
																"type": "Expression"
															},
															"p_root_system": {
																"value": "@pipeline().globalParameters.rootDir",
																"type": "Expression"
															},
															"p_file_name": {
																"value": "@pipeline().parameters.p_temp_file_nm",
																"type": "Expression"
															}
														},
														"custtrans": {
															"p_tgt_table_name": {
																"value": "@pipeline().parameters.p_tgt_raw_table_nm",
																"type": "Expression"
															},
															"p_tgt_schema_name": {
																"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
																"type": "Expression"
															},
															"p_ls_DbName": {
																"value": "@pipeline().globalParameters.snow_rawDb",
																"type": "Expression"
															},
															"p_ls_Env": {
																"value": "@pipeline().globalParameters.environment",
																"type": "Expression"
															}
														}
													}
												},
												"staging": {},
												"integrationRuntime": {
													"referenceName": "IR-Snowflake-NALA",
													"type": "IntegrationRuntimeReference"
												},
												"traceLevel": "Fine"
											}
										},
										{
											"name": "load_retail_adls_to_raw_failure_notification",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "load_retail_adls_to_raw",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('load_retail_adls_to_raw').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@activity('load_retail_adls_to_raw').Error['message']",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('load_retail_adls_to_raw').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('load_retail_adls_to_raw').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "sql_retail_load_to_raw_fail",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "sql_retail_raw_load_failure_notification",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": {
													"value": "@activity('sql_retail_to_raw').Error['message']",
													"type": "Expression"
												},
												"errorCode": "500"
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "d365_to_raw",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "WarehouseSource",
											"additionalColumns": [
												{
													"name": "HK_SOURCE_NAME",
													"value": {
														"value": "@pipeline().parameters.p_src_nm",
														"type": "Expression"
													}
												},
												{
													"name": "HK_JOB_RUN_ID",
													"value": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@concat('SELECT ct1.recid AS RECID, \nct1.cashdisccode AS CASHDISCCODE,\nct1.currencycode AS CURRENCYCODE,\nct1.accountnum AS ACCOUNTNUM,\nct1.orderaccount AS ORDERACCOUNT,\nct1.postingprofile AS POSTINGPROFILE,\nct1.defaultdimension AS DEFAULTDIMENSION,\nct1.deliverymode AS DELIVERYMODE,\nct1.dataareaid AS DATAAREAID,\nct1.paymmode AS PAYMMODE, \nct1.reasonrefrecid AS REASONREFRECID, \nct1.approver AS APPROVER, \nct1.paymmethod AS PAYMMETHOD, \nct1.dxcmbintegrationtranstype AS DXCMBINTEGRATIONTRANSTYPE, \nct1.transtype AS TRANSTYPE,\nct1.approved AS APPROVED, \nct1.cancelledpayment AS CANCELLEDPAYMENT, \nct1.prepayment AS PREPAYMENT,\nct1.correct AS CORRECT, \nct1.invoice AS INVOICE, \nct1.closed AS CLOSED, \nct1.documentdate AS DOCUMENTDATE,\nct1.duedate AS DUEDATE,\nct1.lastsettledate AS LASTSETTLEDATE,\nct1.transdate AS TRANSDATE, \nct1.documentnum AS DOCUMENTNUM,\nct1.lastsettlevoucher AS LASTSETTLEVOUCHER,\nct1.paymreference AS PAYMREFERENCE, \nct1.ebcpurchorderformnum AS EBCPURCHORDERFORMNUM, \nct1.txt AS TXT, \nct1.voucher AS VOUCHER,\nct1.amountcur AS AMOUNTCUR, \nct1.amountmst AS AMOUNTMST,\nct1.settleamountcur AS SETTLEAMOUNTCUR,\nct1.settleamountmst AS SETTLEAMOUNTMST,\nct1.modifieddatetime AS MODIFIEDDATETIME\n,ltrim(rtrim(tet1.enumvaluelabel)) as TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_NETCURRENT\n,ltrim(rtrim(tet2.enumvaluelabel)) as TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE\n,ltrim(rtrim(tet3.enumvaluelabel)) as TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_LEDGERTRANSTYPE\n,ltrim(rtrim(cij1.salesid)) as CUSTINVOICEJOUR_SALESID\n,ltrim(rtrim(cij1.modifieddatetime)) as CUSTINVOICEJOUR_MODIFIEDDATETIME\n,ltrim(rtrim(ljt1.journalnum)) as LEDGERJOURNALTRANS_JOURNALNUM\n,ltrim(rtrim(ljt1.modifieddatetime)) as LEDGERJOURNALTRANS_MODIFIEDDATETIME\n,(select max(lastupdatedate) from ( values\n                    (ct1.modifieddatetime),\n                                (isnull(cij1.modifieddatetime,''1950-01-01'')),\n                    (isnull(ljt1.modifieddatetime, ''1950-01-01''))) as updatedate(lastupdatedate)) as LATEST_MODIFIEDDATETIME\nfrom ',pipeline().globalParameters.d365_dbName,'.',toLower(pipeline().parameters.p_src_table_nm),\n' ct1\nleft join (select enumname, enumvalue\n                        , max(enumvaluelabel) as enumvaluelabel\n                from ',pipeline().globalParameters.d365_dbName,'.','timextenderenumtable\n                where enumname = ''netcurrent''\n                group by enumname, enumvalue) tet1 on\n        ct1.paymmethod = tet1.enumvalue\nleft join (select enumname, enumvalue\n                        , max(enumvaluelabel) as enumvaluelabel\n                from ',pipeline().globalParameters.d365_dbName,'.','timextenderenumtable\n                where enumname = ''dxcmbintegrationtranstype''\n                group by enumname, enumvalue) tet2 on\n        ct1.dxcmbintegrationtranstype = tet2.enumvalue\nleft join (select enumname, enumvalue\n                        , max(enumvaluelabel) as enumvaluelabel\n                from ',pipeline().globalParameters.d365_dbName,'.','timextenderenumtable\n                where enumname = ''ledgertranstype''\n                group by enumname, enumvalue) tet3 on\n        ct1.transtype = tet3.enumvalue\nleft join (select dataareaid, ledgervoucher, invoiceaccount, invoicedate, invoiceid\n                        , salesid\n                        , modifieddatetime\n                from ',pipeline().globalParameters.d365_dbName,'.','custinvoicejour cij10\n                inner join (select recid\n                                        , row_number() over (partition by dataareaid, ledgervoucher, invoiceaccount, invoicedate, invoiceid order by modifieddatetime desc) as row_num\n                                from ',pipeline().globalParameters.d365_dbName,'.','custinvoicejour) cij11 on\n                        cij11.row_num = 1 and\n                        cij10.recid = cij11.recid) cij1 on\n        ct1.dataareaid = cij1.dataareaid and\n        ct1.voucher = cij1.ledgervoucher and\n        ct1.accountnum = cij1.invoiceaccount and\n        ct1.transdate = cij1.invoicedate and\n        ct1.invoice = cij1.invoiceid\nleft join (select ljt10.dataareaid, ljt10.custtransid\n                        , ljt10.journalnum\n                        , ljt10.modifieddatetime\n                from ',pipeline().globalParameters.d365_dbName,'.','ledgerjournaltrans ljt10\n                inner join (select recid\n                                        , row_number() over (partition by dataareaid, custtransid order by modifieddatetime desc) as row_num\n                                from ',pipeline().globalParameters.d365_dbName,'.','ledgerjournaltrans) ljt11 on\n                        ljt11.row_num = 1 and\n                        ljt10.recid = ljt11.recid\n                ) ljt1 on\n        ct1.dataareaid = ljt1.dataareaid and\n        ct1.recid = ljt1.custtransid\n        where\n(SELECT MAX(LastUpdateDate) FROM ( VALUES\n                    (ct1.modifieddatetime),\n    \t\t\t\t(isnull(cij1.modifieddatetime,''1950-01-01'')),\n                    (isnull(ljt1.modifieddatetime, ''1950-01-01''))) AS UpdateDate(LastUpdateDate))\n> ','''',variables('v_prv_max_upd_timestamp'),'''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "SnowflakeSink",
											"importSettings": {
												"type": "SnowflakeImportCopyCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "ls_blob_storage",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@pipeline().globalParameters.rootDir",
												"type": "Expression"
											},
											"enableCompression": true
										},
										"parallelCopies": 32,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "RECID",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "RECID",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "CASHDISCCODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CASHDISCCODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CURRENCYCODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CURRENCYCODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ACCOUNTNUM",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "ACCOUNTNUM",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "ORDERACCOUNT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "ORDERACCOUNT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "POSTINGPROFILE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "POSTINGPROFILE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DEFAULTDIMENSION",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "DEFAULTDIMENSION",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "DELIVERYMODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DELIVERYMODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DATAAREAID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DATAAREAID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PAYMMODE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "PAYMMODE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "REASONREFRECID",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "REASONREFRECID",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "APPROVER",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "APPROVER",
														"type": "Int64",
														"physicalType": "INT_64"
													}
												},
												{
													"source": {
														"name": "PAYMMETHOD",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "PAYMMETHOD",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "DXCMBINTEGRATIONTRANSTYPE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "DXCMBINTEGRATIONTRANSTYPE",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "TRANSTYPE",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TRANSTYPE",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "APPROVED",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "APPROVED",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "CANCELLEDPAYMENT",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CANCELLEDPAYMENT",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "PREPAYMENT",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "PREPAYMENT",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "CORRECT",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "CORRECT",
														"type": "Int32",
														"physicalType": "INT_32"
													}
												},
												{
													"source": {
														"name": "INVOICE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "INVOICE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CLOSED",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CLOSED",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "DOCUMENTDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DOCUMENTDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "DUEDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "DUEDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "LASTSETTLEDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "LASTSETTLEDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "TRANSDATE",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "TRANSDATE",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "DOCUMENTNUM",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "DOCUMENTNUM",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LASTSETTLEVOUCHER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LASTSETTLEVOUCHER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "PAYMREFERENCE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "PAYMREFERENCE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "EBCPURCHORDERFORMNUM",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "EBCPURCHORDERFORMNUM",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TXT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TXT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "VOUCHER",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "VOUCHER",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "AMOUNTCUR",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "AMOUNTCUR",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "AMOUNTMST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "AMOUNTMST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "SETTLEAMOUNTCUR",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "SETTLEAMOUNTCUR",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "SETTLEAMOUNTMST",
														"type": "Decimal",
														"physicalType": "decimal",
														"scale": 16,
														"precision": 32
													},
													"sink": {
														"name": "SETTLEAMOUNTMST",
														"type": "Decimal",
														"physicalType": "DECIMAL"
													}
												},
												{
													"source": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_NETCURRENT",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_NETCURRENT",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_LEDGERTRANSTYPE",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_LEDGERTRANSTYPE",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_SALESID",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_SALESID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CUSTINVOICEJOUR_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "LEDGERJOURNALTRANS_JOURNALNUM",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "LEDGERJOURNALTRANS_JOURNALNUM",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "LEDGERJOURNALTRANS_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "LEDGERJOURNALTRANS_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "LATEST_MODIFIEDDATETIME",
														"type": "DateTime",
														"physicalType": "INT_96"
													}
												},
												{
													"source": {
														"name": "HK_SOURCE_NAME",
														"type": "String"
													},
													"sink": {
														"name": "HK_SOURCE_NAME",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "HK_JOB_RUN_ID",
														"type": "String"
													},
													"sink": {
														"name": "HK_JOB_RUN_ID",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_fabric_wh",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_snowflake",
											"type": "DatasetReference",
											"parameters": {
												"p_tgt_table_name": {
													"value": "@pipeline().parameters.p_tgt_raw_table_nm",
													"type": "Expression"
												},
												"p_tgt_schema_name": {
													"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
													"type": "Expression"
												},
												"p_ls_DbName": {
													"value": "@pipeline().globalParameters.snow_rawDb",
													"type": "Expression"
												},
												"p_ls_Env": {
													"value": "@pipeline().globalParameters.environment",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "d365_raw_load_failure_notification",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "d365_to_raw",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('d365_to_raw').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@activity('d365_to_raw').Error['message']",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('d365_to_raw').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('d365_to_raw').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "d365_load_to_raw_fail",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "d365_raw_load_failure_notification",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('d365_to_raw').Error['message']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								}
							]
						}
					},
					{
						"name": "raw_load_failure_notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "switch_nala_retail_d365",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pp_adf_pipeline_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subscription": {
									"value": "@pipeline().globalParameters.subscriptionId",
									"type": "Expression"
								},
								"resourceGroup": {
									"value": "@pipeline().globalParameters.resourceGroup",
									"type": "Expression"
								},
								"runId": {
									"value": "@coalesce(pipeline().RunId, -1)",
									"type": "Expression"
								},
								"name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('switch_nala_retail_d365').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('switch_nala_retail_d365').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('switch_nala_retail_d365').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('switch_nala_retail_d365').Duration",
									"type": "Expression"
								},
								"teamWebhookUrl": {
									"value": "@pipeline().globalParameters.teamsWebhookUrl",
									"type": "Expression"
								},
								"notificationTime": {
									"value": "@utcNow()",
									"type": "Expression"
								},
								"taskName": {
									"value": "@pipeline().parameters.p_tgt_curate_table_nm",
									"type": "Expression"
								},
								"taskStepNumber": {
									"value": "@pipeline().parameters.p_src_code",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pipeline_execution_notification",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@if(equals(activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE'],'TRUE'),bool('TRUE'), bool('FALSE'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "pp_stored_procedure_failure_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@toUpper('failed')",
												"type": "Expression"
											},
											"message": {
												"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": {
												"value": "@pipeline().parameters.p_tgt_curate_table_nm",
												"type": "Expression"
											},
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "curate_load_failure",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "pp_stored_procedure_failure_notification",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "stored_procedure_success_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('raw_to_curate_sp_call').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@concat(pipeline().parameters.p_tgt_curate_table_nm, ' is successfully loaded')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": {
												"value": "@pipeline().parameters.p_tgt_curate_table_nm",
												"type": "Expression"
											},
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_src_table_nm": {
						"type": "string",
						"defaultValue": "CUSTTRANS"
					},
					"p_src_schema_nm": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"p_tgt_raw_table_nm": {
						"type": "string",
						"defaultValue": "CUSTTRANS"
					},
					"p_tgt_raw_schema_nm": {
						"type": "string",
						"defaultValue": "AX_NALA"
					},
					"p_tgt_curate_table_nm": {
						"type": "string",
						"defaultValue": "FACT_CUSTOMER_TRANSACTIONS"
					},
					"p_tgt_curate_schema_nm": {
						"type": "string",
						"defaultValue": "GLOBAL"
					},
					"p_src_nm": {
						"type": "string",
						"defaultValue": "AXNALA"
					},
					"p_temp_directory": {
						"type": "string",
						"defaultValue": "temp_files"
					},
					"p_temp_file_nm": {
						"type": "string",
						"defaultValue": "fact_customer_transaction_nala.parquet"
					},
					"p_src_code": {
						"type": "string",
						"defaultValue": "1"
					}
				},
				"variables": {
					"v_prv_max_upd_timestamp": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-12T08:41:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_load_fact_cust_transactions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pp_ax_inventtable_to_dim_item')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_dim_item",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "switch_nala_retail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_load_dim_item",
								"type": "DataFlowReference",
								"parameters": {
									"df_prev_max_timestamp": {
										"value": "'@{variables('v_prev_max_timestamp')}'",
										"type": "Expression"
									},
									"df_last_mod_tmstmp_sizegroupmapping": {
										"value": "'@{variables('v_last_mod_tmstmp_sizegroupmapping')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SrcInventTable": {
										"p_directory": {
											"value": "@pipeline().parameters.p_temp_directory",
											"type": "Expression"
										},
										"p_root_system": {
											"value": "@pipeline().globalParameters.rootDir",
											"type": "Expression"
										},
										"p_file_name": {
											"value": "@pipeline().parameters.p_temp_file_nm",
											"type": "Expression"
										}
									},
									"SrcInventHierarchy": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_tgt_raw_table_nm_2",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_rawDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									},
									"SrcSizeGroupMapping": {
										"p_directory": {
											"value": "@pipeline().parameters.p_src_directory",
											"type": "Expression"
										},
										"p_file_nm": {
											"value": "@pipeline().parameters.p_src_file_nm",
											"type": "Expression"
										},
										"p_root_system": {
											"value": "@pipeline().globalParameters.rootDir",
											"type": "Expression"
										}
									},
									"InsertInventTable": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_tgt_raw_table_nm",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_rawDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									},
									"InventtableHierarchy": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_tgt_raw_table_nm_2",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_rawDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IR-Snowflake-NALA",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "lkp_raw_last_modified_date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set_last_mod_tmstmp_SizeGroupMapping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"query": {
									"value": "@concat('select max(to_varchar(LATEST_MODIFIEDDATETIME::timestamp, ''','yyyy-mm-dd hh24:mi:ss',''')) as max_date from ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_rawDb,'.',pipeline().parameters.p_tgt_raw_schema_nm, '.', pipeline().parameters.p_tgt_raw_table_nm)",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference",
								"parameters": {
									"p_tgt_table_name": {
										"value": "@pipeline().parameters.p_tgt_curate_table_nm",
										"type": "Expression"
									},
									"p_tgt_schema_name": {
										"value": "@pipeline().parameters.p_tgt_curate_schema_nm",
										"type": "Expression"
									},
									"p_ls_DbName": {
										"value": "@pipeline().globalParameters.snow_rawDb",
										"type": "Expression"
									},
									"p_ls_Env": {
										"value": "@pipeline().globalParameters.environment",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "set_last_modified_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "lkp_raw_last_modified_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_prev_max_timestamp",
							"value": {
								"value": "@coalesce(activity('lkp_raw_last_modified_date').output.firstRow.max_date, '1950-01-01 00:00:00')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "raw_to_curate_sp_call",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "load_dim_item",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_snowflake",
							"type": "LinkedServiceReference",
							"parameters": {
								"ls_DbName": {
									"value": "@pipeline().globalParameters.snow_auditDb",
									"type": "Expression"
								},
								"ls_Env": {
									"value": "@pipeline().globalParameters.environment",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('CALL ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb,'.CONTROL.SP_TASK_INITIALIZE(','''',pipeline().RunId,'''',',','''',pipeline().globalParameters.environment,'''',',','''',pipeline().parameters.p_tgt_curate_table_nm,'''',',',pipeline().parameters.p_src_code,')')",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "load_dim_item_failure_notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "load_dim_item",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pp_adf_pipeline_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subscription": {
									"value": "@pipeline().globalParameters.subscriptionId",
									"type": "Expression"
								},
								"resourceGroup": {
									"value": "@pipeline().globalParameters.resourceGroup",
									"type": "Expression"
								},
								"runId": {
									"value": "@coalesce(pipeline().RunId, -1)",
									"type": "Expression"
								},
								"name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('load_dim_item').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('load_dim_item').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('load_dim_item').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('load_dim_item').Duration",
									"type": "Expression"
								},
								"teamWebhookUrl": {
									"value": "@pipeline().globalParameters.teamsWebhookUrl",
									"type": "Expression"
								},
								"notificationTime": {
									"value": "@utcNow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "raw_to_curate_storedprocedure_failure_notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pp_adf_pipeline_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subscription": {
									"value": "@pipeline().globalParameters.subscriptionId",
									"type": "Expression"
								},
								"resourceGroup": {
									"value": "@pipeline().globalParameters.resourceGroup",
									"type": "Expression"
								},
								"runId": {
									"value": "@coalesce(pipeline().RunId, -1)",
									"type": "Expression"
								},
								"name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('raw_to_curate_sp_call').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('raw_to_curate_sp_call').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('raw_to_curate_sp_call').Duration",
									"type": "Expression"
								},
								"teamWebhookUrl": {
									"value": "@pipeline().globalParameters.teamsWebhookUrl",
									"type": "Expression"
								},
								"notificationTime": {
									"value": "@utcNow()",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "get_last_modifieddatetime_SizeGroupMapping",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_delimited_csv",
								"type": "DatasetReference",
								"parameters": {
									"p_directory": {
										"value": "@pipeline().parameters.p_src_directory",
										"type": "Expression"
									},
									"p_file_nm": {
										"value": "@pipeline().parameters.p_src_file_nm",
										"type": "Expression"
									},
									"p_root_system": {
										"value": "@pipeline().globalParameters.rootDir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "set_last_mod_tmstmp_SizeGroupMapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get_last_modifieddatetime_SizeGroupMapping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_last_mod_tmstmp_sizegroupmapping",
							"value": {
								"value": "@coalesce(activity('get_last_modifieddatetime_SizeGroupMapping').output.lastModified,'1950-01-01 00:00:00')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "pipeline_execution_notification",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@if(equals(activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE'],'TRUE'),bool('TRUE'), bool('FALSE'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "pp_stored_procedure_failure_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@toUpper('failed')",
												"type": "Expression"
											},
											"message": {
												"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "curate_load_failure",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "pp_stored_procedure_failure_notification",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "stored_procedure_success_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('raw_to_curate_sp_call').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@concat(pipeline().parameters.p_tgt_curate_table_nm, ' is successfully loaded')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "switch_nala_retail",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "set_last_modified_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.p_src_code",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1",
									"activities": [
										{
											"name": "inventtable_to_adls_nala",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"additionalColumns": [
														{
															"name": "HK_JOB_RUN_ID",
															"value": {
																"value": "@coalesce(pipeline().RunId, -1)",
																"type": "Expression"
															}
														},
														{
															"name": "HK_SOURCE_NAME",
															"value": {
																"value": "@pipeline().parameters.p_src_nm",
																"type": "Expression"
															}
														}
													],
													"sqlReaderQuery": {
														"value": "Select \n       it1.DATAAREAID\n     , it1.ITEMID\n     , it1.PRODUCT\n     , it1.ABCVALUE\n     , it1.COSTGROUPID\n     , it1.DEFAULTDIMENSION\n     , it1.CREATEDDATETIME\n     , it1.MODIFIEDDATETIME\n     , da1.TIMEZONE                     as DATAAREA_TIMEZONE\n     , e1.PRODUCT                       as ECORESPRODUCTTRANSLATION_PRODUCT\n     , e1.NAME                          as ECORESPRODUCTTRANSLATION_NAME\n     , e1.MODIFIEDDATETIME              as ECORESPRODUCTTRANSLATION_MODIFIEDDATETIME\n     , bcg1.DATAAREAID                  as BOMCOSTGROUP_DATAAREAID\n     , bcg1.COSTGROUPID                 as BOMCOSTGROUP_COSTGROUPID\n     , bcg1.NAME                        as BOMCOSTGROUP_NAME\n     , bcg1.COSTGROUPBEHAVIOR           as BOMCOSTGROUP_COSTGROUPBEHAVIOR\n     , bcg1.COSTGROUPTYPE               as BOMCOSTGROUP_COSTGROUPTYPE\n     , bcg1.TYPEDEFAULT                 as BOMCOSTGROUP_TYPEDEFAULT\n     , E_CATEGORY                       as DEFAULTDIMENSION_E_CATEGORY\n     , E_CATEGORY_DESCRIPTION_PARENT    as DEFAULTDIMENSION_E_CATEGORY_DESCRIPTION_PARENT\n     , E_CATEGORY_DESCRIPTION           as DEFAULTDIMENSION_E_CATEGORY_DESCRIPTION\n     , F_FAMILY                         as DEFAULTDIMENSION_F_FAMILY\n     , F_FAMILY_DESCRIPTION             as DEFAULTDIMENSION_F_FAMILY_DESCRIPTION\n     , DEFAULTDIMENSION_MODIFIEDDATETIME\n     , tzi1.TIMEZONEID                  as TIMEZONEINFO_TIMEZONEID\n     , tzi1.STARTDATE                   as TIMEZONEINFO_STARTDATE\n     , tzi1.ENDDATE                     as TIMEZONEINFO_ENDDATE\n     , tzi1.TIMEBIAS                    as TIMEZONEINFO_TIMEBIAS\n     , itm1.MODULETYPE                  as INVENTTABLEMODULE_MODULETYPE\n     , itm1.DATAAREAID                  as INVENTTABLEMODULE_DATAAREAID\n     , itm1.ITEMID                      as INVENTTABLEMODULE_ITEMID\n     , itm1.UNITID                      as INVENTTABLEMODULE_UNITID\n     , uom1.RECID                       as UNITOFMEASURE_RECID\n     , uom1.SYMBOL                      as UNITOFMEASURE_SYMBOL\n     , uom1.MODIFIEDDATETIME            as UNITOFMEASURE_MODIFIEDDATETIME\n     , uomt1.UNITOFMEASURE              as UNITOFMEASURETRANSLATION_UNITOFMEASURE\n     , uomt1.DESCRIPTION                as UNITOFMEASURETRANSLATION_DESCRIPTION\n     , uomt1.MODIFIEDDATETIME           as UNITOFMEASURETRANSLATION_MODIFIEDDATETIME\n     , brand1.DISPLAYPRODUCTNUMBER      as TSIPHITEM_DISPLAYPRODUCTNUMBER\n     , brand1.BASEITEMID                as TSIPHITEM_BASEITEMID\n     , brand1.PRODSIZE                  as TSIPHITEM_PRODSIZE\n     , brand1.PGCID                     as TSIPHBASEITEM_PGCID\n     , brand1.BASEITEMDESCRIPTION       as TSIPHBASEITEM_BASEITEMDESCRIPTION\n     , brand1.DEFAULTFDNHIGH            as TSIPHBASEITEM_DEFAULTFDNHIGH\n     , brand1.DEFAULTFDNLOW             as TSIPHBASEITEM_DEFAULTFDNLOW\n     , brand1.DEFAULTFDNMED             as TSIPHBASEITEM_DEFAULTFDNMED\n     , brand1.PIECETYPEID               as TSIPHBASEITEM_PIECETYPEID\n     , brand1.PRICECOLLECTIONID         as TSIPHBASEITEM_PRICECOLLECTIONID\n     , brand1.PLEVELID                  as TSIPHGROUP_PLEVELID\n     , brand1.PGCDESC                   as TSIPHGROUP_PGCDESC\n     , brand1.TPG_ISACTIVE              as TSIPHGROUP_ISACTIVE\n     , brand1.EFFECTIVEDATE             as TSIPHGROUP_EFFECTIVEDATE\n     , brand1.EXPIRATIONDATE            as TSIPHGROUP_EXPIRATIONDATE\n     , brand1.MSTRPGCID                 as TSIPHGROUP_MSTRPGCID\n     , brand1.COMFORTID                 as TSIPHGROUP_COMFORTID\n     , brand1.CONSTRUCTID               as TSIPHGROUP_CONSTRUCTID\n     , brand1.LINELAUNCHID              as TSIPHLEVEL_LINELAUNCHID\n     , brand1.YOYID                     as TSIPHLEVEL_YOYID\n     , brand1.PLEVELDESC                as TSIPHLEVEL_PLEVELDESC\n     , brand1.TPL_ISACTIVE              as TSIPHLEVEL_ISACTIVE\n     , brand1.ISSPECIALTY               as TSIPHLEVEL_ISSPECIALTY\n     , brand1.TYPEID                    as TSIPHYEAROVERYEAR_TYPEID\n     , brand1.PRICEBANDID               as TSIPHYEAROVERYEAR_PRICEBANDID\n     , brand1.YOYDESC                   as TSIPHYEAROVERYEAR_YOYDESC\n     , brand1.STYLEID                   as TSIPHTYPE_STYLEID\n     , brand1.TECHNOLOGYID              as TSIPHTYPE_TECHNOLOGYID\n     , brand1.TYPEDESC                  as TSIPHTYPE_TYPEDESC\n     , brand1.BRANDID                   as TSIPHSTYLE_BRANDID\n     , brand1.STYLEDESC                 as TSIPHSTYLE_STYLEDESC\n     , brand1.MBRANDID                  as TSIPHBRAND_MBRANDID\n     , brand1.BRANDDESC                 as TSIPHBRAND_BRANDDESC\n     , brand1.MBRANDDESC                as TSIPHMASTERBRAND_MBRANDDESC\n     , brand1.TECHNOLOGYDESC            as TSIPHTECHNOLOGY_TECHNOLOGYDESC\n     , brand1.PRICEBAND                 as TSIPHPRICEBAND_PRICEBAND\n     , brand1.LINELAUNCHDESC            as TSIPHLINELAUNCH_LINELAUNCHDESC\n     , brand1.COMFORTDESC               as TSIPHCOMFORT_COMFORTDESC\n     , brand1.CONSTRUCTDESC             as TSIPHCONSTRUCTION_CONSTRUCTDESC\n     , brand1.PRICECOLLECTIONDESC       as TSIPHPRICECOLLECTION_PRICECOLLECTIONDESC\n     , brand1.SIZEID                    as TPSSIZE_SIZEID\n     , brand1.DIMENSIONS                as TPSSIZE_DIMENSIONS\n     , brand1.EBCPANELLENGTH            as TPSSIZE_EBCPANELLENGTH\n     , brand1.EBCPANELWIDTH             as TPSSIZE_EBCPANELWIDTH\n     , brand1.ACTIVE                    as TPSSIZE_ACTIVE\n     , (\n           SELECT MAX(LastUpdateDate)\n            FROM\n            (\n                VALUES\n                    (\n                        it1.MODIFIEDDATETIME\n                    )\n                  , (\n                        isnull(   e1.MODIFIEDDATETIME\n                                , '1950-01-01'\n                              )\n                    )\n                  , (\n                        isnull(   uom1.MODIFIEDDATETIME\n                                , '1950-01-01'\n                              )\n                    )\n                  , (\n                        isnull(   uomt1.MODIFIEDDATETIME\n                                , '1950-01-01'\n                              )\n                    )\n            ) AS UpdateDate ( LastUpdateDate )\n       )                                AS LAST_MODIFIEDDATETIME\n     , convert(   varchar (max)\n                , brand1.ITEM_HIERARCHY_HASH_KEY\n                , 2\n              )                         as ITEM_HIERARCHY_HASH_KEY\n     , row_number() over ( partition by brand1.DISPLAYPRODUCTNUMBER\n                                      , brand1.BASEITEMID\n                                      , brand1.PRODSIZE\n                                      , brand1.PGCID\n                                      , brand1.BASEITEMDESCRIPTION\n                                      , brand1.DEFAULTFDNHIGH\n                                      , brand1.DEFAULTFDNLOW\n                                      , brand1.DEFAULTFDNMED\n                                      , brand1.PIECETYPEID\n                                      , brand1.PRICECOLLECTIONID\n                                      , brand1.PLEVELID\n                                      , brand1.PGCDESC\n                                      , brand1.TPG_ISACTIVE\n                                      , brand1.EFFECTIVEDATE\n                                      , brand1.EXPIRATIONDATE\n                                      , brand1.MSTRPGCID\n                                      , brand1.COMFORTID\n                                      , brand1.CONSTRUCTID\n                                      , brand1.LINELAUNCHID\n                                      , brand1.YOYID\n                                      , brand1.PLEVELDESC\n                                      , brand1.TPL_ISACTIVE\n                                      , brand1.ISSPECIALTY\n                                      , brand1.TYPEID\n                                      , brand1.PRICEBANDID\n                                      , brand1.YOYDESC\n                                      , brand1.STYLEID\n                                      , brand1.TECHNOLOGYID\n                                      , brand1.TYPEDESC\n                                      , brand1.BRANDID\n                                      , brand1.STYLEDESC\n                                      , brand1.MBRANDID\n                                      , brand1.BRANDDESC\n                                      , brand1.MBRANDDESC\n                                      , brand1.TECHNOLOGYDESC\n                                      , brand1.PRICEBAND\n                                      , brand1.LINELAUNCHDESC\n                                      , brand1.COMFORTDESC\n                                      , brand1.CONSTRUCTDESC\n                                      , brand1.PRICECOLLECTIONDESC\n                                      , brand1.SIZEID\n                                      , brand1.DIMENSIONS\n                                      , brand1.EBCPANELLENGTH\n                                      , brand1.EBCPANELWIDTH\n                                      , brand1.ACTIVE\n                                      , brand1.ITEM_HIERARCHY_HASH_KEY\n                           order by\n                               (\n                                   SELECT MAX(LastUpdateDate)\n                                    FROM\n                                    (\n                                        VALUES\n                                            (\n                                                it1.MODIFIEDDATETIME\n                                            )\n                                          , (\n                                                isnull(   e1.MODIFIEDDATETIME\n                                                        , '1950-01-01'\n                                                      )\n                                            )\n                                          , (\n                                                isnull(   uom1.MODIFIEDDATETIME\n                                                        , '1950-01-01'\n                                                      )\n                                            )\n                                          , (\n                                                isnull(   uomt1.MODIFIEDDATETIME\n                                                        , '1950-01-01'\n                                                      )\n                                            )\n                                    ) AS UpdateDate ( LastUpdateDate )\n                               ) DESC\n                         )              as BRAND_RANK\n     , iig1.itemgroupid                 As ITEMGROUPID\n\t , iig1.itemgroupname\t\t\t\tAs ITEMGROUPNAME\n From\n    dbo.INVENTTABLE            it1\n     left join\n     (\n         Select iigi.ITEMGROUPID As itemgroupid\n              , iig.Name As itemgroupname\n\t\t\t  , iigi.itemid\n\t\t\t  , iigi.ITEMDATAAREAID\n          FROM\n             dbo.INVENTITEMGROUP          iig\n              Inner Join\n                  dbo.INVENTITEMGROUPITEM iigi\n              On\n                  iig.ITEMGROUPID = iigi.ITEMGROUPID\n                  And iig.DATAAREAID = iigi.ITEMGROUPDATAAREAID\n     )                         iig1\n     ON\n         it1.ITEMID = iig1.ITEMID\n         and it1.DATAAREAID = iig1.ITEMDATAAREAID\n     left join\n     (\n         select d10.ID\n              , d10.TIMEZONE\n          from\n             dbo.DATAAREA                                                          d10\n              inner join\n              ( select ID, max(RECID) as MAX_RECID from dbo.DATAAREA group by ID ) d11\n              on\n                  d10.ID = d11.ID\n                  and d10.RECID = d11.MAX_RECID\n     )                         da1\n     on\n         it1.DATAAREAID = da1.ID\n     left join\n     (\n         select e10.PRODUCT\n              , e10.NAME\n              , e10.MODIFIEDDATETIME\n          from\n             dbo.ECORESPRODUCTTRANSLATION e10\n              inner join\n              (\n                  select PRODUCT\n                       , max(MODIFIEDDATETIME) as MAX_MODIFIEDDATETIME\n                   from\n                      dbo.ECORESPRODUCTTRANSLATION\n                   where\n                      LANGUAGEID = 'en-us'\n                   group by\n                      PRODUCT\n              )                           e11\n              on\n                  e10.PRODUCT = e11.PRODUCT\n                  and e10.MODIFIEDDATETIME = e11.MAX_MODIFIEDDATETIME\n          where\n             LANGUAGEID = 'en-us'\n     )                         e1\n     on\n         it1.PRODUCT = e1.PRODUCT\n     left join\n         dbo.BOMCOSTGROUP      bcg1\n     on\n         it1.DATAAREAID = bcg1.DATAAREAID\n         and it1.COSTGROUPID = bcg1.COSTGROUPID\n     left join\n     (\n         select distinct\n                it1.DEFAULTDIMENSION\n              , max(   case\n                           when da1.NAME = 'E_Category'\n                               then davsi1.DISPLAYVALUE\n                           else null\n                       end\n                   ) over ( partition by it1.DEFAULTDIMENSION ) as E_CATEGORY\n              , max(   case\n                           when da1.NAME = 'F_Family'\n                               then davsi1.DISPLAYVALUE\n                           else null\n                       end\n                   ) over ( partition by it1.DEFAULTDIMENSION ) as F_FAMILY\n              , max(   case\n                           when da1.NAME = 'E_Category'\n                                and davsi1.DISPLAYVALUE in\n                              (\n                                  '10'\n                                , '11'\n                                , '20'\n                                , '50'\n                                , '60'\n                              )\n                               then desc1.DESCRIPTION\n                           when da1.NAME = 'E_Category'\n                               then 'Other'\n                           else null\n                       end\n                   ) over ( partition by it1.DEFAULTDIMENSION ) as E_CATEGORY_DESCRIPTION_PARENT\n              -- use MIN because you want the first iteration of the character set\n              , min(   case\n                           when da1.NAME = 'E_Category'\n                               then desc1.DESCRIPTION\n                           else null\n                       end\n                   ) over ( partition by it1.DEFAULTDIMENSION ) as E_CATEGORY_DESCRIPTION\n              , min(   case\n                           when da1.NAME = 'F_Family'\n                               then desc1.DESCRIPTION\n                           else null\n                       end\n                   ) over ( partition by it1.DEFAULTDIMENSION ) as F_FAMILY_DESCRIPTION\n              , max((\n                        select max(i)\n                         from\n                         (\n                             values\n                                 (\n                                     davsi1.MODIFIEDDATETIME\n                                 )\n                               , (\n                                     dav1.MODIFIEDDATETIME\n                                 )\n                               , (\n                                     da1.MODIFIEDDATETIME\n                                 )\n                               , (\n                                     desc1.DESC_MODIFIEDDATETIME\n                                 )\n                         ) AS T ( i )\n                    )\n                   ) over ( partition by it1.DEFAULTDIMENSION ) as DEFAULTDIMENSION_MODIFIEDDATETIME\n          from\n          ( select distinct DEFAULTDIMENSION from dbo.INVENTTABLE ) it1\n              left join\n                  dbo.DIMENSIONATTRIBUTEVALUESETITEM                davsi1\n              on\n                  it1.DEFAULTDIMENSION = davsi1.DIMENSIONATTRIBUTEVALUESET\n              left join\n                  dbo.DIMENSIONATTRIBUTEVALUE                       dav1\n              on\n                  davsi1.DIMENSIONATTRIBUTEVALUE = dav1.RECID\n              left join\n                  dbo.DIMENSIONATTRIBUTE                            da1\n              on\n                  dav1.DIMENSIONATTRIBUTE = da1.RECID\n              left join\n              (\n                  select dft1.VALUE\n                       , da2.NAME\n                       , dft1.DESCRIPTION\n                       , (\n                             select max(i)\n                              from\n                              (\n                                  values\n                                      (\n                                          dft1.MODIFIEDDATETIME\n                                      )\n                                    , (\n                                          dadc1.MODIFIEDDATETIME\n                                      )\n                                    , (\n                                          da2.MODIFIEDDATETIME\n                                      )\n                              ) AS T ( i )\n                         ) as DESC_MODIFIEDDATETIME\n                   from\n                      dbo.DIMENSIONFINANCIALTAG              dft1\n                       left join\n                           dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1\n                       on\n                           dft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n                       left join\n                           dbo.DIMENSIONATTRIBUTE            da2\n                       on\n                           dadc1.DIMENSIONATTRIBUTE = da2.RECID\n              )                                                     desc1\n              on\n                  davsi1.DISPLAYVALUE = desc1.VALUE\n                  and da1.NAME = desc1.NAME\n     )                         def1\n     on\n         it1.DEFAULTDIMENSION = def1.DEFAULTDIMENSION\n     left join\n         dbo.TIMEZONEINFO      tzi1\n     on\n         da1.TIMEZONE = tzi1.TIMEZONEID\n         and it1.CREATEDDATETIME >= tzi1.STARTDATE\n         and it1.CREATEDDATETIME < tzi1.ENDDATE\n     left join\n         dbo.INVENTTABLEMODULE itm1\n     on\n         itm1.MODULETYPE = 1\n         and it1.DATAAREAID = itm1.DATAAREAID\n         and it1.ITEMID = itm1.ITEMID\n     left join\n     (\n         select uom10.RECID\n              , uom10.SYMBOL\n              , uom10.MODIFIEDDATETIME\n          from\n             dbo.UNITOFMEASURE uom10\n              inner join\n              (\n                  select SYMBOL\n                       , max(MODIFIEDDATETIME) as MAX_MODIFIEDDATETIME\n                   from\n                      dbo.UNITOFMEASURE\n                   group by\n                      SYMBOL\n              )                uom11\n              on\n                  uom10.SYMBOL = uom11.SYMBOL\n                  and uom10.MODIFIEDDATETIME = uom11.MAX_MODIFIEDDATETIME\n     )                         uom1\n     on\n         itm1.UNITID = uom1.SYMBOL\n     left join\n     (\n         select uomt10.UNITOFMEASURE\n              , uomt10.DESCRIPTION\n              , uomt10.MODIFIEDDATETIME\n          from\n             dbo.UNITOFMEASURETRANSLATION uomt10\n              inner join\n              (\n                  select UNITOFMEASURE\n                       , max(MODIFIEDDATETIME) as MAX_MODIFIEDDATETIME\n                   from\n                      dbo.UNITOFMEASURETRANSLATION\n                   where\n                      LANGUAGEID = 'en-us'\n                   group by\n                      UNITOFMEASURE\n              )                           uomt11\n              on\n                  uomt10.UNITOFMEASURE = uomt11.UNITOFMEASURE\n                  and uomt10.MODIFIEDDATETIME = uomt11.MAX_MODIFIEDDATETIME\n          where\n             uomt10.LANGUAGEID = 'en-us'\n     )                         uomt1\n     on\n         uom1.RECID = uomt1.UNITOFMEASURE\n     left join\n     (\n         select distinct\n                tpi1.DISPLAYPRODUCTNUMBER\n              , tpi1.BASEITEMID\n              , tpi1.PRODSIZE\n              , tpbi1.PGCID\n              , tpbi1.BASEITEMDESCRIPTION\n              , tpbi1.DEFAULTFDNHIGH\n              , tpbi1.DEFAULTFDNLOW\n              , tpbi1.DEFAULTFDNMED\n              , tpbi1.PIECETYPEID\n              , tpbi1.PRICECOLLECTIONID\n              , tpg1.PLEVELID\n              , tpg1.PGCDESC\n              , tpg1.ISACTIVE as TPG_ISACTIVE\n              , tpg1.EFFECTIVEDATE\n              , tpg1.EXPIRATIONDATE\n              , tpg1.MSTRPGCID\n              , tpg1.COMFORTID\n              , tpg1.CONSTRUCTID\n              , tpl1.LINELAUNCHID\n              , tpl1.YOYID\n              , tpl1.PLEVELDESC\n              , tpl1.ISACTIVE as TPL_ISACTIVE\n              , tpl1.ISSPECIALTY\n              , tpyoy1.TYPEID\n              , tpyoy1.PRICEBANDID\n              , tpyoy1.YOYDESC\n              , tpt1.STYLEID\n              , tpt1.TECHNOLOGYID\n              , tpt1.TYPEDESC\n              , tps1.BRANDID\n              , tps1.STYLEDESC\n              , tpb1.MBRANDID\n              , tpb1.BRANDDESC\n              , tpmb1.MBRANDDESC\n              , tptech1.TECHNOLOGYDESC\n              , tppb1.PRICEBAND\n              , tpll1.LINELAUNCHDESC\n              , tpc1.COMFORTDESC\n              , tpcon1.CONSTRUCTDESC\n              , tppc1.PRICECOLLECTIONDESC\n              , ts1.SIZEID\n              , ts1.DIMENSIONS\n              , ts1.EBCPANELLENGTH\n              , ts1.EBCPANELWIDTH\n              , ts1.ACTIVE\n              , hashbytes(   'SHA2_256'\n                           , concat(   tpi1.DISPLAYPRODUCTNUMBER\n                                     , tpi1.BASEITEMID\n                                     , tpi1.PRODSIZE\n                                     , tpbi1.PGCID\n                                     , tpbi1.BASEITEMDESCRIPTION\n                                     , tpbi1.DEFAULTFDNHIGH\n                                     , tpbi1.DEFAULTFDNLOW\n                                     , tpbi1.DEFAULTFDNMED\n                                     , tpbi1.PIECETYPEID\n                                     , tpbi1.PRICECOLLECTIONID\n                                     , tpg1.PLEVELID\n                                     , tpg1.PGCDESC\n                                     , tpg1.ISACTIVE\n                                     , tpg1.EFFECTIVEDATE\n                                     , tpg1.EXPIRATIONDATE\n                                     , tpg1.MSTRPGCID\n                                     , tpg1.COMFORTID\n                                     , tpg1.CONSTRUCTID\n                                     , tpl1.LINELAUNCHID\n                                     , tpl1.YOYID\n                                     , tpl1.PLEVELDESC\n                                     , tpl1.ISACTIVE\n                                     , tpl1.ISSPECIALTY\n                                     , tpyoy1.TYPEID\n                                     , tpyoy1.PRICEBANDID\n                                     , tpyoy1.YOYDESC\n                                     , tpt1.STYLEID\n                                     , tpt1.TECHNOLOGYID\n                                     , tpt1.TYPEDESC\n                                     , tps1.BRANDID\n                                     , tps1.STYLEDESC\n                                     , tpb1.MBRANDID\n                                     , tpb1.BRANDDESC\n                                     , tpmb1.MBRANDDESC\n                                     , tptech1.TECHNOLOGYDESC\n                                     , tppb1.PRICEBAND\n                                     , tpll1.LINELAUNCHDESC\n                                     , tpc1.COMFORTDESC\n                                     , tpcon1.CONSTRUCTDESC\n                                     , tppc1.PRICECOLLECTIONDESC\n                                     , ts1.SIZEID\n                                     , ts1.DIMENSIONS\n                                     , ts1.EBCPANELLENGTH\n                                     , ts1.EBCPANELWIDTH\n                                     , ts1.ACTIVE\n                                   )\n                         )    as ITEM_HIERARCHY_HASH_KEY\n          from\n             dbo.TSIPHITEM                 tpi1\n              left join\n                  dbo.TSIPHBASEITEM        tpbi1\n              on\n                  tpi1.BASEITEMID = tpbi1.BASEITEMID\n              left join\n                  dbo.TSIPHGROUP           tpg1\n              on\n                  tpbi1.PGCID = tpg1.PGCID\n              left join\n                  dbo.TSIPHLEVEL           tpl1\n              on\n                  tpg1.PLEVELID = tpl1.PLEVELID\n              left join\n                  dbo.TSIPHYEAROVERYEAR    tpyoy1\n              on\n                  tpl1.YOYID = tpyoy1.YOYID\n              left join\n                  dbo.TSIPHTYPE            tpt1\n              on\n                  tpyoy1.TYPEID = tpt1.TYPEID\n              left join\n                  dbo.TSIPHSTYLE           tps1\n              on\n                  tpt1.STYLEID = tps1.STYLEID\n              left join\n                  dbo.TSIPHBRAND           tpb1\n              on\n                  tps1.BRANDID = tpb1.BRANDID\n              left join\n                  dbo.TSIPHMASTERBRAND     tpmb1\n              on\n                  tpb1.MBRANDID = tpmb1.MBRANDID\n              left join\n                  dbo.TSIPHTECHNOLOGY      tptech1\n              on\n                  tpt1.TECHNOLOGYID = tptech1.TECHNOLOGYID\n              left join\n                  dbo.TSIPHPRICEBAND       tppb1\n              on\n                  tpyoy1.PRICEBANDID = tppb1.PRICEBANDID\n              left join\n                  dbo.TSIPHLINELAUNCH      tpll1\n              on\n                  tpl1.LINELAUNCHID = tpll1.LINELAUNCHID\n              left join\n                  dbo.TSIPHCOMFORT         tpc1\n              on\n                  tpg1.COMFORTID = tpc1.COMFORTID\n              left join\n                  dbo.TSIPHCONSTRUCTION    tpcon1\n              on\n                  tpg1.CONSTRUCTID = tpcon1.CONSTRUCTID\n              left join\n                  dbo.TSIPHPRICECOLLECTION tppc1\n              on\n                  tpbi1.PRICECOLLECTIONID = tppc1.PRICECOLLECTIONID\n              left join\n                  dbo.TPSSIZE              ts1\n              on\n                  tpi1.PRODSIZE = ts1.SIZECODE\n     )                         brand1\n     on\n         it1.ITEMID = brand1.DISPLAYPRODUCTNUMBER\n Where\n    it1.dataareaid <> '761'",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "ITEMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ITEMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PRODUCT",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "PRODUCT",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "ABCVALUE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "ABCVALUE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "COSTGROUPID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "COSTGROUPID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "CREATEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CREATEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DATAAREA_TIMEZONE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "DATAAREA_TIMEZONE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "ECORESPRODUCTTRANSLATION_PRODUCT",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "ECORESPRODUCTTRANSLATION_PRODUCT",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "ECORESPRODUCTTRANSLATION_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ECORESPRODUCTTRANSLATION_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "ECORESPRODUCTTRANSLATION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "ECORESPRODUCTTRANSLATION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "BOMCOSTGROUP_DATAAREAID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "BOMCOSTGROUP_DATAAREAID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "BOMCOSTGROUP_COSTGROUPID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "BOMCOSTGROUP_COSTGROUPID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "BOMCOSTGROUP_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "BOMCOSTGROUP_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "BOMCOSTGROUP_COSTGROUPBEHAVIOR",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "BOMCOSTGROUP_COSTGROUPBEHAVIOR",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "BOMCOSTGROUP_COSTGROUPTYPE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "BOMCOSTGROUP_COSTGROUPTYPE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "BOMCOSTGROUP_TYPEDEFAULT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "BOMCOSTGROUP_TYPEDEFAULT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_E_CATEGORY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_E_CATEGORY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_E_CATEGORY_DESCRIPTION_PARENT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_E_CATEGORY_DESCRIPTION_PARENT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_E_CATEGORY_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_E_CATEGORY_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_F_FAMILY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_F_FAMILY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_F_FAMILY_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_F_FAMILY_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TIMEZONEINFO_TIMEZONEID",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TIMEZONEINFO_TIMEZONEID",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "TIMEZONEINFO_STARTDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "TIMEZONEINFO_STARTDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TIMEZONEINFO_ENDDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "TIMEZONEINFO_ENDDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TIMEZONEINFO_TIMEBIAS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TIMEZONEINFO_TIMEBIAS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "INVENTTABLEMODULE_MODULETYPE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "INVENTTABLEMODULE_MODULETYPE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "INVENTTABLEMODULE_DATAAREAID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTTABLEMODULE_DATAAREAID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVENTTABLEMODULE_ITEMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTTABLEMODULE_ITEMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVENTTABLEMODULE_UNITID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTTABLEMODULE_UNITID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "UNITOFMEASURE_RECID",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "UNITOFMEASURE_RECID",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "UNITOFMEASURE_SYMBOL",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "UNITOFMEASURE_SYMBOL",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "UNITOFMEASURE_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "UNITOFMEASURE_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "UNITOFMEASURETRANSLATION_UNITOFMEASURE",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "UNITOFMEASURETRANSLATION_UNITOFMEASURE",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "UNITOFMEASURETRANSLATION_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "UNITOFMEASURETRANSLATION_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "UNITOFMEASURETRANSLATION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "UNITOFMEASURETRANSLATION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TSIPHITEM_DISPLAYPRODUCTNUMBER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHITEM_DISPLAYPRODUCTNUMBER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHITEM_BASEITEMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHITEM_BASEITEMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHITEM_PRODSIZE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHITEM_PRODSIZE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBASEITEM_PGCID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBASEITEM_PGCID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBASEITEM_BASEITEMDESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBASEITEM_BASEITEMDESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBASEITEM_DEFAULTFDNHIGH",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBASEITEM_DEFAULTFDNHIGH",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBASEITEM_DEFAULTFDNLOW",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBASEITEM_DEFAULTFDNLOW",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBASEITEM_DEFAULTFDNMED",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBASEITEM_DEFAULTFDNMED",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBASEITEM_PIECETYPEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBASEITEM_PIECETYPEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBASEITEM_PRICECOLLECTIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBASEITEM_PRICECOLLECTIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHGROUP_PLEVELID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHGROUP_PLEVELID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHGROUP_PGCDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHGROUP_PGCDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHGROUP_ISACTIVE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TSIPHGROUP_ISACTIVE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "TSIPHGROUP_EFFECTIVEDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "TSIPHGROUP_EFFECTIVEDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TSIPHGROUP_EXPIRATIONDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "TSIPHGROUP_EXPIRATIONDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TSIPHGROUP_MSTRPGCID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHGROUP_MSTRPGCID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHGROUP_COMFORTID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHGROUP_COMFORTID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHGROUP_CONSTRUCTID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHGROUP_CONSTRUCTID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHLEVEL_LINELAUNCHID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHLEVEL_LINELAUNCHID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHLEVEL_YOYID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHLEVEL_YOYID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHLEVEL_PLEVELDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHLEVEL_PLEVELDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHLEVEL_ISACTIVE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TSIPHLEVEL_ISACTIVE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "TSIPHLEVEL_ISSPECIALTY",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TSIPHLEVEL_ISSPECIALTY",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "TSIPHYEAROVERYEAR_TYPEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHYEAROVERYEAR_TYPEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHYEAROVERYEAR_PRICEBANDID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHYEAROVERYEAR_PRICEBANDID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHYEAROVERYEAR_YOYDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHYEAROVERYEAR_YOYDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHTYPE_STYLEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHTYPE_STYLEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHTYPE_TECHNOLOGYID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHTYPE_TECHNOLOGYID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHTYPE_TYPEDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHTYPE_TYPEDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHSTYLE_BRANDID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHSTYLE_BRANDID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHSTYLE_STYLEDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHSTYLE_STYLEDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBRAND_MBRANDID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBRAND_MBRANDID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBRAND_BRANDDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBRAND_BRANDDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHMASTERBRAND_MBRANDDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHMASTERBRAND_MBRANDDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHTECHNOLOGY_TECHNOLOGYDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHTECHNOLOGY_TECHNOLOGYDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHPRICEBAND_PRICEBAND",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHPRICEBAND_PRICEBAND",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHLINELAUNCH_LINELAUNCHDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHLINELAUNCH_LINELAUNCHDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHCOMFORT_COMFORTDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHCOMFORT_COMFORTDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHCONSTRUCTION_CONSTRUCTDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHCONSTRUCTION_CONSTRUCTDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHPRICECOLLECTION_PRICECOLLECTIONDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHPRICECOLLECTION_PRICECOLLECTIONDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TPSSIZE_SIZEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TPSSIZE_SIZEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TPSSIZE_DIMENSIONS",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TPSSIZE_DIMENSIONS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TPSSIZE_EBCPANELLENGTH",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "TPSSIZE_EBCPANELLENGTH",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "TPSSIZE_EBCPANELWIDTH",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "TPSSIZE_EBCPANELWIDTH",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "TPSSIZE_ACTIVE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TPSSIZE_ACTIVE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "ITEMGROUPID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ITEMGROUPID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "ITEMGROUPNAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ITEMGROUPNAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LAST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "LAST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "ITEM_HIERARCHY_HASH_KEY",
																"type": "String",
																"physicalType": "varchar"
															},
															"sink": {
																"name": "ITEM_HIERARCHY_HASH_KEY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "BRAND_RANK",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "BRAND_RANK",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															},
															"sink": {
																"name": "HK_JOB_RUN_ID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "HK_SOURCE_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														}
													],
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sql_server",
													"type": "DatasetReference",
													"parameters": {
														"p_src_table_name": {
															"value": "@pipeline().parameters.p_src_table_nm",
															"type": "Expression"
														},
														"p_src_schema_name": {
															"value": "@pipeline().parameters.p_src_schema_nm",
															"type": "Expression"
														},
														"p_ls_serverName": {
															"value": "@pipeline().globalParameters.nala_sql_serverName",
															"type": "Expression"
														},
														"p_ls_dbName": {
															"value": "@pipeline().globalParameters.nala_sql_dbName",
															"type": "Expression"
														},
														"p_ls_sqlUsername": {
															"value": "@pipeline().globalParameters.sql_userName",
															"type": "Expression"
														},
														"p_ls_sqlPassword": {
															"value": "@pipeline().globalParameters.sql_password",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_parquet",
													"type": "DatasetReference",
													"parameters": {
														"p_directory": {
															"value": "@pipeline().parameters.p_temp_directory",
															"type": "Expression"
														},
														"p_root_system": {
															"value": "@pipeline().globalParameters.rootDir",
															"type": "Expression"
														},
														"p_file_name": {
															"value": "@pipeline().parameters.p_temp_file_nm",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "nala_raw_load_failure_notification",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "inventtable_to_adls_nala",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('inventtable_to_adls_nala').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@replace(replace(replace(activity('inventtable_to_adls_nala').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('inventtable_to_adls_nala').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('inventtable_to_adls_nala').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "sql_nala_load_to_raw_fail",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "nala_raw_load_failure_notification",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": {
													"value": "@activity('inventtable_to_adls_nala').Error['message']",
													"type": "Expression"
												},
												"errorCode": "500"
											}
										}
									]
								},
								{
									"value": "2",
									"activities": [
										{
											"name": "inventtable_to_adls_retail",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"additionalColumns": [
														{
															"name": "HK_JOB_RUN_ID",
															"value": {
																"value": "@coalesce(pipeline().RunId, -1)",
																"type": "Expression"
															}
														},
														{
															"name": "HK_SOURCE_NAME",
															"value": {
																"value": "@pipeline().parameters.p_src_nm",
																"type": "Expression"
															}
														}
													],
													"sqlReaderQuery": {
														"value": "select\nit1.DATAAREAID\n,it1.ITEMID\n,it1.PRODUCT\n,it1.ABCVALUE\n,it1.COSTGROUPID\n,it1.DEFAULTDIMENSION\n,it1.CREATEDDATETIME\n,it1.MODIFIEDDATETIME\n,da1.TIMEZONE as DATAAREA_TIMEZONE\n,e1.PRODUCT as ECORESPRODUCTTRANSLATION_PRODUCT\n,e1.NAME as ECORESPRODUCTTRANSLATION_NAME\n,e1.MODIFIEDDATETIME as ECORESPRODUCTTRANSLATION_MODIFIEDDATETIME\n,bcg1.DATAAREAID as BOMCOSTGROUP_DATAAREAID\n,bcg1.COSTGROUPID as BOMCOSTGROUP_COSTGROUPID\n,bcg1.NAME as BOMCOSTGROUP_NAME\n,bcg1.COSTGROUPBEHAVIOR as BOMCOSTGROUP_COSTGROUPBEHAVIOR\n,bcg1.COSTGROUPTYPE as BOMCOSTGROUP_COSTGROUPTYPE\n,bcg1.TYPEDEFAULT as BOMCOSTGROUP_TYPEDEFAULT\n,E_CATEGORY as DEFAULTDIMENSION_E_CATEGORY\n,E_CATEGORY_DESCRIPTION_PARENT as DEFAULTDIMENSION_E_CATEGORY_DESCRIPTION_PARENT\n,E_CATEGORY_DESCRIPTION as DEFAULTDIMENSION_E_CATEGORY_DESCRIPTION\n,F_FAMILY as DEFAULTDIMENSION_F_FAMILY\n,F_FAMILY_DESCRIPTION as DEFAULTDIMENSION_F_FAMILY_DESCRIPTION\n,DEFAULTDIMENSION_MODIFIEDDATETIME\n,tzi1.TIMEZONEID as TIMEZONEINFO_TIMEZONEID\n,tzi1.STARTDATE as TIMEZONEINFO_STARTDATE\n,tzi1.ENDDATE as TIMEZONEINFO_ENDDATE\n,tzi1.TIMEBIAS as TIMEZONEINFO_TIMEBIAS\n,itm1.MODULETYPE as INVENTTABLEMODULE_MODULETYPE\n,itm1.DATAAREAID as INVENTTABLEMODULE_DATAAREAID\n,itm1.ITEMID as INVENTTABLEMODULE_ITEMID\n,itm1.UNITID as INVENTTABLEMODULE_UNITID\n,uom1.RECID as UNITOFMEASURE_RECID\n,uom1.SYMBOL as UNITOFMEASURE_SYMBOL\n,uom1.MODIFIEDDATETIME as UNITOFMEASURE_MODIFIEDDATETIME\n,uomt1.UNITOFMEASURE as UNITOFMEASURETRANSLATION_UNITOFMEASURE\n,uomt1.DESCRIPTION as UNITOFMEASURETRANSLATION_DESCRIPTION\n,uomt1.MODIFIEDDATETIME as UNITOFMEASURETRANSLATION_MODIFIEDDATETIME\n,null as TSIPHITEM_DISPLAYPRODUCTNUMBER\n,null as TSIPHITEM_BASEITEMID\n,null as TSIPHITEM_PRODSIZE\n,null as TSIPHBASEITEM_PGCID\n,null as TSIPHBASEITEM_BASEITEMDESCRIPTION\n,null as TSIPHBASEITEM_DEFAULTFDNHIGH\n,null as TSIPHBASEITEM_DEFAULTFDNLOW\n,null as TSIPHBASEITEM_DEFAULTFDNMED\n,null as TSIPHBASEITEM_PIECETYPEID\n,null as TSIPHBASEITEM_PRICECOLLECTIONID\n,null as TSIPHGROUP_PLEVELID\n,null as TSIPHGROUP_PGCDESC\n,null as TSIPHGROUP_ISACTIVE\n,null as TSIPHGROUP_EFFECTIVEDATE\n,null as TSIPHGROUP_EXPIRATIONDATE\n,null as TSIPHGROUP_MSTRPGCID\n,null as TSIPHGROUP_COMFORTID\n,null as TSIPHGROUP_CONSTRUCTID\n,null as TSIPHLEVEL_LINELAUNCHID\n,null as TSIPHLEVEL_YOYID\n,null as TSIPHLEVEL_PLEVELDESC\n,null as TSIPHLEVEL_ISACTIVE\n,null as TSIPHLEVEL_ISSPECIALTY\n,null as TSIPHYEAROVERYEAR_TYPEID\n,null as TSIPHYEAROVERYEAR_PRICEBANDID\n,null as TSIPHYEAROVERYEAR_YOYDESC\n,null as TSIPHTYPE_STYLEID\n,null as TSIPHTYPE_TECHNOLOGYID\n,null as TSIPHTYPE_TYPEDESC\n,null as TSIPHSTYLE_BRANDID\n,null as TSIPHSTYLE_STYLEDESC\n,null as TSIPHBRAND_MBRANDID\n,null as TSIPHBRAND_BRANDDESC\n,null as TSIPHMASTERBRAND_MBRANDDESC\n,null as TSIPHTECHNOLOGY_TECHNOLOGYDESC\n,null as TSIPHPRICEBAND_PRICEBAND\n,null as TSIPHLINELAUNCH_LINELAUNCHDESC\n,null as TSIPHCOMFORT_COMFORTDESC\n,null as TSIPHCONSTRUCTION_CONSTRUCTDESC\n,null as TSIPHPRICECOLLECTION_PRICECOLLECTIONDESC\n,null as TPSSIZE_SIZEID\n,null as TPSSIZE_DIMENSIONS\n,null as TPSSIZE_EBCPANELLENGTH\n,null as TPSSIZE_EBCPANELWIDTH\n, null as TPSSIZE_ACTIVE\n, null as ITEMGROUPID\n, null as ITEMGROUPNAME\n,(SELECT MAX(LastUpdateDate)\nFROM (VALUES (it1.MODIFIEDDATETIME),\n(isnull(e1.MODIFIEDDATETIME, '1950-01-01')),\n(isnull(uom1.MODIFIEDDATETIME, '1950-01-01')),\n(isnull(uomt1.MODIFIEDDATETIME, '1950-01-01'))) AS UpdateDate(LastUpdateDate)) AS LAST_MODIFIEDDATETIME\n,null as ITEM_HIERARCHY_HASH_KEY\n,1 as BRAND_RANK\nfrom\ndbo.INVENTTABLE it1\nleft join (select d10.ID, d10.TIMEZONE\n\t\t\tfrom dbo.DATAAREA d10\n\t\t\tinner join (select ID, max(RECID) as MAX_RECID\n\t\t\t\t\t\tfrom dbo.DATAAREA\n\t\t\t\t\t\tgroup by ID) d11 on\n\t\t\t\td10.ID = d11.ID and\n\t\t\t\td10.RECID = d11.MAX_RECID\n\t\t\t) da1 on\n\tit1.DATAAREAID = da1.ID\nleft join (select e10.PRODUCT, e10.NAME, e10.MODIFIEDDATETIME\n\t\t\tfrom dbo.ECORESPRODUCTTRANSLATION e10\n\t\t\tinner join (select PRODUCT, max(MODIFIEDDATETIME) as MAX_MODIFIEDDATETIME\n\t\t\t\t\t\tfrom dbo.ECORESPRODUCTTRANSLATION\n\t\t\t\t\t\twhere LANGUAGEID = 'en-us'\n\t\t\t\t\t\tgroup by PRODUCT) e11 on\n\t\t\t\te10.PRODUCT = e11.PRODUCT and\n\t\t\t\te10.MODIFIEDDATETIME = e11.MAX_MODIFIEDDATETIME\n\t\t\twhere LANGUAGEID = 'en-us') e1 on\n\tit1.PRODUCT = e1.PRODUCT\nleft join dbo.BOMCOSTGROUP bcg1 on\n\tit1.DATAAREAID = bcg1.DATAAREAID and\n\tit1.COSTGROUPID = bcg1.COSTGROUPID\nleft join (select distinct it1.DEFAULTDIMENSION\n\t\t\t\t, max(\n\t\t\t\t\tcase when da1.NAME = 'E_Category' then davsi1.DISPLAYVALUE\n\t\t\t\t\t\telse null\n\t\t\t\t\t\tend\n\t\t\t\t\t) over (partition by it1.DEFAULTDIMENSION) as E_CATEGORY\n\t\t\t\t, max(\n\t\t\t\t\tcase when da1.NAME = 'F_Family' then davsi1.DISPLAYVALUE\n\t\t\t\t\t\telse null\n\t\t\t\t\t\tend\n\t\t\t\t\t) over (partition by it1.DEFAULTDIMENSION) as F_FAMILY\n\t\t\t\t\n\t\t\t\t, max(\n\t\t\t\t\tcase when da1.NAME = 'E_Category' and davsi1.DISPLAYVALUE in ('10', '11', '20', '50', '60') then desc1.DESCRIPTION\n\t\t\t\t\t\twhen da1.NAME = 'E_Category' then 'Other'\n\t\t\t\t\telse null\n\t\t\t\t\tend\n\t\t\t\t\t) over (partition by it1.DEFAULTDIMENSION) as E_CATEGORY_DESCRIPTION_PARENT\n\t\t\t\t-- use MIN because you want the first iteration of the character set\n\t\t\t\t, min(\n\t\t\t\t\tcase when da1.NAME = 'E_Category' then desc1.DESCRIPTION\n\t\t\t\t\telse null\n\t\t\t\t\tend\n\t\t\t\t\t) over (partition by it1.DEFAULTDIMENSION) as E_CATEGORY_DESCRIPTION\n\t\t\t\t, min(\n\t\t\t\t\tcase when da1.NAME = 'F_Family' then desc1.DESCRIPTION\n\t\t\t\t\telse null\n\t\t\t\t\tend\n\t\t\t\t\t) over (partition by it1.DEFAULTDIMENSION) as F_FAMILY_DESCRIPTION\n\t\t\t\t, max(\n\t\t\t\t\t(select max(i) from (values (davsi1.MODIFIEDDATETIME), (dav1.MODIFIEDDATETIME), (da1.MODIFIEDDATETIME), (desc1.DESC_MODIFIEDDATETIME)) AS T(i))\n\t\t\t\t\t) over (partition by it1.DEFAULTDIMENSION) as DEFAULTDIMENSION_MODIFIEDDATETIME\n\t\t\tfrom (select distinct DEFAULTDIMENSION from dbo.INVENTTABLE) it1\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEVALUESETITEM davsi1 on\n\t\t\t\tit1.DEFAULTDIMENSION = davsi1.DIMENSIONATTRIBUTEVALUESET\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEVALUE dav1 on\n\t\t\t\tdavsi1.DIMENSIONATTRIBUTEVALUE = dav1.RECID\n\t\t\tleft join dbo.DIMENSIONATTRIBUTE da1 on\n\t\t\t\tdav1.DIMENSIONATTRIBUTE = da1.RECID\n\t\t\tleft join (select dft1.VALUE, da2.NAME, dft1.DESCRIPTION\n\t\t\t\t\t\t\t, (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME\n\t\t\t\t\t\tfrom dbo.DIMENSIONFINANCIALTAG dft1\n\t\t\t\t\t\tleft join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on\n\t\t\t\t\t\t\tdft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n\t\t\t\t\t\tleft join dbo.DIMENSIONATTRIBUTE da2 on\n\t\t\t\t\t\t\tdadc1.DIMENSIONATTRIBUTE = da2.RECID) desc1 on\n\t\t\t\tdavsi1.DISPLAYVALUE = desc1.VALUE and\n\t\t\t\tda1.NAME = desc1.NAME\n\t\t\t) def1 on\n\tit1.DEFAULTDIMENSION = def1.DEFAULTDIMENSION\nleft join dbo.TIMEZONEINFO tzi1 on\n\tda1.TIMEZONE = tzi1.TIMEZONEID and\n\tit1.CREATEDDATETIME >= tzi1.STARTDATE and\n\tit1.CREATEDDATETIME < tzi1.ENDDATE\nleft join dbo.INVENTTABLEMODULE itm1 on\n\titm1.MODULETYPE = 1 and\n\tit1.DATAAREAID = itm1.DATAAREAID and\n\tit1.ITEMID = itm1.ITEMID\nleft join (select uom10.RECID, uom10.SYMBOL, uom10.MODIFIEDDATETIME\n\t\t\tfrom dbo.UNITOFMEASURE uom10\n\t\t\tinner join (select SYMBOL, max(MODIFIEDDATETIME) as MAX_MODIFIEDDATETIME\n\t\t\t\t\t\tfrom dbo.UNITOFMEASURE\n\t\t\t\t\t\tgroup by SYMBOL) uom11 on\n\t\t\t\tuom10.SYMBOL = uom11.SYMBOL and\n\t\t\t\tuom10.MODIFIEDDATETIME = uom11.MAX_MODIFIEDDATETIME) uom1 on\n\titm1.UNITID = uom1.SYMBOL\nleft join (select uomt10.UNITOFMEASURE, uomt10.DESCRIPTION, uomt10.MODIFIEDDATETIME\n\t\t\tfrom dbo.UNITOFMEASURETRANSLATION uomt10\n\t\t\tinner join (select UNITOFMEASURE, max(MODIFIEDDATETIME) as MAX_MODIFIEDDATETIME\n\t\t\t\t\t\tfrom dbo.UNITOFMEASURETRANSLATION\n\t\t\t\t\t\twhere LANGUAGEID = 'en-us'\n\t\t\t\t\t\tgroup by UNITOFMEASURE) uomt11 on\n\t\t\t\tuomt10.UNITOFMEASURE = uomt11.UNITOFMEASURE and\n\t\t\t\tuomt10.MODIFIEDDATETIME = uomt11.MAX_MODIFIEDDATETIME\n\t\t\twhere uomt10.LANGUAGEID = 'en-us') uomt1 on\n\tuom1.RECID = uomt1.UNITOFMEASURE\nwhere it1.dataareaid = '761'",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DATAAREAID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "ITEMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ITEMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "PRODUCT",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "PRODUCT",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "ABCVALUE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "ABCVALUE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "COSTGROUPID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "COSTGROUPID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "CREATEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "CREATEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DATAAREA_TIMEZONE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "DATAAREA_TIMEZONE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "ECORESPRODUCTTRANSLATION_PRODUCT",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "ECORESPRODUCTTRANSLATION_PRODUCT",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "ECORESPRODUCTTRANSLATION_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ECORESPRODUCTTRANSLATION_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "ECORESPRODUCTTRANSLATION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "ECORESPRODUCTTRANSLATION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "BOMCOSTGROUP_DATAAREAID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "BOMCOSTGROUP_DATAAREAID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "BOMCOSTGROUP_COSTGROUPID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "BOMCOSTGROUP_COSTGROUPID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "BOMCOSTGROUP_NAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "BOMCOSTGROUP_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "BOMCOSTGROUP_COSTGROUPBEHAVIOR",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "BOMCOSTGROUP_COSTGROUPBEHAVIOR",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "BOMCOSTGROUP_COSTGROUPTYPE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "BOMCOSTGROUP_COSTGROUPTYPE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "BOMCOSTGROUP_TYPEDEFAULT",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "BOMCOSTGROUP_TYPEDEFAULT",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_E_CATEGORY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_E_CATEGORY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_E_CATEGORY_DESCRIPTION_PARENT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_E_CATEGORY_DESCRIPTION_PARENT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_E_CATEGORY_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_E_CATEGORY_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_F_FAMILY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_F_FAMILY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_F_FAMILY_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_F_FAMILY_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TIMEZONEINFO_TIMEZONEID",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TIMEZONEINFO_TIMEZONEID",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "TIMEZONEINFO_STARTDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "TIMEZONEINFO_STARTDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TIMEZONEINFO_ENDDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "TIMEZONEINFO_ENDDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TIMEZONEINFO_TIMEBIAS",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TIMEZONEINFO_TIMEBIAS",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "INVENTTABLEMODULE_MODULETYPE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "INVENTTABLEMODULE_MODULETYPE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "INVENTTABLEMODULE_DATAAREAID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTTABLEMODULE_DATAAREAID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVENTTABLEMODULE_ITEMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTTABLEMODULE_ITEMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "INVENTTABLEMODULE_UNITID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "INVENTTABLEMODULE_UNITID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "UNITOFMEASURE_RECID",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "UNITOFMEASURE_RECID",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "UNITOFMEASURE_SYMBOL",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "UNITOFMEASURE_SYMBOL",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "UNITOFMEASURE_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "UNITOFMEASURE_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "UNITOFMEASURETRANSLATION_UNITOFMEASURE",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "UNITOFMEASURETRANSLATION_UNITOFMEASURE",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "UNITOFMEASURETRANSLATION_DESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "UNITOFMEASURETRANSLATION_DESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "UNITOFMEASURETRANSLATION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "UNITOFMEASURETRANSLATION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TSIPHITEM_DISPLAYPRODUCTNUMBER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHITEM_DISPLAYPRODUCTNUMBER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHITEM_BASEITEMID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHITEM_BASEITEMID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHITEM_PRODSIZE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHITEM_PRODSIZE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBASEITEM_PGCID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBASEITEM_PGCID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBASEITEM_BASEITEMDESCRIPTION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBASEITEM_BASEITEMDESCRIPTION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBASEITEM_DEFAULTFDNHIGH",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBASEITEM_DEFAULTFDNHIGH",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBASEITEM_DEFAULTFDNLOW",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBASEITEM_DEFAULTFDNLOW",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBASEITEM_DEFAULTFDNMED",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBASEITEM_DEFAULTFDNMED",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBASEITEM_PIECETYPEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBASEITEM_PIECETYPEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBASEITEM_PRICECOLLECTIONID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBASEITEM_PRICECOLLECTIONID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHGROUP_PLEVELID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHGROUP_PLEVELID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHGROUP_PGCDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHGROUP_PGCDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHGROUP_ISACTIVE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TSIPHGROUP_ISACTIVE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "TSIPHGROUP_EFFECTIVEDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "TSIPHGROUP_EFFECTIVEDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TSIPHGROUP_EXPIRATIONDATE",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "TSIPHGROUP_EXPIRATIONDATE",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "TSIPHGROUP_MSTRPGCID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHGROUP_MSTRPGCID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHGROUP_COMFORTID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHGROUP_COMFORTID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHGROUP_CONSTRUCTID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHGROUP_CONSTRUCTID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHLEVEL_LINELAUNCHID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHLEVEL_LINELAUNCHID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHLEVEL_YOYID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHLEVEL_YOYID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHLEVEL_PLEVELDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHLEVEL_PLEVELDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHLEVEL_ISACTIVE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TSIPHLEVEL_ISACTIVE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "TSIPHLEVEL_ISSPECIALTY",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TSIPHLEVEL_ISSPECIALTY",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "TSIPHYEAROVERYEAR_TYPEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHYEAROVERYEAR_TYPEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHYEAROVERYEAR_PRICEBANDID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHYEAROVERYEAR_PRICEBANDID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHYEAROVERYEAR_YOYDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHYEAROVERYEAR_YOYDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHTYPE_STYLEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHTYPE_STYLEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHTYPE_TECHNOLOGYID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHTYPE_TECHNOLOGYID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHTYPE_TYPEDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHTYPE_TYPEDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHSTYLE_BRANDID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHSTYLE_BRANDID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHSTYLE_STYLEDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHSTYLE_STYLEDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBRAND_MBRANDID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBRAND_MBRANDID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHBRAND_BRANDDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHBRAND_BRANDDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHMASTERBRAND_MBRANDDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHMASTERBRAND_MBRANDDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHTECHNOLOGY_TECHNOLOGYDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHTECHNOLOGY_TECHNOLOGYDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHPRICEBAND_PRICEBAND",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHPRICEBAND_PRICEBAND",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHLINELAUNCH_LINELAUNCHDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHLINELAUNCH_LINELAUNCHDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHCOMFORT_COMFORTDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHCOMFORT_COMFORTDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHCONSTRUCTION_CONSTRUCTDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHCONSTRUCTION_CONSTRUCTDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TSIPHPRICECOLLECTION_PRICECOLLECTIONDESC",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TSIPHPRICECOLLECTION_PRICECOLLECTIONDESC",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TPSSIZE_SIZEID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TPSSIZE_SIZEID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TPSSIZE_DIMENSIONS",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "TPSSIZE_DIMENSIONS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "TPSSIZE_EBCPANELLENGTH",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "TPSSIZE_EBCPANELLENGTH",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "TPSSIZE_EBCPANELWIDTH",
																"type": "Decimal",
																"physicalType": "decimal",
																"scale": 16,
																"precision": 32
															},
															"sink": {
																"name": "TPSSIZE_EBCPANELWIDTH",
																"type": "Decimal",
																"physicalType": "DECIMAL"
															}
														},
														{
															"source": {
																"name": "TPSSIZE_ACTIVE",
																"type": "Int32",
																"physicalType": "int"
															},
															"sink": {
																"name": "TPSSIZE_ACTIVE",
																"type": "Int32",
																"physicalType": "INT_32"
															}
														},
														{
															"source": {
																"name": "ITEMGROUPID",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ITEMGROUPID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "ITEMGROUPNAME",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "ITEMGROUPNAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LAST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "LAST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "ITEM_HIERARCHY_HASH_KEY",
																"type": "String",
																"physicalType": "varchar"
															},
															"sink": {
																"name": "ITEM_HIERARCHY_HASH_KEY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "BRAND_RANK",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "BRAND_RANK",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															},
															"sink": {
																"name": "HK_JOB_RUN_ID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "HK_SOURCE_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														}
													],
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sql_server",
													"type": "DatasetReference",
													"parameters": {
														"p_src_table_name": {
															"value": "@pipeline().parameters.p_src_table_nm",
															"type": "Expression"
														},
														"p_src_schema_name": {
															"value": "@pipeline().parameters.p_src_schema_nm",
															"type": "Expression"
														},
														"p_ls_serverName": {
															"value": "@pipeline().globalParameters.retail_sql_serverName",
															"type": "Expression"
														},
														"p_ls_dbName": {
															"value": "@pipeline().globalParameters.retail_sql_dbName",
															"type": "Expression"
														},
														"p_ls_sqlUsername": {
															"value": "@pipeline().globalParameters.sql_userName",
															"type": "Expression"
														},
														"p_ls_sqlPassword": {
															"value": "@pipeline().globalParameters.sql_password",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_parquet",
													"type": "DatasetReference",
													"parameters": {
														"p_directory": {
															"value": "@pipeline().parameters.p_temp_directory",
															"type": "Expression"
														},
														"p_root_system": {
															"value": "@pipeline().globalParameters.rootDir",
															"type": "Expression"
														},
														"p_file_name": {
															"value": "@pipeline().parameters.p_temp_file_nm",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "nala_raw_load_failure_notification_copy1",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "inventtable_to_adls_retail",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('inventtable_to_adls_retail').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@replace(replace(replace(activity('inventtable_to_adls_retail').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('inventtable_to_adls_retail').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('inventtable_to_adls_retail').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "sql_retail_load_to_raw_fail",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "nala_raw_load_failure_notification_copy1",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": {
													"value": "@activity('inventtable_to_adls_retail').Error['message']",
													"type": "Expression"
												},
												"errorCode": "500"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_src_table_nm": {
						"type": "string",
						"defaultValue": "INVENTTABLE"
					},
					"p_src_schema_nm": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"p_tgt_raw_table_nm": {
						"type": "string",
						"defaultValue": "INVENTTABLE"
					},
					"p_tgt_raw_schema_nm": {
						"type": "string",
						"defaultValue": "AX_NALA"
					},
					"p_tgt_curate_table_nm": {
						"type": "string",
						"defaultValue": "DIM_ITEM"
					},
					"p_tgt_curate_schema_nm": {
						"type": "string",
						"defaultValue": "GLOBAL"
					},
					"p_src_nm": {
						"type": "string",
						"defaultValue": "AXNALA"
					},
					"p_src_directory": {
						"type": "string",
						"defaultValue": "business_files"
					},
					"p_temp_file_nm": {
						"type": "string",
						"defaultValue": "inventtable_nala.parquet"
					},
					"p_tgt_raw_table_nm_2": {
						"type": "string",
						"defaultValue": "INVENTTABLE_ITEM_HIERARCHY"
					},
					"p_src_file_nm": {
						"type": "string",
						"defaultValue": "SizeGroupMapping.csv"
					},
					"p_temp_directory": {
						"type": "string",
						"defaultValue": "temp_files"
					},
					"p_src_code": {
						"type": "string",
						"defaultValue": "1"
					}
				},
				"variables": {
					"v_prev_max_timestamp": {
						"type": "String"
					},
					"v_last_mod_tmstmp_sizegroupmapping": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-18T16:40:02Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pp_ax_ledgerdimension_to_dim_ledger_dimension')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lkp_raw_last_modified_date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set_last_mod_tmstmp_OpsFinanceMapping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"query": {
									"value": "@concat('select max(to_varchar(LATEST_MODIFIEDDATETIME::timestamp, ''','yyyy-mm-dd hh24:mi:ss',''')) as max_date from ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_rawDb,'.',pipeline().parameters.p_tgt_raw_schema_nm, '.', pipeline().parameters.p_tgt_raw_table_nm)",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference",
								"parameters": {
									"p_tgt_table_name": {
										"value": "@pipeline().parameters.p_tgt_curate_table_nm",
										"type": "Expression"
									},
									"p_tgt_schema_name": {
										"value": "@pipeline().parameters.p_tgt_curate_schema_nm",
										"type": "Expression"
									},
									"p_ls_DbName": {
										"value": "@pipeline().globalParameters.snow_rawDb",
										"type": "Expression"
									},
									"p_ls_Env": {
										"value": "@pipeline().globalParameters.environment",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "set_last_modified_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "lkp_raw_last_modified_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_prv_max_upd_timestamp",
							"value": {
								"value": "@coalesce(activity('lkp_raw_last_modified_date').output.firstRow.max_date, '1950-01-01 00:00:00')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "raw_to_curate_sp_call",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "df_load_dim_ledger_dimension",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_snowflake",
							"type": "LinkedServiceReference",
							"parameters": {
								"ls_DbName": {
									"value": "@pipeline().globalParameters.snow_auditDb",
									"type": "Expression"
								},
								"ls_Env": {
									"value": "@pipeline().globalParameters.environment",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('CALL ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb,'.CONTROL.SP_TASK_INITIALIZE(','''',pipeline().RunId,'''',',','''',pipeline().globalParameters.environment,'''',',','''',pipeline().parameters.p_tgt_curate_table_nm,'''',',',pipeline().parameters.p_src_code,')')",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "load_dim_ledger_dimension_failure_notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "df_load_dim_ledger_dimension",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pp_adf_pipeline_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subscription": {
									"value": "@pipeline().globalParameters.subscriptionId",
									"type": "Expression"
								},
								"resourceGroup": {
									"value": "@pipeline().globalParameters.resourceGroup",
									"type": "Expression"
								},
								"runId": {
									"value": "@coalesce(pipeline().RunId, -1)",
									"type": "Expression"
								},
								"name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('df_load_dim_ledger_dimension').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('df_load_dim_ledger_dimension').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('df_load_dim_ledger_dimension').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('df_load_dim_ledger_dimension').Duration",
									"type": "Expression"
								},
								"teamWebhookUrl": {
									"value": "@pipeline().globalParameters.teamsWebhookUrl",
									"type": "Expression"
								},
								"notificationTime": {
									"value": "@utcNow()",
									"type": "Expression"
								},
								"taskName": {
									"value": "@pipeline().parameters.p_tgt_curate_table_nm",
									"type": "Expression"
								},
								"taskStepNumber": {
									"value": "@pipeline().parameters.p_src_code",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "raw_to_curate_storedprocedure_failure_notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pp_adf_pipeline_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subscription": {
									"value": "@pipeline().globalParameters.subscriptionId",
									"type": "Expression"
								},
								"resourceGroup": {
									"value": "@pipeline().globalParameters.resourceGroup",
									"type": "Expression"
								},
								"runId": {
									"value": "@coalesce(pipeline().RunId, -1)",
									"type": "Expression"
								},
								"name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('raw_to_curate_sp_call').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('raw_to_curate_sp_call').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('raw_to_curate_sp_call').Duration",
									"type": "Expression"
								},
								"teamWebhookUrl": {
									"value": "@pipeline().globalParameters.teamsWebhookUrl",
									"type": "Expression"
								},
								"notificationTime": {
									"value": "@utcNow()",
									"type": "Expression"
								},
								"taskName": {
									"value": "@pipeline().parameters.p_tgt_curate_table_nm",
									"type": "Expression"
								},
								"taskStepNumber": {
									"value": "@pipeline().parameters.p_src_code",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "pipeline_execution_notification",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@if(equals(activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE'],'TRUE'),bool('TRUE'), bool('FALSE'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "pp_stored_procedure_failure_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@toUpper('failed')",
												"type": "Expression"
											},
											"message": {
												"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": {
												"value": "@pipeline().parameters.p_tgt_curate_table_nm",
												"type": "Expression"
											},
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "curate_load_failure",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "pp_stored_procedure_failure_notification",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "stored_procedure_success_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('raw_to_curate_sp_call').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@concat(pipeline().parameters.p_tgt_curate_table_nm, ' is successfully loaded')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": {
												"value": "@pipeline().parameters.p_tgt_curate_table_nm",
												"type": "Expression"
											},
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "switch_nala",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "set_last_modified_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.p_src_code",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1",
									"activities": [
										{
											"name": "ledgerdimension_to_adls_nala",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"additionalColumns": [
														{
															"name": "HK_JOB_RUN_ID",
															"value": {
																"value": "@coalesce(pipeline().RunId, -1)",
																"type": "Expression"
															}
														},
														{
															"name": "HK_SOURCE_NAME",
															"value": {
																"value": "@pipeline().parameters.p_src_nm",
																"type": "Expression"
															}
														}
													],
													"sqlReaderQuery": {
														"value": "select\n    def1.DIMENSIONATTRIBUTEVALUESET as DIMENSIONATTRIBUTEVALUESET,\n    def1.DISPLAYVALUE_A_DEPARTMENT as DISPLAYVALUE_A_DEPARTMENT,\n    def1.DISPLAYVALUE_B_INTERCOMPANY as DISPLAYVALUE_B_INTERCOMPANY,\n    def1.DISPLAYVALUE_C_SALES_CHANNEL as DISPLAYVALUE_C_SALES_CHANNEL,\n    def1.DISPLAYVALUE_D_TYPE as DISPLAYVALUE_D_TYPE,\n    def1.DISPLAYVALUE_E_CATEGORY as DISPLAYVALUE_E_CATEGORY,\n    def1.DISPLAYVALUE_F_FAMILY as DISPLAYVALUE_F_FAMILY,\n    def1.DISPLAYVALUE_G_SIZE as DISPLAYVALUE_G_SIZE,\n    def1.DISPLAYVALUE_H_VERSION as DISPLAYVALUE_H_VERSION,\n    def1.DISPLAYVALUE_I_CUSTOMER as DISPLAYVALUE_I_CUSTOMER,\n    def1.DISPLAYVALUE_J_VENDOR as DISPLAYVALUE_J_VENDOR,\n    def1.DISPLAYVALUE_K_FOAM_SOURCED as DISPLAYVALUE_K_FOAM_SOURCED,\n    def1.DISPLAYVALUE_L_STORE as DISPLAYVALUE_L_STORE,\n    def1.DISPLAYVALUE_M_SALES_DISTRI as DISPLAYVALUE_M_SALES_DISTRI,\n    def1.DISPLAYVALUE_BUSINESS_UNIT as DISPLAYVALUE_BUSINESS_UNIT,\n    def1.DISPLAYVALUE_MAIN_ACCOUNT as DISPLAYVALUE_MAIN_ACCOUNT,\n    def1.DISPLAYVALUE_PROJECTS as DISPLAYVALUE_PROJECTS,\n    def1.DISPLAYVALUE_SITE as DISPLAYVALUE_SITE,\n    def1.LEDGERDIMENSION_MODIFIEDDATETIME as LEDGERDIMENSION_MODIFIEDDATETIME,\n    dpt1.NAME as DIRPARTYTABLE1_NAME_DEPARTMENT,\n    desc1_b.DESCRIPTION as DIMENSIONFINANCIALTAG_DESCRIPTION_INTERCOMPANY,\n    desc1_c.DESCRIPTION as DIMENSIONFINANCIALTAG_DESCRIPTION_SALES_CHANNEL,\n    desc1_d.DESCRIPTION as DIMENSIONFINANCIALTAG_DESCRIPTION_TYPE,\n    desc1_e.DESCRIPTION as DIMENSIONFINANCIALTAG_DESCRIPTION_CATEGORY,\n    desc1_f.DESCRIPTION as DIMENSIONFINANCIALTAG_DESCRIPTION_FAMILY,\n    desc1_g.DESCRIPTION as DIMENSIONFINANCIALTAG_DESCRIPTION_SIZE,\n    desc1_h.DESCRIPTION as DIMENSIONFINANCIALTAG_DESCRIPTION_VERSION,\n    desc1_k.DESCRIPTION as DIMENSIONFINANCIALTAG_DESCRIPTION_FOAM_SOURCED,\n    desc1_m.DESCRIPTION as DIMENSIONFINANCIALTAG_DESCRIPTION_M_SALES_DISTRI,\n    desc1_proj.DESCRIPTION as DIMENSIONFINANCIALTAG_DESCRIPTION_PROJECTS,\n    desc1_site.DESCRIPTION as DIMENSIONFINANCIALTAG_DESCRIPTION_SITE,\n    desc1_l.NAME as DIRPARTYTABLE2_NAME_STORE,\n    dpt3.NAME as DIRPARTYTABLE3_NAME_BUSINESS_UNIT,\n    (\n        SELECT\n            MAX(LastUpdateDate)\n        FROM\n            (\n                VALUES\n                    (def1.LEDGERDIMENSION_MODIFIEDDATETIME),\n                    (isnull (desc1_b.DESC_MODIFIEDDATETIME, '1950-01-01')),\n                    (isnull (desc1_c.DESC_MODIFIEDDATETIME, '1950-01-01')),\n                    (isnull (desc1_d.DESC_MODIFIEDDATETIME, '1950-01-01')),\n                    (isnull (desc1_e.DESC_MODIFIEDDATETIME, '1950-01-01')),\n                    (isnull (desc1_f.DESC_MODIFIEDDATETIME, '1950-01-01')),\n                    (isnull (desc1_g.DESC_MODIFIEDDATETIME, '1950-01-01')),\n                    (isnull (desc1_h.DESC_MODIFIEDDATETIME, '1950-01-01')),\n                    (isnull (desc1_k.DESC_MODIFIEDDATETIME, '1950-01-01')),\n                    (isnull (desc1_m.DESC_MODIFIEDDATETIME, '1950-01-01')),\n                    (isnull (desc1_proj.DESC_MODIFIEDDATETIME, '1950-01-01')),\n                    (isnull (desc1_site.DESC_MODIFIEDDATETIME, '1950-01-01'))       \n            ) AS UpdateDate (LastUpdateDate)\n    ) AS LATEST_MODIFIEDDATETIME\nfrom\n    (select distinct davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION as DIMENSIONATTRIBUTEVALUESET\n\t, max(\n\t\tcase when da1.NAME = 'A_Department' then dalv1.DISPLAYVALUE\n\t\t\telse null\n\t\t\tend\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as DISPLAYVALUE_A_DEPARTMENT\n\t, max(\n\t\tcase when da1.NAME = 'B_Intercompany' then dalv1.DISPLAYVALUE\n\t\t\telse null\n\t\t\tend\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as DISPLAYVALUE_B_INTERCOMPANY\n\t, max(\n\t\tcase when da1.NAME = 'C_Sales_Channel' then dalv1.DISPLAYVALUE\n\t\t\telse null\n\t\t\tend\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as DISPLAYVALUE_C_SALES_CHANNEL\n\t, max(\n\t\tcase when da1.NAME = 'D_Type' then dalv1.DISPLAYVALUE\n\t\t\telse null\n\t\t\tend\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as DISPLAYVALUE_D_TYPE\n\t, max(\n\t\tcase when da1.NAME = 'E_Category' then dalv1.DISPLAYVALUE\n\t\t\telse null\n\t\t\tend\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as DISPLAYVALUE_E_CATEGORY\n\t, max(\n\t\tcase when da1.NAME = 'F_Family' then dalv1.DISPLAYVALUE\n\t\t\telse null\n\t\t\tend\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as DISPLAYVALUE_F_FAMILY\n\t, max(\n\t\tcase when da1.NAME = 'G_Size' then dalv1.DISPLAYVALUE\n\t\t\telse null\n\t\t\tend\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as DISPLAYVALUE_G_SIZE\n\t, max(\n\t\tcase when da1.NAME = 'H_Version' then dalv1.DISPLAYVALUE\n\t\t\telse null\n\t\t\tend\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as DISPLAYVALUE_H_VERSION\n\t, max(\n\t\tcase when da1.NAME = 'I_Customer' then dalv1.DISPLAYVALUE\n\t\t\telse null\n\t\t\tend\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as DISPLAYVALUE_I_CUSTOMER\n\t, max(\n\t\tcase when da1.NAME = 'J_Vendor' then dalv1.DISPLAYVALUE\n\t\t\telse null\n\t\t\tend\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as DISPLAYVALUE_J_VENDOR\n\t, max(\n\t\tcase when da1.NAME = 'K_Foam_Sourced' then dalv1.DISPLAYVALUE\n\t\t\telse null\n\t\t\tend\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as DISPLAYVALUE_K_FOAM_SOURCED\n\t, max(\n\t\tcase when da1.NAME = 'L_Store' then dalv1.DISPLAYVALUE\n\t\t\telse null\n\t\t\tend\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as DISPLAYVALUE_L_STORE\n\t, max(\n\t\tcase when da1.NAME = 'M_Sales_Distri' then dalv1.DISPLAYVALUE\n\t\t\telse null\n\t\t\tend\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as DISPLAYVALUE_M_SALES_DISTRI\n\t, max(\n\t\tcase when da1.NAME = 'BusinessUnit' then dalv1.DISPLAYVALUE\n\t\t\telse null\n\t\t\tend\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as DISPLAYVALUE_BUSINESS_UNIT\n\t, max(\n\t\tcase when da1.NAME = 'MainAccount' then dalv1.DISPLAYVALUE\n\t\t\telse null\n\t\t\tend\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as DISPLAYVALUE_MAIN_ACCOUNT\n\t, max(\n\t\tcase when da1.NAME = 'Projects' then dalv1.DISPLAYVALUE\n\t\t\telse null\n\t\t\tend\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as DISPLAYVALUE_PROJECTS\n\t, max(\n\t\tcase when da1.NAME = 'Site' then dalv1.DISPLAYVALUE\n\t\t\telse null\n\t\t\tend\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as DISPLAYVALUE_SITE\n\t, max(\n\t\t(select max(i) from (values (davgc1.MODIFIEDDATETIME), (dalv1.MODIFIEDDATETIME), (dav1.MODIFIEDDATETIME), (da1.MODIFIEDDATETIME)) AS T(i))\n\t\t) over (partition by davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION) as LEDGERDIMENSION_MODIFIEDDATETIME\nfrom dbo.DIMENSIONATTRIBUTEVALUEGROUPCOMBINATION davgc1\nleft join dbo.DIMENSIONATTRIBUTELEVELVALUE dalv1 on\n\tdavgc1.DIMENSIONATTRIBUTEVALUEGROUP = dalv1.DIMENSIONATTRIBUTEVALUEGROUP\nleft join dbo.DIMENSIONATTRIBUTEVALUE dav1 on\n\tdalv1.DIMENSIONATTRIBUTEVALUE = dav1.RECID\nleft join dbo.DIMENSIONATTRIBUTE da1 on\n\tdav1.DIMENSIONATTRIBUTE = da1.RECID\n) def1\nleft join (select OMOPERATINGUNITNUMBER\n\t\t\t, max(NAME) as NAME\n\t\tfrom dbo.DIRPARTYTABLE\n\t\tgroup by OMOPERATINGUNITNUMBER) dpt1 on\n\tdef1.DISPLAYVALUE_A_DEPARTMENT = dpt1.OMOPERATINGUNITNUMBER\nleft join (select distinct dft1.VALUE\n\t\t\t\t, max(dft1.DESCRIPTION) over (partition by dft1.VALUE order by dft1.MODIFIEDDATETIME desc)  as DESCRIPTION\n\t\t\t\t, (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME\n\t\t\tfrom dbo.DIMENSIONFINANCIALTAG dft1\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on\n\t\t\t\tdft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n\t\t\tleft join dbo.DIMENSIONATTRIBUTE da2 on\n\t\t\t\tdadc1.DIMENSIONATTRIBUTE = da2.RECID\n\t\t\twhere da2.NAME = 'B_Intercompany') desc1_b on\n\tdef1.DISPLAYVALUE_B_INTERCOMPANY = desc1_b.VALUE\nleft join (select distinct dft1.VALUE\n\t\t\t\t, max(dft1.DESCRIPTION) over (partition by dft1.VALUE order by dft1.MODIFIEDDATETIME desc)  as DESCRIPTION\n\t\t\t\t, (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME\n\t\t\tfrom dbo.DIMENSIONFINANCIALTAG dft1\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on\n\t\t\t\tdft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n\t\t\tleft join dbo.DIMENSIONATTRIBUTE da2 on\n\t\t\t\tdadc1.DIMENSIONATTRIBUTE = da2.RECID\n\t\t\twhere da2.NAME = 'C_Sales_Channel') desc1_c on\n\tdef1.DISPLAYVALUE_C_SALES_CHANNEL = desc1_c.VALUE\nleft join (select distinct dft1.VALUE\n\t\t\t\t, max(dft1.DESCRIPTION) over (partition by dft1.VALUE order by dft1.MODIFIEDDATETIME desc)  as DESCRIPTION\n\t\t\t\t, (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME\n\t\t\tfrom dbo.DIMENSIONFINANCIALTAG dft1\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on\n\t\t\t\tdft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n\t\t\tleft join dbo.DIMENSIONATTRIBUTE da2 on\n\t\t\t\tdadc1.DIMENSIONATTRIBUTE = da2.RECID\n\t\t\twhere da2.NAME = 'D_Type') desc1_d on\n\tdef1.DISPLAYVALUE_D_TYPE = desc1_d.VALUE\nleft join (select distinct dft1.VALUE\n\t\t\t\t, max(dft1.DESCRIPTION) over (partition by dft1.VALUE order by dft1.MODIFIEDDATETIME desc)  as DESCRIPTION\n\t\t\t\t, (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME\n\t\t\tfrom dbo.DIMENSIONFINANCIALTAG dft1\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on\n\t\t\t\tdft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n\t\t\tleft join dbo.DIMENSIONATTRIBUTE da2 on\n\t\t\t\tdadc1.DIMENSIONATTRIBUTE = da2.RECID\n\t\t\twhere da2.NAME = 'E_Category') desc1_e on\n\tdef1.DISPLAYVALUE_E_CATEGORY = desc1_e.VALUE\nleft join (select distinct dft1.VALUE\n\t\t\t\t, max(dft1.DESCRIPTION) over (partition by dft1.VALUE order by dft1.MODIFIEDDATETIME desc)  as DESCRIPTION\n\t\t\t\t, (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME\n\t\t\tfrom dbo.DIMENSIONFINANCIALTAG dft1\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on\n\t\t\t\tdft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n\t\t\tleft join dbo.DIMENSIONATTRIBUTE da2 on\n\t\t\t\tdadc1.DIMENSIONATTRIBUTE = da2.RECID\n\t\t\twhere da2.NAME = 'F_Family') desc1_f on\n\tdef1.DISPLAYVALUE_F_FAMILY = desc1_f.VALUE\nleft join (select distinct dft1.VALUE\n\t\t\t\t, max(dft1.DESCRIPTION) over (partition by dft1.VALUE order by dft1.MODIFIEDDATETIME desc)  as DESCRIPTION\n\t\t\t\t, (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME\n\t\t\tfrom dbo.DIMENSIONFINANCIALTAG dft1\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on\n\t\t\t\tdft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n\t\t\tleft join dbo.DIMENSIONATTRIBUTE da2 on\n\t\t\t\tdadc1.DIMENSIONATTRIBUTE = da2.RECID\n\t\t\twhere da2.NAME = 'G_Size') desc1_g on\n\tdef1.DISPLAYVALUE_G_SIZE = desc1_g.VALUE\nleft join (select distinct dft1.VALUE\n\t\t\t\t, max(dft1.DESCRIPTION) over (partition by dft1.VALUE order by dft1.MODIFIEDDATETIME desc)  as DESCRIPTION\n\t\t\t\t, (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME\n\t\t\tfrom dbo.DIMENSIONFINANCIALTAG dft1\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on\n\t\t\t\tdft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n\t\t\tleft join dbo.DIMENSIONATTRIBUTE da2 on\n\t\t\t\tdadc1.DIMENSIONATTRIBUTE = da2.RECID\n\t\t\twhere da2.NAME = 'H_Version') desc1_h on\n\tdef1.DISPLAYVALUE_H_VERSION = desc1_h.VALUE\nleft join (select distinct dft1.VALUE\n\t\t\t\t, max(dft1.DESCRIPTION) over (partition by dft1.VALUE order by dft1.MODIFIEDDATETIME desc)  as DESCRIPTION\n\t\t\t\t, (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME\n\t\t\tfrom dbo.DIMENSIONFINANCIALTAG dft1\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on\n\t\t\t\tdft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n\t\t\tleft join dbo.DIMENSIONATTRIBUTE da2 on\n\t\t\t\tdadc1.DIMENSIONATTRIBUTE = da2.RECID\n\t\t\twhere da2.NAME = 'K_Foam_Sourced') desc1_k on\n\tdef1.DISPLAYVALUE_K_FOAM_SOURCED = desc1_k.VALUE\nleft join (select rct1.STORENUMBER\n\t\t\t\t, max(dpt1.NAME) as NAME\n\t\t\tfrom dbo.RETAILCHANNELTABLE rct1\n\t\t\tleft join dbo.DIRPARTYTABLE dpt1 on\n\t\t\t\trct1.OMOPERATINGUNITID = dpt1.RECID\n\t\t\tgroup by rct1.STORENUMBER) desc1_l on\n\tdef1.DISPLAYVALUE_L_STORE = desc1_l.STORENUMBER\nleft join (select distinct dft1.VALUE\n\t\t\t\t, max(dft1.DESCRIPTION) over (partition by dft1.VALUE order by dft1.MODIFIEDDATETIME desc)  as DESCRIPTION\n\t\t\t\t, (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME\n\t\t\tfrom dbo.DIMENSIONFINANCIALTAG dft1\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on\n\t\t\t\tdft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n\t\t\tleft join dbo.DIMENSIONATTRIBUTE da2 on\n\t\t\t\tdadc1.DIMENSIONATTRIBUTE = da2.RECID\n\t\t\twhere da2.NAME = 'M_Sales_Distri') desc1_m on\n\tdef1.DISPLAYVALUE_M_SALES_DISTRI = desc1_m.VALUE\nleft join (select OMOPERATINGUNITNUMBER\n\t\t\t, max(NAME) as NAME\n\t\tfrom dbo.DIRPARTYTABLE\n\t\tgroup by OMOPERATINGUNITNUMBER) dpt3 on\n\tdef1.DISPLAYVALUE_BUSINESS_UNIT = dpt3.OMOPERATINGUNITNUMBER\nleft join (select distinct dft1.VALUE\n\t\t\t\t, max(dft1.DESCRIPTION) over (partition by dft1.VALUE order by dft1.MODIFIEDDATETIME desc)  as DESCRIPTION\n\t\t\t\t, (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME\n\t\t\tfrom dbo.DIMENSIONFINANCIALTAG dft1\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on\n\t\t\t\tdft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n\t\t\tleft join dbo.DIMENSIONATTRIBUTE da2 on\n\t\t\t\tdadc1.DIMENSIONATTRIBUTE = da2.RECID\n\t\t\twhere da2.NAME = 'Projects') desc1_proj on\n\tdef1.DISPLAYVALUE_PROJECTS = desc1_proj.VALUE\nleft join (select distinct dft1.VALUE\n\t\t\t\t, max(dft1.DESCRIPTION) over (partition by dft1.VALUE order by dft1.MODIFIEDDATETIME desc)  as DESCRIPTION\n\t\t\t\t, (select max(i) from (values (dft1.MODIFIEDDATETIME), (dadc1.MODIFIEDDATETIME), (da2.MODIFIEDDATETIME)) AS T(i)) as DESC_MODIFIEDDATETIME\n\t\t\tfrom dbo.DIMENSIONFINANCIALTAG dft1\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEDIRCATEGORY dadc1 on\n\t\t\t\tdft1.FINANCIALTAGCATEGORY = dadc1.DIRCATEGORY\n\t\t\tleft join dbo.DIMENSIONATTRIBUTE da2 on\n\t\t\t\tdadc1.DIMENSIONATTRIBUTE = da2.RECID\n\t\t\twhere da2.NAME = 'Site') desc1_site on\n\tdef1.DISPLAYVALUE_SITE = desc1_site.VALUE",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"name": "DIMENSIONATTRIBUTEVALUESET",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DIMENSIONATTRIBUTEVALUESET",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_A_DEPARTMENT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_A_DEPARTMENT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_B_INTERCOMPANY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_B_INTERCOMPANY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_C_SALES_CHANNEL",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_C_SALES_CHANNEL",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_D_TYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_D_TYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_E_CATEGORY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_E_CATEGORY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_F_FAMILY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_F_FAMILY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_G_SIZE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_G_SIZE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_H_VERSION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_H_VERSION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_I_CUSTOMER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_I_CUSTOMER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_J_VENDOR",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_J_VENDOR",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_K_FOAM_SOURCED",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_K_FOAM_SOURCED",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_L_STORE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_L_STORE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_M_SALES_DISTRI",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_M_SALES_DISTRI",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_BUSINESS_UNIT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_BUSINESS_UNIT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_MAIN_ACCOUNT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_MAIN_ACCOUNT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_PROJECTS",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_PROJECTS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_SITE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_SITE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LEDGERDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "LEDGERDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE1_NAME_DEPARTMENT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIRPARTYTABLE1_NAME_DEPARTMENT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_INTERCOMPANY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_INTERCOMPANY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_SALES_CHANNEL",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_SALES_CHANNEL",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_TYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_TYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_CATEGORY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_CATEGORY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_FAMILY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_FAMILY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_SIZE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_SIZE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_VERSION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_VERSION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_FOAM_SOURCED",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_FOAM_SOURCED",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_M_SALES_DISTRI",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_M_SALES_DISTRI",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_PROJECTS",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_PROJECTS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_SITE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_SITE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE2_NAME_STORE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIRPARTYTABLE2_NAME_STORE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE3_NAME_BUSINESS_UNIT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIRPARTYTABLE3_NAME_BUSINESS_UNIT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															},
															"sink": {
																"name": "HK_JOB_RUN_ID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "HK_SOURCE_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														}
													],
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sql_server",
													"type": "DatasetReference",
													"parameters": {
														"p_src_table_name": {
															"value": "@pipeline().parameters.p_src_table_nm",
															"type": "Expression"
														},
														"p_src_schema_name": {
															"value": "@pipeline().parameters.p_src_schema_nm",
															"type": "Expression"
														},
														"p_ls_serverName": {
															"value": "@pipeline().globalParameters.nala_sql_serverName",
															"type": "Expression"
														},
														"p_ls_dbName": {
															"value": "@pipeline().globalParameters.nala_sql_dbName",
															"type": "Expression"
														},
														"p_ls_sqlUsername": {
															"value": "@pipeline().globalParameters.sql_userName",
															"type": "Expression"
														},
														"p_ls_sqlPassword": {
															"value": "@pipeline().globalParameters.sql_password",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_parquet",
													"type": "DatasetReference",
													"parameters": {
														"p_directory": {
															"value": "@pipeline().parameters.p_temp_directory",
															"type": "Expression"
														},
														"p_root_system": {
															"value": "@pipeline().globalParameters.rootDir",
															"type": "Expression"
														},
														"p_file_name": {
															"value": "@pipeline().parameters.p_temp_file_nm",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "nala_raw_load_failure_notification",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "ledgerdimension_to_adls_nala",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('ledgerdimension_to_adls_nala').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@replace(replace(replace(activity('ledgerdimension_to_adls_nala').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('ledgerdimension_to_adls_nala').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('ledgerdimension_to_adls_nala').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "sql_nala_load_to_raw_fail",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "nala_raw_load_failure_notification",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": {
													"value": "@activity('ledgerdimension_to_adls_nala').Error['message']",
													"type": "Expression"
												},
												"errorCode": "500"
											}
										}
									]
								},
								{
									"value": "3",
									"activities": [
										{
											"name": "ledgerdimension_to_adls_d365",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "WarehouseSource",
													"additionalColumns": [
														{
															"name": "HK_JOB_RUN_ID",
															"value": {
																"value": "@coalesce(pipeline().RunId, -1)",
																"type": "Expression"
															}
														},
														{
															"name": "HK_SOURCE_NAME",
															"value": {
																"value": "@pipeline().parameters.p_src_nm",
																"type": "Expression"
															}
														}
													],
													"sqlReaderQuery": {
														"value": "Select \n    dimensionattributevalueset As DIMENSIONATTRIBUTEVALUESET,\n    DISPLAYVALUE_A_DEPARTMENT AS DISPLAYVALUE_A_DEPARTMENT,\n    DISPLAYVALUE_B_INTERCOMPANY AS DISPLAYVALUE_B_INTERCOMPANY,\n    DISPLAYVALUE_C_SALES_CHANNEL AS DISPLAYVALUE_C_SALES_CHANNEL,\n    DISPLAYVALUE_D_TYPE AS DISPLAYVALUE_D_TYPE,\n    DISPLAYVALUE_E_CATEGORY AS DISPLAYVALUE_E_CATEGORY,\n    DISPLAYVALUE_F_FAMILY AS DISPLAYVALUE_F_FAMILY,\n    DISPLAYVALUE_G_SIZE AS DISPLAYVALUE_G_SIZE,\n    DISPLAYVALUE_H_VERSION AS DISPLAYVALUE_H_VERSION,\n    DISPLAYVALUE_I_CUSTOMER AS DISPLAYVALUE_I_CUSTOMER,\n    DISPLAYVALUE_J_VENDOR AS DISPLAYVALUE_J_VENDOR,\n    DISPLAYVALUE_K_FOAM_SOURCED AS DISPLAYVALUE_K_FOAM_SOURCED,\n    DISPLAYVALUE_L_STORE AS DISPLAYVALUE_L_STORE,\n    DISPLAYVALUE_M_SALES_DISTRI AS DISPLAYVALUE_M_SALES_DISTRI,\n    DISPLAYVALUE_BUSINESS_UNIT AS DISPLAYVALUE_BUSINESS_UNIT,\n    DISPLAYVALUE_MAIN_ACCOUNT AS DISPLAYVALUE_MAIN_ACCOUNT,\n    DISPLAYVALUE_PROJECTS AS DISPLAYVALUE_PROJECTS,\n    DISPLAYVALUE_SITE AS DISPLAYVALUE_SITE,\n    LEDGERDIMENSION_MODIFIEDDATETIME AS LEDGERDIMENSION_MODIFIEDDATETIME,\n\tdpt1.name AS DIRPARTYTABLE1_NAME_DEPARTMENT,\n    dft1.description AS DIMENSIONFINANCIALTAG_DESCRIPTION_INTERCOMPANY,\n    dft2.description AS DIMENSIONFINANCIALTAG_DESCRIPTION_SALES_CHANNEL,\n    dft3.description AS DIMENSIONFINANCIALTAG_DESCRIPTION_TYPE,\n    dft4.description AS DIMENSIONFINANCIALTAG_DESCRIPTION_CATEGORY,\n    dft5.description AS DIMENSIONFINANCIALTAG_DESCRIPTION_FAMILY,\n    dft6.description AS DIMENSIONFINANCIALTAG_DESCRIPTION_SIZE,\n    dft7.description AS DIMENSIONFINANCIALTAG_DESCRIPTION_VERSION,\n    dft8.description AS DIMENSIONFINANCIALTAG_DESCRIPTION_FOAM_SOURCED,\n    dft9.description AS DIMENSIONFINANCIALTAG_DESCRIPTION_M_SALES_DISTRI,\n    dft10.description AS DIMENSIONFINANCIALTAG_DESCRIPTION_PROJECTS,\n    dft11.description AS DIMENSIONFINANCIALTAG_DESCRIPTION_SITE,\n    dpt2.name AS DIRPARTYTABLE2_NAME_STORE,\n    dpt3.name AS DIRPARTYTABLE3_NAME_BUSINESS_UNIT,\n    LEDGERDIMENSION_MODIFIEDDATETIME AS LATEST_MODIFIEDDATETIME\nfrom\n    (\n        select distinct\n            davsi1.dimensionattributevalueset,\n            max(\n                case\n                    when lower(da1.name) = 'a_department' Then davsi1.displayvalue\n                    else null\n                end\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as DISPLAYVALUE_A_DEPARTMENT,\n            max(\n                case\n                    when lower(da1.name) = 'b_intercompany' then davsi1.displayvalue\n                    else null\n                end\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as DISPLAYVALUE_B_INTERCOMPANY,\n            max(\n                case\n                    when lower(da1.name) = 'c_sales_channel' then davsi1.displayvalue\n                    else null\n                end\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as DISPLAYVALUE_C_SALES_CHANNEL,\n            max(\n                case\n                    when lower(da1.name) = 'd_type' then davsi1.displayvalue\n                    else null\n                end\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as DISPLAYVALUE_D_TYPE,\n            max(\n                case\n                    when lower(da1.name) = 'e_category' then davsi1.displayvalue\n                    else null\n                end\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as DISPLAYVALUE_E_CATEGORY,\n            max(\n                case\n                    when lower(da1.name) = 'f_family' then davsi1.displayvalue\n                    else null\n                end\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as DISPLAYVALUE_F_FAMILY,\n            max(\n                case\n                    when lower(da1.name) = 'g_size' then davsi1.displayvalue\n                    else null\n                end\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as DISPLAYVALUE_G_SIZE,\n            max(\n                case\n                    when lower(da1.name) = 'h_version' then davsi1.displayvalue\n                    else null\n                end\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as DISPLAYVALUE_H_VERSION,\n            max(\n                case\n                    when lower(da1.name) = 'i_customer' then davsi1.displayvalue\n                    else null\n                end\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as DISPLAYVALUE_I_CUSTOMER,\n            max(\n                case\n                    when lower(da1.name) = 'j_vendor' then davsi1.displayvalue\n                    else null\n                end\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as DISPLAYVALUE_J_VENDOR,\n            max(\n                case\n                    when lower(da1.name) = 'k_foam_sourced' then davsi1.displayvalue\n                    else null\n                end\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as DISPLAYVALUE_K_FOAM_SOURCED,\n            max(\n                case\n                    when lower(da1.name) = 'l_store' then davsi1.displayvalue\n                    else null\n                end\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as DISPLAYVALUE_L_STORE,\n            max(\n                case\n                    when lower(da1.name) = 'm_sales_distri' then davsi1.displayvalue\n                    else null\n                end\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as DISPLAYVALUE_M_SALES_DISTRI,\n            max(\n                case\n                    when lower(da1.name) = 'businessunit' then davsi1.displayvalue\n                    else null\n                end\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as DISPLAYVALUE_BUSINESS_UNIT,\n            max(\n                case\n                    when lower(da1.name) = 'mainaccount' then davsi1.displayvalue --davsi1.displayvalue\n                    else null\n                end\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as DISPLAYVALUE_MAIN_ACCOUNT,\n            max(\n                case\n                    when lower(da1.name) = 'projects' then davsi1.displayvalue\n                    else null\n                end\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as DISPLAYVALUE_PROJECTS,\n            max(\n                case\n                    when lower(da1.name) = 'site' then davsi1.displayvalue\n                    else null\n                end\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as DISPLAYVALUE_SITE,\n            max(\n                (\n                    select\n                        max(i)\n                    from\n                        (\n                            values\n                                (davsi1.modifieddatetime),\n                                (davc1.modifieddatetime),\n                                (dav1.modifieddatetime),\n                                (da1.modifieddatetime),\n                                (desc1.desc_modifieddatetime)\n                        ) as t(i)\n                )\n            ) over (\n                partition by\n                    davsi1.dimensionattributevalueset\n            ) as  LEDGERDIMENSION_MODIFIEDDATETIME\n\n        From \n\t\t\tdataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattributevaluesetitem davsi1\n            left join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattributevaluecombination davc1 on davsi1.dimensionattributevalue = davc1.recid\n            left join  (Select  t1.recid \n\t\t\t\t\t\tFrom dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.custtable  t1               \n\t\t\t\t\t\tCross Join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dirpartytable t2\n\t\t\t\t\t\t Where\n    (\n        t1.party = t2.recid\n        And ( t1.partition = t2.partition )\n    )) As dact1  \n\t\t\ton davsi1.dimensionattributevalue = dact1.recid\n            left join (Select t3.recid From dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.vendtable  t3               \n\t\t\t\t\t\tCross Join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dirpartytable t2\n\t\t\t\t\t\t Where\n    (\n        t3.party = t2.recid\n        And ( t3.partition = t2.partition )\n    )) As davt1 \n\ton davsi1.dimensionattributevalue = davt1.recid\n            left join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattributevalue dav1 on davsi1.dimensionattributevalue = dav1.recid\n            left join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattribute da1 on dav1.dimensionattribute = da1.recid\n            left join (\n                select\n                    dft1.value,\n                    da2.name,\n                    dft1.description,\n                    (\n                        select\n                            max(i)\n                        from\n                            (\n                                values\n                                    (dft1.modifieddatetime),\n                                    (dadc1.modifieddatetime),\n                                    (da2.modifieddatetime)\n                            ) as t (i)\n                    ) as desc_modifieddatetime\n                from\n                    dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionfinancialtag dft1\n                    left join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattributedircategory dadc1 on dft1.financialtagcategory = dadc1.dircategory\n                    left join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionattribute da2 on dadc1.dimensionattribute = da2.recid\n            ) desc1 on davsi1.displayvalue = desc1.value\n            and da1.name = desc1.name\n    ) def1\n    left join (\n        Select omoperatingunitnumber\n\t ,max(d1.name) As name\n From\n    dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.omoperatingunit a1\n\tInner Join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dirpartytable d1\n\tOn a1.recid = d1.recid\n\tGroup By omoperatingunitnumber\n    ) As dpt1 \n\tOn def1.DISPLAYVALUE_A_DEPARTMENT = dpt1.omoperatingunitnumber\n    left join (\n        select\n            value,\n            max(description) as description\n        from\n            dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionfinancialtag\n        group by\n            value\n    ) dft1 on def1.DISPLAYVALUE_B_INTERCOMPANY = dft1.value\n    left join (\n        select\n            value,\n            max(description) as description\n        from\n            dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionfinancialtag\n        group by\n            value\n    ) dft2 on def1.DISPLAYVALUE_C_SALES_CHANNEL = dft2.value\n    left join (\n        select\n            value,\n            max(description) as description\n        from\n            dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionfinancialtag\n        group by\n            value\n    ) dft3 on def1.DISPLAYVALUE_D_TYPE = dft3.value\n    left join (\n        select\n            value,\n            max(description) as description\n        from\n            dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionfinancialtag\n        group by\n            value\n    ) dft4 on def1.DISPLAYVALUE_E_CATEGORY = dft4.value\n    left join (\n        select\n            value,\n            max(description) as description\n        from\n            dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionfinancialtag\n        group by\n            value\n    ) dft5 on def1.DISPLAYVALUE_K_FOAM_SOURCED = dft5.value\n    left join (\n        select\n            value,\n            max(description) as description\n        from\n            dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionfinancialtag\n        group by\n            value\n    ) dft6 on def1.DISPLAYVALUE_G_SIZE = dft6.value\n    left join (\n        select\n            value,\n            max(description) as description\n        from\n            dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionfinancialtag\n        group by\n            value\n    ) dft7 on def1.DISPLAYVALUE_H_VERSION = dft7.value\n    left join (\n        select\n            value,\n            max(description) as description\n        from\n            dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionfinancialtag\n        group by\n            value\n    ) dft8 on def1.DISPLAYVALUE_H_VERSION = dft8.value\n    left join (\n        select\n            value,\n            max(description) as description\n        from\n            dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionfinancialtag\n        group by\n            value\n    ) dft9 on def1.DISPLAYVALUE_M_SALES_DISTRI = dft9.value\n    left join (\n        select\n            value,\n            max(description) as description\n        from\n            dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionfinancialtag\n        group by\n            value\n    ) dft10 on def1.DISPLAYVALUE_PROJECTS = dft10.value\n    left join (\n        select\n            value,\n            max(description) as description\n        from\n            dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dimensionfinancialtag\n        group by\n            value\n    ) dft11 on def1.DISPLAYVALUE_SITE = dft11.value\n    left join (\n        Select omoperatingunitnumber\n\t ,max(d2.name) As name\n From\n    dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.omoperatingunit a2\n\tInner Join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dirpartytable d2\n\tOn a2.recid = d2.recid\n\tGroup By omoperatingunitnumber\n    ) dpt2 on def1.DISPLAYVALUE_L_STORE = dpt2.omoperatingunitnumber\n    left join (\n        Select omoperatingunitnumber\n\t ,max(d3.name) As name\n From\n    dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.omoperatingunit a3\n\tInner Join dataverse_nalatst_cds2_workspace_unqe092999b0ee2ee1190466045bda8c.dbo.dirpartytable d3\n\tOn a3.recid = d3.recid\n\tGroup By omoperatingunitnumber\n    ) As dpt3 \n\tOn def1.DISPLAYVALUE_BUSINESS_UNIT = dpt3.omoperatingunitnumber\n    where \nLEDGERDIMENSION_MODIFIEDDATETIME > '10/1/2024'",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"name": "DIMENSIONATTRIBUTEVALUESET",
																"type": "Int64",
																"physicalType": "bigint"
															},
															"sink": {
																"name": "DIMENSIONATTRIBUTEVALUESET",
																"type": "Int64",
																"physicalType": "INT_64"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_A_DEPARTMENT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_A_DEPARTMENT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_B_INTERCOMPANY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_B_INTERCOMPANY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_C_SALES_CHANNEL",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_C_SALES_CHANNEL",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_D_TYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_D_TYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_E_CATEGORY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_E_CATEGORY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_F_FAMILY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_F_FAMILY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_G_SIZE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_G_SIZE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_H_VERSION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_H_VERSION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_I_CUSTOMER",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_I_CUSTOMER",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_J_VENDOR",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_J_VENDOR",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_K_FOAM_SOURCED",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_K_FOAM_SOURCED",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_L_STORE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_L_STORE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_M_SALES_DISTRI",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_M_SALES_DISTRI",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_BUSINESS_UNIT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_BUSINESS_UNIT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_MAIN_ACCOUNT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_MAIN_ACCOUNT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_PROJECTS",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_PROJECTS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DISPLAYVALUE_SITE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DISPLAYVALUE_SITE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LEDGERDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "LEDGERDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE1_NAME_DEPARTMENT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIRPARTYTABLE1_NAME_DEPARTMENT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_INTERCOMPANY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_INTERCOMPANY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_SALES_CHANNEL",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_SALES_CHANNEL",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_TYPE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_TYPE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_CATEGORY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_CATEGORY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_FAMILY",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_FAMILY",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_SIZE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_SIZE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_VERSION",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_VERSION",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_FOAM_SOURCED",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_FOAM_SOURCED",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_M_SALES_DISTRI",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_M_SALES_DISTRI",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_PROJECTS",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_PROJECTS",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_SITE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIMENSIONFINANCIALTAG_DESCRIPTION_SITE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE2_NAME_STORE",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIRPARTYTABLE2_NAME_STORE",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "DIRPARTYTABLE3_NAME_BUSINESS_UNIT",
																"type": "String",
																"physicalType": "nvarchar"
															},
															"sink": {
																"name": "DIRPARTYTABLE3_NAME_BUSINESS_UNIT",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "datetime"
															},
															"sink": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime",
																"physicalType": "INT_96"
															}
														},
														{
															"source": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															},
															"sink": {
																"name": "HK_JOB_RUN_ID",
																"type": "String",
																"physicalType": "UTF8"
															}
														},
														{
															"source": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "HK_SOURCE_NAME",
																"type": "String",
																"physicalType": "UTF8"
															}
														}
													],
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_fabric_wh",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_parquet",
													"type": "DatasetReference",
													"parameters": {
														"p_directory": {
															"value": "@pipeline().parameters.p_temp_directory",
															"type": "Expression"
														},
														"p_root_system": {
															"value": "@pipeline().globalParameters.rootDir",
															"type": "Expression"
														},
														"p_file_name": {
															"value": "@pipeline().parameters.p_temp_file_nm",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "d365_raw_load_failure_notification",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "ledgerdimension_to_adls_d365",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('ledgerdimension_to_adls_d365').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@replace(replace(replace(activity('ledgerdimension_to_adls_d365').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('ledgerdimension_to_adls_d365').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('ledgerdimension_to_adls_d365').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "sql_d365_load_to_raw_fail",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "d365_raw_load_failure_notification",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": {
													"value": "@activity('ledgerdimension_to_adls_d365').Error['message']",
													"type": "Expression"
												},
												"errorCode": "500"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "df_load_dim_ledger_dimension",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "switch_nala",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_load_dim_ledger_dimension",
								"type": "DataFlowReference",
								"parameters": {
									"df_prev_max_timestamp": {
										"value": "'@{variables('v_prv_max_upd_timestamp')}'",
										"type": "Expression"
									},
									"df_last_mod_tmstmp_opsfinancemapping": {
										"value": "'@{variables('v_last_mod_tmstmp_opsfinancemapping')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SrcLedgerDimension": {
										"p_directory": {
											"value": "@pipeline().parameters.p_temp_directory",
											"type": "Expression"
										},
										"p_root_system": {
											"value": "@pipeline().globalParameters.rootDir",
											"type": "Expression"
										},
										"p_file_name": {
											"value": "@pipeline().parameters.p_temp_file_nm",
											"type": "Expression"
										}
									},
									"SrcOpsFinanceMapping": {
										"p_src_directory": {
											"value": "@pipeline().parameters.p_src_directory",
											"type": "Expression"
										},
										"p_src_file_name": {
											"value": "@pipeline().parameters.p_src_file_nm",
											"type": "Expression"
										},
										"p_src_root_system": {
											"value": "@pipeline().globalParameters.rootDir",
											"type": "Expression"
										},
										"p_sheet_name": {
											"value": "@pipeline().parameters.p_src_sheet_nm",
											"type": "Expression"
										}
									},
									"InsertLedgerDimension": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_tgt_raw_table_nm",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_rawDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IR-Snowflake-NALA",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "get_last_modifieddatetime_OpsFinanceMapping",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_delimited_csv",
								"type": "DatasetReference",
								"parameters": {
									"p_directory": {
										"value": "@pipeline().parameters.p_src_directory",
										"type": "Expression"
									},
									"p_file_nm": {
										"value": "@pipeline().parameters.p_src_file_nm",
										"type": "Expression"
									},
									"p_root_system": {
										"value": "@pipeline().globalParameters.rootDir",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "set_last_mod_tmstmp_OpsFinanceMapping",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get_last_modifieddatetime_OpsFinanceMapping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_last_mod_tmstmp_opsfinancemapping",
							"value": {
								"value": "@coalesce(activity('get_last_modifieddatetime_OpsFinanceMapping').output.lastModified,'1950-01-01 00:00:00')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_src_table_nm": {
						"type": "string",
						"defaultValue": "LEDGERDIMENSION"
					},
					"p_src_schema_nm": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"p_tgt_raw_table_nm": {
						"type": "string",
						"defaultValue": "LEDGERDIMENSION"
					},
					"p_tgt_raw_schema_nm": {
						"type": "string",
						"defaultValue": "AX_NALA"
					},
					"p_tgt_curate_table_nm": {
						"type": "string",
						"defaultValue": "DIM_LEDGER_DIMENSION"
					},
					"p_tgt_curate_schema_nm": {
						"type": "string",
						"defaultValue": "GLOBAL"
					},
					"p_src_nm": {
						"type": "string",
						"defaultValue": "AXNALA"
					},
					"p_src_directory": {
						"type": "string",
						"defaultValue": "business_files"
					},
					"p_temp_file_nm": {
						"type": "string",
						"defaultValue": "ledgerdimension_nala.snappy.parquet"
					},
					"p_src_file_nm": {
						"type": "string",
						"defaultValue": "OpsFinance_Mapping.xlsx"
					},
					"p_temp_directory": {
						"type": "string",
						"defaultValue": "temp_files"
					},
					"p_src_code": {
						"type": "string",
						"defaultValue": "1"
					},
					"p_src_sheet_nm": {
						"type": "string",
						"defaultValue": "BU_Mapping"
					}
				},
				"variables": {
					"v_prv_max_upd_timestamp": {
						"type": "String"
					},
					"v_last_mod_tmstmp_opsfinancemapping": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-18T16:40:02Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pp_ax_ledgerjournaltrans_to_fact_ledger_journal_transactions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "raw_to_curate_sp_call",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "df_load_fact_ledger_journal_transactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_snowflake",
							"type": "LinkedServiceReference",
							"parameters": {
								"ls_DbName": {
									"value": "@pipeline().globalParameters.snow_auditDb",
									"type": "Expression"
								},
								"ls_Env": {
									"value": "@pipeline().globalParameters.environment",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('CALL ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_auditDb,'.CONTROL.SP_TASK_INITIALIZE(','''',pipeline().RunId,'''',',','''',pipeline().globalParameters.environment,'''',',','''',pipeline().parameters.p_tgt_curate_table_nm,'''',',',pipeline().parameters.p_src_code,')')",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "stored_procedure_failure_notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pp_adf_pipeline_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subscription": {
									"value": "@pipeline().globalParameters.subscriptionId",
									"type": "Expression"
								},
								"resourceGroup": {
									"value": "@pipeline().globalParameters.resourceGroup",
									"type": "Expression"
								},
								"runId": {
									"value": "@coalesce(pipeline().RunId, -1)",
									"type": "Expression"
								},
								"name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"triggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"status": {
									"value": "@activity('raw_to_curate_sp_call').Status",
									"type": "Expression"
								},
								"message": {
									"value": "@activity('raw_to_curate_sp_call').Error['message']",
									"type": "Expression"
								},
								"executionEndTime": {
									"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
									"type": "Expression"
								},
								"runDuration": {
									"value": "@activity('raw_to_curate_sp_call').Duration",
									"type": "Expression"
								},
								"teamWebhookUrl": {
									"value": "@pipeline().globalParameters.teamsWebhookUrl",
									"type": "Expression"
								},
								"notificationTime": {
									"value": "@utcNow()",
									"type": "Expression"
								},
								"taskName": {
									"value": "@pipeline().parameters.p_tgt_curate_table_nm",
									"type": "Expression"
								},
								"taskStepNumber": {
									"value": "@pipeline().parameters.p_src_code",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "lkp_raw_last_modified_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"query": {
									"value": "@concat('select max(to_varchar(LATEST_MODIFIEDDATETIME::timestamp, ''','yyyy-mm-dd hh24:mi:ss',''')) as max_date from ',pipeline().globalParameters.environment,'_',pipeline().globalParameters.snow_rawDb,'.',pipeline().parameters.p_tgt_raw_schema_nm, '.', pipeline().parameters.p_tgt_raw_table_nm)",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "ds_snowflake",
								"type": "DatasetReference",
								"parameters": {
									"p_tgt_table_name": {
										"value": "@pipeline().parameters.p_tgt_raw_table_nm",
										"type": "Expression"
									},
									"p_tgt_schema_name": {
										"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
										"type": "Expression"
									},
									"p_ls_DbName": {
										"value": "@pipeline().globalParameters.snow_rawDb",
										"type": "Expression"
									},
									"p_ls_Env": {
										"value": "@pipeline().globalParameters.environment",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "set_last_modified_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "lkp_raw_last_modified_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_prev_max_timestamp",
							"value": {
								"value": "@coalesce(activity('lkp_raw_last_modified_date').output.firstRow.max_date, '1950-01-01 00:00:00')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "switch_nala_retail_d365",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "set_last_modified_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.p_src_code",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "1",
									"activities": [
										{
											"name": "sql_to_raw_nala",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"additionalColumns": [
														{
															"name": "HK_JOB_RUN_ID",
															"value": {
																"value": "@coalesce(pipeline().RunId, -1)",
																"type": "Expression"
															}
														},
														{
															"name": "HK_SOURCE_NAME",
															"value": {
																"value": "@pipeline().parameters.p_src_nm",
																"type": "Expression"
															}
														}
													],
													"sqlReaderQuery": {
														"value": "SELECT\nljt1.recid as RECID\n,ljt1.currencycode as CURRENCYCODE\n,ljt1.defaultdimension as DEFAULTDIMENSION\n,ljt1.offsetdefaultdimension as OFFSETDEFAULTDIMENSION\n,ljt1.ledgerdimension as LEDGERDIMENSION\n,ljt1.offsetledgerdimension as OFFSETLEDGERDIMENSION\n,ljt1.taxcode as TAXCODE\n,ljt1.taxgroup as TAXGROUP\n,ljt1.approver as APPROVER\n,ljt1.accounttype as ACCOUNTTYPE\n,ljt1.dxcmbintegrationtranstype as DXCMBINTEGRATIONTRANSTYPE\n,ljt1.offsetaccounttype as OFFSETACCOUNTTYPE\n,ljt1.transactiontype as TRANSACTIONTYPE\n,ljt1.approved as APPROVED\n,ljt1.reverseentry as REVERSEENTRY\n,ljt1.documentdate as DOCUMENTDATE\n,ljt1.transdate as TRANSDATE\n,ljt1.documentnum as DOCUMENTNUM\n,ljt1.invoice as INVOICE\n,ljt1.journalnum as JOURNALNUM\n,ljt1.txt as TXT\n,ljt1.voucher as VOUCHER\n,ljt1.dataareaid as DATAAREAID\n,ljt1.linenum as LINENUM\n,ljt1.qty as QTY\n,ljt1.amountcurcredit as AMOUNTCURCREDIT\n,ljt1.amountcurdebit as AMOUNTCURDEBIT\n,ljt1.modifieddatetime as MODIFIEDDATETIME\n,davc1.mainaccount as DIMENSIONATTRIBUTEVALUECOMBINATION_MAINACCOUNT\n,davc1.modifieddatetime as DIMENSIONATTRIBUTEVALUECOMBINATION_MODIFIEDDATETIME\n,def1.MAIN_ACCOUNT as DEFAULTDIMENSION_MAIN_ACCOUNT\n,def1.I_CUSTOMER as DEFAULTDIMENSION_I_CUSTOMER\n,def1.DEFAULTDIMENSION_MODIFIEDDATETIME\n,tet1.enumvaluelabel as TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_ACCOUNTTYPE\n,tet2.enumvaluelabel as TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE\n,tet3.enumvaluelabel as TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_OFFSETACCOUNTTYPE\n,tet4.enumvaluelabel as TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_TRANSACTIONTYPE\n,ljt2.createddatetime as LEDGERJOURNALTABLE_CREATEDDATETIME\n,ljt2.reversedate as LEDGERJOURNALTABLE_REVERSEDATE\n,ljt2.createdby as LEDGERJOURNALTABLE_CREATEDBY\n,ljt2.name as LEDGERJOURNALTABLE_NAME\n,ljt2.journalname as LEDGERJOURNALTABLE_JOURNALNAME\n,ljt2.posted as LEDGERJOURNALTABLE_POSTED\n,ljt2.modifieddatetime as LEDGERJOURNALTABLE_MODIFIEDDATETIME\n,(SELECT MAX(LastUpdateDate) \n FROM (VALUES (ljt1.modifieddatetime),\n  (isnull(davc1.modifieddatetime, '1950-01-01'))\n  , (isnull(def1.DEFAULTDIMENSION_MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(ljt2.modifieddatetime, '1950-01-01'))\n ) AS UpdateDate(LastUpdateDate)) AS LATEST_MODIFIEDDATETIME\nFROM\ndbo.LEDGERJOURNALTRANS ljt1\nleft join dbo.DIMENSIONATTRIBUTEVALUECOMBINATION davc1 on\n\tljt1.LEDGERDIMENSION = davc1.RECID\nleft join (select distinct ljt1.LEDGERDIMENSION\n\t\t\t\t, max(\n\t\t\t\t\tcase when da1.NAME = 'MainAccount' then dalv1.DISPLAYVALUE\n\t\t\t\t\t\telse null\n\t\t\t\t\t\tend\n\t\t\t\t\t) over (partition by ljt1.LEDGERDIMENSION) as MAIN_ACCOUNT\n\t\t\t\t, max(\n\t\t\t\t\tcase when da1.NAME = 'I_Customer' then dalv1.DISPLAYVALUE\n\t\t\t\t\t\telse null\n\t\t\t\t\t\tend\n\t\t\t\t\t) over (partition by ljt1.LEDGERDIMENSION) as I_CUSTOMER\n\t\t\t\t, max(\n\t\t\t\t\t(select max(i) from (values (davgc1.MODIFIEDDATETIME), (dalv1.MODIFIEDDATETIME), (dav1.MODIFIEDDATETIME), (da1.MODIFIEDDATETIME)) AS T(i))\n\t\t\t\t\t) over (partition by ljt1.LEDGERDIMENSION) as DEFAULTDIMENSION_MODIFIEDDATETIME\n\t\t\tfrom (select distinct LEDGERDIMENSION from dbo.LEDGERJOURNALTRANS) ljt1\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEVALUEGROUPCOMBINATION davgc1 on\n\t\t\t\tljt1.LEDGERDIMENSION = davgc1.DIMENSIONATTRIBUTEVALUECOMBINATION\n\t\t\tleft join dbo.DIMENSIONATTRIBUTELEVELVALUE dalv1 on\n\t\t\t\tdavgc1.DIMENSIONATTRIBUTEVALUEGROUP = dalv1.DIMENSIONATTRIBUTEVALUEGROUP\n\t\t\tleft join dbo.DIMENSIONATTRIBUTEVALUE dav1 on\n\t\t\t\tdalv1.DIMENSIONATTRIBUTEVALUE = dav1.RECID\n\t\t\tleft join dbo.DIMENSIONATTRIBUTE da1 on\n\t\t\t\tdav1.DIMENSIONATTRIBUTE = da1.RECID\n\t\t\t) def1 on\n\tljt1.LEDGERDIMENSION = def1.LEDGERDIMENSION\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'LedgerJournalACType'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet1 on\n\tljt1.ACCOUNTTYPE = tet1.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'DXCMBIntegrationTransType'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet2 on\n\tljt1.DXCMBINTEGRATIONTRANSTYPE = tet2.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'LedgerJournalACType'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet3 on\n\tljt1.OFFSETACCOUNTTYPE = tet3.ENUMVALUE\nleft join (select ENUMNAME, ENUMVALUE\n\t\t\t, max(ENUMVALUELABEL) as ENUMVALUELABEL\n\t\tfrom dbo.TIMEXTENDERENUMTABLE\n\t\twhere ENUMNAME = 'LedgerTransType'\n\t\tgroup by ENUMNAME, ENUMVALUE) tet4 on\n\tljt1.TRANSACTIONTYPE = tet4.ENUMVALUE\nleft join dbo.LEDGERJOURNALTABLE ljt2 on\n\tljt1.DATAAREAID = ljt2.DATAAREAID and\n\tljt1.JOURNALNUM = ljt2.JOURNALNUM \n    where isnull(ljt2.POSTED, 0) = 1 and (SELECT MAX(LastUpdateDate) \n FROM (VALUES (ljt1.modifieddatetime),\n  (isnull(davc1.modifieddatetime, '1950-01-01'))\n  , (isnull(def1.DEFAULTDIMENSION_MODIFIEDDATETIME, '1950-01-01'))\n  , (isnull(ljt2.modifieddatetime, '1950-01-01'))\n ) AS UpdateDate(LastUpdateDate)) > '@{variables('v_prev_max_timestamp')}' ",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															},
															"sink": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "RECID",
																"type": "Int64"
															},
															"sink": {
																"name": "RECID",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "CURRENCYCODE",
																"type": "String"
															},
															"sink": {
																"name": "CURRENCYCODE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64"
															},
															"sink": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "OFFSETDEFAULTDIMENSION",
																"type": "Int64"
															},
															"sink": {
																"name": "OFFSETDEFAULTDIMENSION",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "LEDGERDIMENSION",
																"type": "Int64"
															},
															"sink": {
																"name": "LEDGERDIMENSION",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "OFFSETLEDGERDIMENSION",
																"type": "Int64"
															},
															"sink": {
																"name": "OFFSETLEDGERDIMENSION",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "TAXCODE",
																"type": "String"
															},
															"sink": {
																"name": "TAXCODE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "TAXGROUP",
																"type": "String"
															},
															"sink": {
																"name": "TAXGROUP",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "APPROVER",
																"type": "Int64"
															},
															"sink": {
																"name": "APPROVER",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "ACCOUNTTYPE",
																"type": "Int32"
															},
															"sink": {
																"name": "ACCOUNTTYPE",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "DXCMBINTEGRATIONTRANSTYPE",
																"type": "Int32"
															},
															"sink": {
																"name": "DXCMBINTEGRATIONTRANSTYPE",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "OFFSETACCOUNTTYPE",
																"type": "Int32"
															},
															"sink": {
																"name": "OFFSETACCOUNTTYPE",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "TRANSACTIONTYPE",
																"type": "Int32"
															},
															"sink": {
																"name": "TRANSACTIONTYPE",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "APPROVED",
																"type": "Int32"
															},
															"sink": {
																"name": "APPROVED",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "REVERSEENTRY",
																"type": "Int32"
															},
															"sink": {
																"name": "REVERSEENTRY",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "DOCUMENTDATE",
																"type": "DateTime"
															},
															"sink": {
																"name": "DOCUMENTDATE",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "TRANSDATE",
																"type": "DateTime"
															},
															"sink": {
																"name": "TRANSDATE",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "DOCUMENTNUM",
																"type": "String"
															},
															"sink": {
																"name": "DOCUMENTNUM",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "INVOICE",
																"type": "String"
															},
															"sink": {
																"name": "INVOICE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "JOURNALNUM",
																"type": "String"
															},
															"sink": {
																"name": "JOURNALNUM",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "TXT",
																"type": "String"
															},
															"sink": {
																"name": "TXT",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "VOUCHER",
																"type": "String"
															},
															"sink": {
																"name": "VOUCHER",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "DATAAREAID",
																"type": "String"
															},
															"sink": {
																"name": "DATAAREAID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "LINENUM",
																"type": "Decimal"
															},
															"sink": {
																"name": "LINENUM",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "QTY",
																"type": "Decimal"
															},
															"sink": {
																"name": "QTY",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "AMOUNTCURCREDIT",
																"type": "Decimal"
															},
															"sink": {
																"name": "AMOUNTCURCREDIT",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "AMOUNTCURDEBIT",
																"type": "Decimal"
															},
															"sink": {
																"name": "AMOUNTCURDEBIT",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "DIMENSIONATTRIBUTEVALUECOMBINATION_MAINACCOUNT",
																"type": "Int64"
															},
															"sink": {
																"name": "DIMENSIONATTRIBUTEVALUECOMBINATION_MAINACCOUNT",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "DIMENSIONATTRIBUTEVALUECOMBINATION_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "DIMENSIONATTRIBUTEVALUECOMBINATION_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_MAIN_ACCOUNT",
																"type": "String"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_MAIN_ACCOUNT",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_I_CUSTOMER",
																"type": "String"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_I_CUSTOMER",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_ACCOUNTTYPE",
																"type": "String"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_ACCOUNTTYPE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE",
																"type": "String"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_OFFSETACCOUNTTYPE",
																"type": "String"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_OFFSETACCOUNTTYPE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_TRANSACTIONTYPE",
																"type": "String"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_TRANSACTIONTYPE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTABLE_CREATEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "LEDGERJOURNALTABLE_CREATEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTABLE_REVERSEDATE",
																"type": "DateTime"
															},
															"sink": {
																"name": "LEDGERJOURNALTABLE_REVERSEDATE",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTABLE_CREATEDBY",
																"type": "String"
															},
															"sink": {
																"name": "LEDGERJOURNALTABLE_CREATEDBY",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTABLE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "LEDGERJOURNALTABLE_NAME",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTABLE_JOURNALNAME",
																"type": "String"
															},
															"sink": {
																"name": "LEDGERJOURNALTABLE_JOURNALNAME",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTABLE_POSTED",
																"type": "Int32"
															},
															"sink": {
																"name": "LEDGERJOURNALTABLE_POSTED",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTABLE_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "LEDGERJOURNALTABLE_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														}
													],
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_sql_server",
													"type": "DatasetReference",
													"parameters": {
														"p_src_table_name": {
															"value": "@pipeline().parameters.p_src_table_nm",
															"type": "Expression"
														},
														"p_src_schema_name": {
															"value": "@pipeline().parameters.p_src_schema_nm",
															"type": "Expression"
														},
														"p_ls_serverName": {
															"value": "@pipeline().globalParameters.nala_sql_serverName",
															"type": "Expression"
														},
														"p_ls_dbName": {
															"value": "@pipeline().globalParameters.nala_sql_dbName",
															"type": "Expression"
														},
														"p_ls_sqlUsername": {
															"value": "@pipeline().globalParameters.sql_userName",
															"type": "Expression"
														},
														"p_ls_sqlPassword": {
															"value": "@pipeline().globalParameters.sql_password",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_parquet",
													"type": "DatasetReference",
													"parameters": {
														"p_directory": {
															"value": "@pipeline().parameters.p_temp_directory",
															"type": "Expression"
														},
														"p_root_system": {
															"value": "@pipeline().globalParameters.rootDir",
															"type": "Expression"
														},
														"p_file_name": {
															"value": "@pipeline().parameters.p_temp_file_nm",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "nala_raw_load_failure_notification",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "sql_to_raw_nala",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('sql_to_raw_nala').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@replace(replace(replace(activity('sql_to_raw_nala').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('sql_to_raw_nala').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('sql_to_raw_nala').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "sql_nala_load_to_raw_fail",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "nala_raw_load_failure_notification",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": {
													"value": "@activity('sql_to_raw_nala').Error['message']",
													"type": "Expression"
												},
												"errorCode": "500"
											}
										}
									]
								},
								{
									"value": "3",
									"activities": [
										{
											"name": "sql_to_raw_d365",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "WarehouseSource",
													"additionalColumns": [
														{
															"name": "HK_JOB_RUN_ID",
															"value": {
																"value": "@coalesce(pipeline().RunId, -1)",
																"type": "Expression"
															}
														},
														{
															"name": "HK_SOURCE_NAME",
															"value": {
																"value": "@pipeline().parameters.p_src_nm",
																"type": "Expression"
															}
														}
													],
													"sqlReaderQuery": {
														"value": "@concat('select\nljt1.recid as RECID\n,ljt1.currencycode as CURRENCYCODE\n,ljt1.defaultdimension as DEFAULTDIMENSION\n,ljt1.offsetdefaultdimension as OFFSETDEFAULTDIMENSION\n,ljt1.ledgerdimension as LEDGERDIMENSION\n,ljt1.offsetledgerdimension as OFFSETLEDGERDIMENSION\n,ljt1.taxcode as TAXCODE\n,ljt1.taxgroup as TAXGROUP\n,ljt1.approver as APPROVER\n,ljt1.accounttype as ACCOUNTTYPE\n,ljt1.dxcmbintegrationtranstype as DXCMBINTEGRATIONTRANSTYPE\n,ljt1.offsetaccounttype as OFFSETACCOUNTTYPE\n,ljt1.transactiontype as TRANSACTIONTYPE\n,ljt1.approved as APPROVED\n,ljt1.reverseentry as REVERSEENTRY\n,ljt1.documentdate as DOCUMENTDATE\n,ljt1.transdate as TRANSDATE\n,ljt1.documentnum as DOCUMENTNUM\n,ljt1.invoice as INVOICE\n,ljt1.journalnum as JOURNALNUM\n,ljt1.txt as TXT\n,ljt1.voucher as VOUCHER\n,ljt1.dataareaid as DATAAREAID\n,ljt1.linenum as LINENUM\n,ljt1.qty as QTY\n,ljt1.amountcurcredit as AMOUNTCURCREDIT\n,ljt1.amountcurdebit as AMOUNTCURDEBIT\n,ljt1.modifieddatetime as MODIFIEDDATETIME\n,davc1.mainaccount as DIMENSIONATTRIBUTEVALUECOMBINATION_MAINACCOUNT\n,davc1.modifieddatetime as DIMENSIONATTRIBUTEVALUECOMBINATION_MODIFIEDDATETIME\n,def1.main_account as DEFAULTDIMENSION_MAIN_ACCOUNT\n,def1.i_customer as DEFAULTDIMENSION_I_CUSTOMER\n,def1.defaultdimension_modifieddatetime as DEFAULTDIMENSION_MODIFIEDDATETIME\n,tet1.enumvaluelabel as TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_ACCOUNTTYPE\n,tet2.enumvaluelabel as TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE\n,tet3.enumvaluelabel as TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_OFFSETACCOUNTTYPE\n,tet4.enumvaluelabel as TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_TRANSACTIONTYPE\n,ljt2.createddatetime as LEDGERJOURNALTABLE_CREATEDDATETIME\n,ljt2.reversedate as LEDGERJOURNALTABLE_REVERSEDATE\n,ljt2.createdby as LEDGERJOURNALTABLE_CREATEDBY\n,ljt2.name as LEDGERJOURNALTABLE_NAME\n,ljt2.journalname as LEDGERJOURNALTABLE_JOURNALNAME\n,ljt2.posted as LEDGERJOURNALTABLE_POSTED\n,ljt2.modifieddatetime as LEDGERJOURNALTABLE_MODIFIEDDATETIME\n,(select max(lastupdatedate) \n from (values (ljt1.modifieddatetime),\n  (isnull(davc1.modifieddatetime, ''1950-01-01''))\n  , (isnull(def1.defaultdimension_modifieddatetime, ''1950-01-01''))\n  , (isnull(ljt2.modifieddatetime, ''1950-01-01''))\n ) as updatedate(lastupdatedate)) AS LATEST_MODIFIEDDATETIME\nfrom\n',pipeline().globalParameters.d365_dbName,'.','ledgerjournaltrans ljt1\nleft join ',pipeline().globalParameters.d365_dbName,'.','dimensionattributevaluecombination davc1 on\n\tljt1.ledgerdimension = davc1.recid\nleft join (select distinct ljt1.ledgerdimension\n\t\t\t\t, max(\n\t\t\t\t\tcase when da1.name = ''mainaccount'' then dalv1.displayvalue\n\t\t\t\t\t\telse null\n\t\t\t\t\t\tend\n\t\t\t\t\t) over (partition by ljt1.ledgerdimension) as main_account\n\t\t\t\t, max(\n\t\t\t\t\tcase when da1.name = ''i_customer'' then dalv1.displayvalue\n\t\t\t\t\t\telse null\n\t\t\t\t\t\tend\n\t\t\t\t\t) over (partition by ljt1.ledgerdimension) as i_customer\n\t\t\t\t, max(\n\t\t\t\t\t(select max(i) from (values (davgc1.modifieddatetime), (dalv1.modifieddatetime), (dav1.modifieddatetime), (da1.modifieddatetime)) as t(i))\n\t\t\t\t\t) over (partition by ljt1.ledgerdimension) as defaultdimension_modifieddatetime\n\t\t\tfrom (select distinct ledgerdimension from ',pipeline().globalParameters.d365_dbName,'.','ledgerjournaltrans) ljt1\n\t\t\tleft join ',pipeline().globalParameters.d365_dbName,'.','dimensionattributevaluegroupcombination davgc1 on\n\t\t\t\tljt1.ledgerdimension = davgc1.dimensionattributevaluecombination\n\t\t\tleft join ',pipeline().globalParameters.d365_dbName,'.','dimensionattributelevelvalue dalv1 on\n\t\t\t\tdavgc1.dimensionattributevaluegroup = dalv1.dimensionattributevaluegroup\n\t\t\tleft join ',pipeline().globalParameters.d365_dbName,'.','dimensionattributevalue dav1 on\n\t\t\t\tdalv1.dimensionattributevalue = dav1.recid\n\t\t\tleft join ',pipeline().globalParameters.d365_dbName,'.','dimensionattribute da1 on\n\t\t\t\tdav1.dimensionattribute = da1.recid\n\t\t\t) def1 on\n\tljt1.ledgerdimension = def1.ledgerdimension\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as enumvaluelabel\n\t\tfrom ',pipeline().globalParameters.d365_dbName,'.','timextenderenumtable\n\t\twhere enumname = ''ledgerjournalactype''\n\t\tgroup by enumname, enumvalue) tet1 on\n\tljt1.accounttype = tet1.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as enumvaluelabel\n\t\tfrom ',pipeline().globalParameters.d365_dbName,'.','timextenderenumtable\n\t\twhere enumname = ''dxcmbintegrationtranstype''\n\t\tgroup by enumname, enumvalue) tet2 on\n\tljt1.dxcmbintegrationtranstype = tet2.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as enumvaluelabel\n\t\tfrom ',pipeline().globalParameters.d365_dbName,'.','timextenderenumtable\n\t\twhere enumname = ''ledgerjournalactype''\n\t\tgroup by enumname, enumvalue) tet3 on\n\tljt1.offsetaccounttype = tet3.enumvalue\nleft join (select enumname, enumvalue\n\t\t\t, max(enumvaluelabel) as enumvaluelabel\n\t\tfrom ',pipeline().globalParameters.d365_dbName,'.','timextenderenumtable\n\t\twhere enumname = ''ledgertranstype''\n\t\tgroup by enumname, enumvalue) tet4 on\n\tljt1.transactiontype = tet4.enumvalue\nleft join ',pipeline().globalParameters.d365_dbName,'.','ledgerjournaltable ljt2 on\n\tljt1.dataareaid = ljt2.dataareaid and\n\tljt1.journalnum = ljt2.journalnum \n    where isnull(ljt2.posted, 0) = 1 and (select max(lastupdatedate) \n from (values (ljt1.modifieddatetime),\n  (isnull(davc1.modifieddatetime, ''1950-01-01''))\n  , (isnull(def1.defaultdimension_modifieddatetime, ''1950-01-01''))\n  , (isnull(ljt2.modifieddatetime, ''1950-01-01''))\n ) as updatedate(lastupdatedate)) \n  > ','''',variables('v_prev_max_timestamp'),'''')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "HK_SOURCE_NAME",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															},
															"sink": {
																"name": "HK_JOB_RUN_ID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "RECID",
																"type": "Int64"
															},
															"sink": {
																"name": "RECID",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "CURRENCYCODE",
																"type": "String"
															},
															"sink": {
																"name": "CURRENCYCODE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64"
															},
															"sink": {
																"name": "DEFAULTDIMENSION",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "OFFSETDEFAULTDIMENSION",
																"type": "Int64"
															},
															"sink": {
																"name": "OFFSETDEFAULTDIMENSION",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "LEDGERDIMENSION",
																"type": "Int64"
															},
															"sink": {
																"name": "LEDGERDIMENSION",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "OFFSETLEDGERDIMENSION",
																"type": "Int64"
															},
															"sink": {
																"name": "OFFSETLEDGERDIMENSION",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "TAXCODE",
																"type": "String"
															},
															"sink": {
																"name": "TAXCODE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "TAXGROUP",
																"type": "String"
															},
															"sink": {
																"name": "TAXGROUP",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "APPROVER",
																"type": "Int64"
															},
															"sink": {
																"name": "APPROVER",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "ACCOUNTTYPE",
																"type": "Int32"
															},
															"sink": {
																"name": "ACCOUNTTYPE",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "DXCMBINTEGRATIONTRANSTYPE",
																"type": "Int32"
															},
															"sink": {
																"name": "DXCMBINTEGRATIONTRANSTYPE",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "OFFSETACCOUNTTYPE",
																"type": "Int32"
															},
															"sink": {
																"name": "OFFSETACCOUNTTYPE",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "TRANSACTIONTYPE",
																"type": "Int32"
															},
															"sink": {
																"name": "TRANSACTIONTYPE",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "APPROVED",
																"type": "Int32"
															},
															"sink": {
																"name": "APPROVED",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "REVERSEENTRY",
																"type": "Int32"
															},
															"sink": {
																"name": "REVERSEENTRY",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "DOCUMENTDATE",
																"type": "DateTime"
															},
															"sink": {
																"name": "DOCUMENTDATE",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "TRANSDATE",
																"type": "DateTime"
															},
															"sink": {
																"name": "TRANSDATE",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "DOCUMENTNUM",
																"type": "String"
															},
															"sink": {
																"name": "DOCUMENTNUM",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "INVOICE",
																"type": "String"
															},
															"sink": {
																"name": "INVOICE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "JOURNALNUM",
																"type": "String"
															},
															"sink": {
																"name": "JOURNALNUM",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "TXT",
																"type": "String"
															},
															"sink": {
																"name": "TXT",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "VOUCHER",
																"type": "String"
															},
															"sink": {
																"name": "VOUCHER",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "DATAAREAID",
																"type": "String"
															},
															"sink": {
																"name": "DATAAREAID",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "LINENUM",
																"type": "Decimal"
															},
															"sink": {
																"name": "LINENUM",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "QTY",
																"type": "Decimal"
															},
															"sink": {
																"name": "QTY",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "AMOUNTCURCREDIT",
																"type": "Decimal"
															},
															"sink": {
																"name": "AMOUNTCURCREDIT",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "AMOUNTCURDEBIT",
																"type": "Decimal"
															},
															"sink": {
																"name": "AMOUNTCURDEBIT",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "DIMENSIONATTRIBUTEVALUECOMBINATION_MAINACCOUNT",
																"type": "Int64"
															},
															"sink": {
																"name": "DIMENSIONATTRIBUTEVALUECOMBINATION_MAINACCOUNT",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "DIMENSIONATTRIBUTEVALUECOMBINATION_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "DIMENSIONATTRIBUTEVALUECOMBINATION_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_MAIN_ACCOUNT",
																"type": "String"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_MAIN_ACCOUNT",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_I_CUSTOMER",
																"type": "String"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_I_CUSTOMER",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "DEFAULTDIMENSION_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_ACCOUNTTYPE",
																"type": "String"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE1_ENUMVALUELABEL_ACCOUNTTYPE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE",
																"type": "String"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE2_ENUMVALUELABEL_DXCMBINTEGRATIONTRANSTYPE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_OFFSETACCOUNTTYPE",
																"type": "String"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE3_ENUMVALUELABEL_OFFSETACCOUNTTYPE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_TRANSACTIONTYPE",
																"type": "String"
															},
															"sink": {
																"name": "TIMEXTENDERENUMTABLE4_ENUMVALUELABEL_TRANSACTIONTYPE",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTABLE_CREATEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "LEDGERJOURNALTABLE_CREATEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTABLE_REVERSEDATE",
																"type": "DateTime"
															},
															"sink": {
																"name": "LEDGERJOURNALTABLE_REVERSEDATE",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTABLE_CREATEDBY",
																"type": "String"
															},
															"sink": {
																"name": "LEDGERJOURNALTABLE_CREATEDBY",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTABLE_NAME",
																"type": "String"
															},
															"sink": {
																"name": "LEDGERJOURNALTABLE_NAME",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTABLE_JOURNALNAME",
																"type": "String"
															},
															"sink": {
																"name": "LEDGERJOURNALTABLE_JOURNALNAME",
																"type": "String"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTABLE_POSTED",
																"type": "Int32"
															},
															"sink": {
																"name": "LEDGERJOURNALTABLE_POSTED",
																"type": "Int64"
															}
														},
														{
															"source": {
																"name": "LEDGERJOURNALTABLE_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "LEDGERJOURNALTABLE_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														},
														{
															"source": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime"
															},
															"sink": {
																"name": "LATEST_MODIFIEDDATETIME",
																"type": "DateTime"
															}
														}
													],
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "ds_fabric_wh",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_parquet",
													"type": "DatasetReference",
													"parameters": {
														"p_directory": {
															"value": "@pipeline().parameters.p_temp_directory",
															"type": "Expression"
														},
														"p_root_system": {
															"value": "@pipeline().globalParameters.rootDir",
															"type": "Expression"
														},
														"p_file_name": {
															"value": "@pipeline().parameters.p_temp_file_nm",
															"type": "Expression"
														}
													}
												}
											]
										},
										{
											"name": "d365_raw_load_failure_notification",
											"type": "ExecutePipeline",
											"dependsOn": [
												{
													"activity": "sql_to_raw_d365",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "pp_adf_pipeline_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"subscription": {
														"value": "@pipeline().globalParameters.subscriptionId",
														"type": "Expression"
													},
													"resourceGroup": {
														"value": "@pipeline().globalParameters.resourceGroup",
														"type": "Expression"
													},
													"runId": {
														"value": "@coalesce(pipeline().RunId, -1)",
														"type": "Expression"
													},
													"name": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"triggerTime": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													},
													"status": {
														"value": "@activity('sql_to_raw_d365').Status",
														"type": "Expression"
													},
													"message": {
														"value": "@replace(replace(replace(activity('sql_to_raw_d365').Error['message'], '\\','\\\\'), '''', ''), '\"' , '')",
														"type": "Expression"
													},
													"executionEndTime": {
														"value": "@activity('sql_to_raw_d365').ExecutionEndTime",
														"type": "Expression"
													},
													"runDuration": {
														"value": "@activity('sql_to_raw_d365').Duration",
														"type": "Expression"
													},
													"teamWebhookUrl": {
														"value": "@pipeline().globalParameters.teamsWebhookUrl",
														"type": "Expression"
													},
													"notificationTime": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "sql_d365_load_to_raw_fail",
											"type": "Fail",
											"dependsOn": [
												{
													"activity": "d365_raw_load_failure_notification",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"message": {
													"value": "@activity('sql_to_raw_d365').Error['message']",
													"type": "Expression"
												},
												"errorCode": "500"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "pipeline_execution_notification",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "raw_to_curate_sp_call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@if(equals(activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE'],'TRUE'),bool('TRUE'), bool('FALSE'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "pp_stored_procedure_failure_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@toUpper('failed')",
												"type": "Expression"
											},
											"message": {
												"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": {
												"value": "@pipeline().parameters.p_tgt_curate_table_nm",
												"type": "Expression"
											},
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "curate_load_failure",
									"type": "Fail",
									"dependsOn": [
										{
											"activity": "pp_stored_procedure_failure_notification",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@activity('raw_to_curate_sp_call').output.resultSets[0].rows[0]['SP_TASK_INITIALIZE']",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "stored_procedure_success_notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pp_adf_pipeline_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"subscription": {
												"value": "@pipeline().globalParameters.subscriptionId",
												"type": "Expression"
											},
											"resourceGroup": {
												"value": "@pipeline().globalParameters.resourceGroup",
												"type": "Expression"
											},
											"runId": {
												"value": "@coalesce(pipeline().RunId, -1)",
												"type": "Expression"
											},
											"name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"triggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"status": {
												"value": "@activity('raw_to_curate_sp_call').Status",
												"type": "Expression"
											},
											"message": {
												"value": "@concat(pipeline().parameters.p_tgt_curate_table_nm, ' is successfully loaded')",
												"type": "Expression"
											},
											"executionEndTime": {
												"value": "@activity('raw_to_curate_sp_call').ExecutionEndTime",
												"type": "Expression"
											},
											"runDuration": {
												"value": "@activity('raw_to_curate_sp_call').Duration",
												"type": "Expression"
											},
											"teamWebhookUrl": {
												"value": "@pipeline().globalParameters.teamsWebhookUrl",
												"type": "Expression"
											},
											"notificationTime": {
												"value": "@utcNow()",
												"type": "Expression"
											},
											"taskName": {
												"value": "@pipeline().parameters.p_tgt_curate_table_nm",
												"type": "Expression"
											},
											"taskStepNumber": {
												"value": "@pipeline().parameters.p_src_code",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "df_load_fact_ledger_journal_transactions",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "switch_nala_retail_d365",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 300,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_load_fact_ledger_journal_transactions",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SrcLedgerJournalTrans": {
										"p_directory": {
											"value": "@pipeline().parameters.p_temp_directory",
											"type": "Expression"
										},
										"p_root_system": {
											"value": "@pipeline().globalParameters.rootDir",
											"type": "Expression"
										},
										"p_file_name": {
											"value": "@pipeline().parameters.p_temp_file_nm",
											"type": "Expression"
										}
									},
									"FactLedgerJournalTransaction": {
										"p_tgt_table_name": {
											"value": "@pipeline().parameters.p_tgt_raw_table_nm",
											"type": "Expression"
										},
										"p_tgt_schema_name": {
											"value": "@pipeline().parameters.p_tgt_raw_schema_nm",
											"type": "Expression"
										},
										"p_ls_DbName": {
											"value": "@pipeline().globalParameters.snow_rawDb",
											"type": "Expression"
										},
										"p_ls_Env": {
											"value": "@pipeline().globalParameters.environment",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IR-Snowflake-NALA",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_src_nm": {
						"type": "string",
						"defaultValue": "AXNALA"
					},
					"p_tgt_curate_table_nm": {
						"type": "string",
						"defaultValue": "FACT_LEDGER_JOURNAL_TRANSACTIONS"
					},
					"p_tgt_raw_table_nm": {
						"type": "string",
						"defaultValue": "LEDGERJOURNALTRANS"
					},
					"p_tgt_raw_schema_nm": {
						"type": "string",
						"defaultValue": "AX_NALA"
					},
					"p_tgt_curate_schema_nm": {
						"type": "string",
						"defaultValue": "GLOBAL"
					},
					"p_src_table_nm": {
						"type": "string",
						"defaultValue": "LEDGERJOURNALTRANS"
					},
					"p_src_schema_nm": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"p_src_code": {
						"type": "string",
						"defaultValue": "1"
					},
					"p_temp_directory": {
						"type": "string",
						"defaultValue": "temp_files"
					},
					"p_temp_file_nm": {
						"type": "string",
						"defaultValue": "ledgerjournaltrans_nala.parquet"
					}
				},
				"variables": {
					"v_prev_max_timestamp": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-04T13:47:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_load_fact_ledger_journal_transactions')]"
			]
		}
	]
}